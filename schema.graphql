schema {
  query: Query
  mutation: Mutation
}

directive @client on FIELD | FIELD_DEFINITION

type Query {
  htmlConfig: HtmlConfig!
  indexPageConfig: IndexPageConfig!
  currentUser: User

  # Client State

  # Language to use for localized strings.
  localization: Localization! @client
}

type Mutation {
  login(phoneNumber: String!, password: String!): LOGIN_REQUEST_RESULT!

  # Client State

  setLocalizationLanguage(
    language: LocalizationLanguage!
  ): LocalizationLanguage! @client
}

# Client State

type Localization {
  language: LocalizationLanguage!
}

# Server State

# Configuration for index page.
type IndexPageConfig {
  heroBackgroundImageUrl: String!
  heroBackgroundAlpha: Float!
  heroPrimaryText: LocalizedString!
  heroFeatures: [LocalizedString!]!
  heroFooterText: LocalizedString!
  aboutTitle: LocalizedString!
  aboutText: LocalizedString!
  aboutImages: [IndexPageAboutImage!]!
}

# Image and supporting text in index about section.
type IndexPageAboutImage {
  imageUrl: String!
  title: LocalizedString!
  text: LocalizedString!
}

type HtmlConfig {
  googleAnalyticsId: String
  metaKeywords: String
  metaDescription: String
  metaAuthor: String
  metaAbstract: String
  metaCopyright: String
  landingFooter: String
}

type User {
  phoneNumber: String!
  fullName: String!
  emailAddress: String!
  language: LocalizationLanguage!
  role: USER_ROLE!
}

enum USER_ROLE {
  USER
  ADMIN
}

enum LOGIN_REQUEST_RESULT {
  VALID
  INVALID
}

scalar LocalizedString

enum LocalizationLanguage {
  ENGLISH
  HINDI
}
