{"version":3,"file":"static/webpack/static/development/pages/_app.js.1f46747acd744dc7910c.hot-update.js","sources":["webpack:///./lib/client/generated.tsx"],"sourcesContent":["// This is an automatically generated file.\n// DO NOT MODIFY\n// Use the command: \"yarn graphql\" to regenerate.\nimport { models } from \"@join-uniform/common\";\nexport type Maybe<T> = T | null;\n\n\nexport interface CreateCategoryRequest {\n  \n  name: string;\n  \n  education: string;\n  \n  pricePerPaperRs: number;\n  \n  entryId: string;\n}\n\nexport interface CreateEntryRequest {\n  \n  name: string;\n  \n  explanation: string;\n  \n  logoUrl: string;\n}\n\nexport interface UpdateCategoryRequest {\n  \n  name: string;\n  \n  education: string;\n  \n  pricePerPaperRs: number;\n}\n\nexport interface UpdateEntryRequest {\n  \n  name: string;\n  \n  logoUrl: string;\n  \n  description: string;\n}\n\nexport interface UpdateIndexCardsRequest {\n  /** Same as the id for the Entry the IndexCard represents. */\n  id: string;\n  \n  categories: UpdateIndexCardsCategoriesRequest[];\n  \n  colorBlock: string;\n  \n  colorCategoryBackground: string;\n  \n  colorLogoBackground: string;\n  \n  colorTitle: string;\n}\n\nexport interface UpdateIndexCardsCategoriesRequest {\n  /** Id of the category. */\n  id: string;\n  \n  visible: boolean;\n}\n\nexport interface UpdateIndexPageRequest {\n  \n  heroBackgroundImageUrl: string;\n  \n  heroBackgroundAlpha: number;\n  \n  heroPrimaryTextEnglish: string;\n  \n  heroPrimaryTextHindi: Maybe<string>;\n  \n  heroFeatures: models.LocalizedString[];\n  \n  heroFooterTextEnglish: string;\n  \n  heroFooterTextHindi: Maybe<string>;\n  \n  aboutTitleEnglish: string;\n  \n  aboutTitleHindi: Maybe<string>;\n  \n  aboutTextEnglish: string;\n  \n  aboutTextHindi: Maybe<string>;\n  \n  aboutImages: UpdateIndexPageAboutImageRequest[];\n}\n\nexport interface UpdateIndexPageAboutImageRequest {\n  \n  id: string;\n  \n  imageUrl: string;\n  \n  title: models.LocalizedString;\n  \n  text: models.LocalizedString;\n}\n\n/** Represents a localized string. The Hindi field is optional. Fields: - en: String! - hi: String */\nexport type LocalizedString = models.LocalizedString;\n\n\nexport type Json = any;\n\n\n// ====================================================\n// Documents\n// ====================================================\n\n\n\n  export type AdminLayoutDashboardContainerLogoUrlVariables = {\n  }\n\n  export type AdminLayoutDashboardContainerLogoUrlQuery = {\n    __typename?: \"Query\";\n    \n    logoConfig: AdminLayoutDashboardContainerLogoUrlLogoConfig;\n  }\n\n  export type AdminLayoutDashboardContainerLogoUrlLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    url: string;\n  } \n\n  export type EntryManagerCreateCategoryVariables = {\n    request: CreateCategoryRequest;\n  }\n\n  export type EntryManagerCreateCategoryMutation = {\n    __typename?: \"Mutation\";\n    \n    createCategory: EntryManagerCreateCategoryCreateCategory;\n  }\n\n  export type EntryManagerCreateCategoryCreateCategory = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerCreateEntryVariables = {\n    request: CreateEntryRequest;\n  }\n\n  export type EntryManagerCreateEntryMutation = {\n    __typename?: \"Mutation\";\n    \n    createEntry: EntryManagerCreateEntryCreateEntry;\n  }\n\n  export type EntryManagerCreateEntryCreateEntry = EntryManagerEntryPartsFragment\n\n  export type EntryManagerDeleteCategoriesVariables = {\n    categoryIds: string[];\n  }\n\n  export type EntryManagerDeleteCategoriesMutation = {\n    __typename?: \"Mutation\";\n    \n    deleteCategories: EntryManagerDeleteCategoriesDeleteCategories[];\n  }\n\n  export type EntryManagerDeleteCategoriesDeleteCategories = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerDeleteEntriesVariables = {\n    entryIds: string[];\n  }\n\n  export type EntryManagerDeleteEntriesMutation = {\n    __typename?: \"Mutation\";\n    \n    deleteEntries: EntryManagerDeleteEntriesDeleteEntries[];\n  }\n\n  export type EntryManagerDeleteEntriesDeleteEntries = EntryManagerEntryPartsFragment\n\n  export type EntryManagerGetCategoryVariables = {\n    id: string;\n  }\n\n  export type EntryManagerGetCategoryQuery = {\n    __typename?: \"Query\";\n    \n    categoriesByIds: EntryManagerGetCategoryCategoriesByIds[];\n  }\n\n  export type EntryManagerGetCategoryCategoriesByIds = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerGetEntriesVariables = {\n  }\n\n  export type EntryManagerGetEntriesQuery = {\n    __typename?: \"Query\";\n    \n    entries: EntryManagerGetEntriesEntries[];\n  }\n\n  export type EntryManagerGetEntriesEntries = EntryManagerEntryPartsFragment\n\n  export type EntryManagerGetEntryVariables = {\n    entryId: string;\n  }\n\n  export type EntryManagerGetEntryQuery = {\n    __typename?: \"Query\";\n    \n    entriesByIds: EntryManagerGetEntryEntriesByIds[];\n  }\n\n  export type EntryManagerGetEntryEntriesByIds = EntryManagerEntryPartsFragment\n\n  export type EntryManagerSetCategoryActivationStatusesVariables = {\n    categoryIds: string[];\n    activationStatuses: boolean[];\n  }\n\n  export type EntryManagerSetCategoryActivationStatusesMutation = {\n    __typename?: \"Mutation\";\n    \n    setCategoryActivationStatuses: EntryManagerSetCategoryActivationStatusesSetCategoryActivationStatuses[];\n  }\n\n  export type EntryManagerSetCategoryActivationStatusesSetCategoryActivationStatuses = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerUpdateCategoryVariables = {\n    categoryId: string;\n    update: UpdateCategoryRequest;\n  }\n\n  export type EntryManagerUpdateCategoryMutation = {\n    __typename?: \"Mutation\";\n    \n    updateCategory: EntryManagerUpdateCategoryUpdateCategory;\n  }\n\n  export type EntryManagerUpdateCategoryUpdateCategory = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerUpdateEntryVariables = {\n    entryId: string;\n    update: UpdateEntryRequest;\n  }\n\n  export type EntryManagerUpdateEntryMutation = {\n    __typename?: \"Mutation\";\n    \n    updateEntry: EntryManagerUpdateEntryUpdateEntry;\n  }\n\n  export type EntryManagerUpdateEntryUpdateEntry = EntryManagerEntryPartsFragment\n\n  export type IndexManagerGetIndexPageConfigVariables = {\n  }\n\n  export type IndexManagerGetIndexPageConfigQuery = {\n    __typename?: \"Query\";\n    \n    logoConfig: IndexManagerGetIndexPageConfigLogoConfig;\n    \n    indexPageConfig: IndexManagerGetIndexPageConfigIndexPageConfig;\n  }\n\n  export type IndexManagerGetIndexPageConfigLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    id: string;\n    \n    url: string;\n  } \n\n  export type IndexManagerGetIndexPageConfigIndexPageConfig = {\n    __typename?: \"IndexPageConfig\";\n    \n    id: string;\n    \n    heroBackgroundImageUrl: string;\n    \n    heroBackgroundAlpha: number;\n    \n    heroPrimaryText: models.LocalizedString;\n    \n    heroFeatures: models.LocalizedString[];\n    \n    heroFooterText: models.LocalizedString;\n    \n    aboutTitle: models.LocalizedString;\n    \n    aboutText: models.LocalizedString;\n    \n    aboutImages: IndexManagerGetIndexPageConfigAboutImages[];\n  } \n\n  export type IndexManagerGetIndexPageConfigAboutImages = {\n    __typename?: \"IndexPageAboutImage\";\n    \n    id: string;\n    \n    imageUrl: string;\n    \n    title: models.LocalizedString;\n    \n    text: models.LocalizedString;\n  } \n\n  export type IndexManagerUpdateIndexPageVariables = {\n    logoUrl: string;\n    indexPageUpdate: UpdateIndexPageRequest;\n    indexCardsUpdate: UpdateIndexCardsRequest[];\n  }\n\n  export type IndexManagerUpdateIndexPageMutation = {\n    __typename?: \"Mutation\";\n    \n    updateLogoUrl: IndexManagerUpdateIndexPageUpdateLogoUrl;\n    \n    updateIndexPage: IndexManagerUpdateIndexPageUpdateIndexPage;\n    \n    updateIndexCards: IndexManagerUpdateIndexPageUpdateIndexCards[];\n  }\n\n  export type IndexManagerUpdateIndexPageUpdateLogoUrl = {\n    __typename?: \"LogoConfig\";\n    \n    id: string;\n    \n    url: string;\n  } \n\n  export type IndexManagerUpdateIndexPageUpdateIndexPage = {\n    __typename?: \"IndexPageConfig\";\n    \n    id: string;\n    \n    heroBackgroundImageUrl: string;\n    \n    heroBackgroundAlpha: number;\n    \n    heroPrimaryText: models.LocalizedString;\n    \n    heroFeatures: models.LocalizedString[];\n    \n    aboutTitle: models.LocalizedString;\n    \n    aboutText: models.LocalizedString;\n    \n    aboutImages: IndexManagerUpdateIndexPageAboutImages[];\n  } \n\n  export type IndexManagerUpdateIndexPageAboutImages = {\n    __typename?: \"IndexPageAboutImage\";\n    \n    id: string;\n    \n    imageUrl: string;\n    \n    title: models.LocalizedString;\n    \n    text: models.LocalizedString;\n  } \n\n  export type IndexManagerUpdateIndexPageUpdateIndexCards = {\n    __typename?: \"IndexCard\";\n    \n    id: string;\n    \n    categories: IndexManagerUpdateIndexPageCategories[];\n    \n    colorBlock: string;\n    \n    colorCategoryBackground: string;\n    \n    colorLogoBackground: string;\n    \n    colorTitle: string;\n    \n    entryLogoUrl: string;\n  } \n\n  export type IndexManagerUpdateIndexPageCategories = {\n    __typename?: \"IndexCardCategory\";\n    \n    id: string;\n    \n    visible: boolean;\n    \n    title: string;\n  } \n\n  export type LandingGetIndexPageConfigVariables = {\n  }\n\n  export type LandingGetIndexPageConfigQuery = {\n    __typename?: \"Query\";\n    \n    indexPageConfig: LandingGetIndexPageConfigIndexPageConfig;\n    \n    logoConfig: LandingGetIndexPageConfigLogoConfig;\n    \n    indexCards: LandingGetIndexPageConfigIndexCards[];\n  }\n\n  export type LandingGetIndexPageConfigIndexPageConfig = {\n    __typename?: \"IndexPageConfig\";\n    \n    id: string;\n    \n    heroBackgroundImageUrl: string;\n    \n    heroBackgroundAlpha: number;\n    \n    heroPrimaryText: models.LocalizedString;\n    \n    heroFeatures: models.LocalizedString[];\n    \n    heroFooterText: models.LocalizedString;\n    \n    aboutTitle: models.LocalizedString;\n    \n    aboutText: models.LocalizedString;\n    \n    aboutImages: LandingGetIndexPageConfigAboutImages[];\n  } \n\n  export type LandingGetIndexPageConfigAboutImages = {\n    __typename?: \"IndexPageAboutImage\";\n    \n    id: string;\n    \n    title: models.LocalizedString;\n    \n    text: models.LocalizedString;\n    \n    imageUrl: string;\n  } \n\n  export type LandingGetIndexPageConfigLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    id: string;\n    \n    url: string;\n  } \n\n  export type LandingGetIndexPageConfigIndexCards = {\n    __typename?: \"IndexCard\";\n    \n    id: string;\n    \n    title: string;\n    \n    entryLogoUrl: string;\n    \n    categories: LandingGetIndexPageConfigCategories[];\n    \n    colorBlock: string;\n    \n    colorCategoryBackground: string;\n    \n    colorLogoBackground: string;\n    \n    colorTitle: string;\n  } \n\n  export type LandingGetIndexPageConfigCategories = {\n    __typename?: \"IndexCardCategory\";\n    \n    id: string;\n    \n    title: string;\n  } \n\n  export type WithHtmlSeoDocumentHtmlConfigVariables = {\n  }\n\n  export type WithHtmlSeoDocumentHtmlConfigQuery = {\n    __typename?: \"Query\";\n    \n    htmlConfig: WithHtmlSeoDocumentHtmlConfigHtmlConfig;\n  }\n\n  export type WithHtmlSeoDocumentHtmlConfigHtmlConfig = {\n    __typename?: \"HtmlConfig\";\n    \n    googleAnalyticsId: Maybe<string>;\n    \n    metaKeywords: Maybe<string>;\n    \n    metaDescription: Maybe<string>;\n    \n    metaAuthor: Maybe<string>;\n    \n    metaAbstract: Maybe<string>;\n    \n    metaCopyright: Maybe<string>;\n  } \n\n  export type WithLoadingSpinnerAppLogoConfigVariables = {\n  }\n\n  export type WithLoadingSpinnerAppLogoConfigQuery = {\n    __typename?: \"Query\";\n    \n    logoConfig: WithLoadingSpinnerAppLogoConfigLogoConfig;\n  }\n\n  export type WithLoadingSpinnerAppLogoConfigLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    url: string;\n  } \n\n  export type CloudinaryConfigVariables = {\n  }\n\n  export type CloudinaryConfigQuery = {\n    __typename?: \"Query\";\n    \n    cloudinaryCloudName: string;\n    \n    cloudinaryApiKey: string;\n  }\n\n  export type CloudinaryGenerateMediaLibraryAuthenticationTokenVariables = {\n  }\n\n  export type CloudinaryGenerateMediaLibraryAuthenticationTokenMutation = {\n    __typename?: \"Mutation\";\n    \n    generateCloudinaryMediaLibraryAuthenticationToken: CloudinaryGenerateMediaLibraryAuthenticationTokenGenerateCloudinaryMediaLibraryAuthenticationToken;\n  }\n\n  export type CloudinaryGenerateMediaLibraryAuthenticationTokenGenerateCloudinaryMediaLibraryAuthenticationToken = {\n    __typename?: \"CloudinaryMediaWidgetAuthenticationToken\";\n    \n    api_key: string;\n    \n    cloud_name: string;\n    \n    signature: string;\n    \n    timestamp: string;\n    \n    username: string;\n  } \n\n  export type CloudinaryGenerateSignatureVariables = {\n    paramsToSign: Json;\n  }\n\n  export type CloudinaryGenerateSignatureMutation = {\n    __typename?: \"Mutation\";\n    \n    generateCloudinarySignature: string;\n  }\n\n  export type EntryManagerCategoryPartsFragment = {\n    __typename?: \"Category\";\n    \n    id: string;\n    \n    name: string;\n    \n    education: string;\n    \n    pricePerPaperRs: number;\n    \n    activated: boolean;\n  }\n\n  export type EntryManagerEntryPartsFragment = {\n    __typename?: \"Entry\";\n    \n    id: string;\n    \n    name: string;\n    \n    logoUrl: string;\n    \n    description: string;\n    \n    categories: EntryManagerEntryPartsCategories[];\n  }\n\n  export type EntryManagerEntryPartsCategories =EntryManagerCategoryPartsFragment\n\nimport * as ReactApollo from 'react-apollo';\nimport * as React from 'react';\n\nimport gql from 'graphql-tag';\n\n\n\n// ====================================================\n// Fragments\n// ====================================================\n\n\n\n          export const EntryManagerCategoryPartsFragmentDoc = gql`\n    fragment EntryManagerCategoryParts on Category {\n  id\n  name\n  education\n  pricePerPaperRs\n  activated\n}\n    \n      \n    \n  `;\n        \n\n          export const EntryManagerEntryPartsFragmentDoc = gql`\n    fragment EntryManagerEntryParts on Entry {\n  id\n  name\n  logoUrl\n  description\n  categories {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n        \n\n\n\n// ====================================================\n// Components\n// ====================================================\n\n\n    export const AdminLayoutDashboardContainerLogoUrlDocument = gql`\n    query AdminLayoutDashboardContainerLogoUrl {\n  logoConfig {\n    url\n  }\n}\n    \n      \n    \n  `;\n     export class AdminLayoutDashboardContainerLogoUrlComponent extends React.Component<Partial<ReactApollo.QueryProps<AdminLayoutDashboardContainerLogoUrlQuery, AdminLayoutDashboardContainerLogoUrlVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<AdminLayoutDashboardContainerLogoUrlQuery, AdminLayoutDashboardContainerLogoUrlVariables>\n                query={ AdminLayoutDashboardContainerLogoUrlDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type AdminLayoutDashboardContainerLogoUrlProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        AdminLayoutDashboardContainerLogoUrlQuery, \n                                        AdminLayoutDashboardContainerLogoUrlVariables\n                                    >\n                    >\n         & TChildProps;\n    export function AdminLayoutDashboardContainerLogoUrlHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                AdminLayoutDashboardContainerLogoUrlQuery,\n                AdminLayoutDashboardContainerLogoUrlVariables,\n                AdminLayoutDashboardContainerLogoUrlProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, AdminLayoutDashboardContainerLogoUrlQuery, AdminLayoutDashboardContainerLogoUrlVariables, AdminLayoutDashboardContainerLogoUrlProps<TChildProps>>(\n            AdminLayoutDashboardContainerLogoUrlDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerCreateCategoryDocument = gql`\n    mutation EntryManagerCreateCategory($request: CreateCategoryRequest!) {\n  createCategory(request: $request) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerCreateCategoryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables>\n                mutation={ EntryManagerCreateCategoryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerCreateCategoryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerCreateCategoryMutation, \n                                        EntryManagerCreateCategoryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerCreateCategoryMutationFn = ReactApollo.MutationFn<EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables>;\n    export function EntryManagerCreateCategoryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerCreateCategoryMutation,\n                EntryManagerCreateCategoryVariables,\n                EntryManagerCreateCategoryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables, EntryManagerCreateCategoryProps<TChildProps>>(\n            EntryManagerCreateCategoryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerCreateEntryDocument = gql`\n    mutation EntryManagerCreateEntry($request: CreateEntryRequest!) {\n  createEntry(request: $request) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerCreateEntryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables>\n                mutation={ EntryManagerCreateEntryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerCreateEntryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerCreateEntryMutation, \n                                        EntryManagerCreateEntryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerCreateEntryMutationFn = ReactApollo.MutationFn<EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables>;\n    export function EntryManagerCreateEntryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerCreateEntryMutation,\n                EntryManagerCreateEntryVariables,\n                EntryManagerCreateEntryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables, EntryManagerCreateEntryProps<TChildProps>>(\n            EntryManagerCreateEntryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerDeleteCategoriesDocument = gql`\n    mutation EntryManagerDeleteCategories($categoryIds: [ID!]!) {\n  deleteCategories(categoryIds: $categoryIds) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerDeleteCategoriesComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables>\n                mutation={ EntryManagerDeleteCategoriesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerDeleteCategoriesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerDeleteCategoriesMutation, \n                                        EntryManagerDeleteCategoriesVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerDeleteCategoriesMutationFn = ReactApollo.MutationFn<EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables>;\n    export function EntryManagerDeleteCategoriesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerDeleteCategoriesMutation,\n                EntryManagerDeleteCategoriesVariables,\n                EntryManagerDeleteCategoriesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables, EntryManagerDeleteCategoriesProps<TChildProps>>(\n            EntryManagerDeleteCategoriesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerDeleteEntriesDocument = gql`\n    mutation EntryManagerDeleteEntries($entryIds: [ID!]!) {\n  deleteEntries(entryIds: $entryIds) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerDeleteEntriesComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables>\n                mutation={ EntryManagerDeleteEntriesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerDeleteEntriesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerDeleteEntriesMutation, \n                                        EntryManagerDeleteEntriesVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerDeleteEntriesMutationFn = ReactApollo.MutationFn<EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables>;\n    export function EntryManagerDeleteEntriesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerDeleteEntriesMutation,\n                EntryManagerDeleteEntriesVariables,\n                EntryManagerDeleteEntriesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables, EntryManagerDeleteEntriesProps<TChildProps>>(\n            EntryManagerDeleteEntriesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerGetCategoryDocument = gql`\n    query EntryManagerGetCategory($id: ID!) {\n  categoriesByIds(ids: [$id]) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerGetCategoryComponent extends React.Component<Partial<ReactApollo.QueryProps<EntryManagerGetCategoryQuery, EntryManagerGetCategoryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<EntryManagerGetCategoryQuery, EntryManagerGetCategoryVariables>\n                query={ EntryManagerGetCategoryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerGetCategoryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        EntryManagerGetCategoryQuery, \n                                        EntryManagerGetCategoryVariables\n                                    >\n                    >\n         & TChildProps;\n    export function EntryManagerGetCategoryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerGetCategoryQuery,\n                EntryManagerGetCategoryVariables,\n                EntryManagerGetCategoryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerGetCategoryQuery, EntryManagerGetCategoryVariables, EntryManagerGetCategoryProps<TChildProps>>(\n            EntryManagerGetCategoryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerGetEntriesDocument = gql`\n    query EntryManagerGetEntries {\n  entries {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerGetEntriesComponent extends React.Component<Partial<ReactApollo.QueryProps<EntryManagerGetEntriesQuery, EntryManagerGetEntriesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<EntryManagerGetEntriesQuery, EntryManagerGetEntriesVariables>\n                query={ EntryManagerGetEntriesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerGetEntriesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        EntryManagerGetEntriesQuery, \n                                        EntryManagerGetEntriesVariables\n                                    >\n                    >\n         & TChildProps;\n    export function EntryManagerGetEntriesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerGetEntriesQuery,\n                EntryManagerGetEntriesVariables,\n                EntryManagerGetEntriesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerGetEntriesQuery, EntryManagerGetEntriesVariables, EntryManagerGetEntriesProps<TChildProps>>(\n            EntryManagerGetEntriesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerGetEntryDocument = gql`\n    query EntryManagerGetEntry($entryId: ID!) {\n  entriesByIds(ids: [$entryId]) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerGetEntryComponent extends React.Component<Partial<ReactApollo.QueryProps<EntryManagerGetEntryQuery, EntryManagerGetEntryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<EntryManagerGetEntryQuery, EntryManagerGetEntryVariables>\n                query={ EntryManagerGetEntryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerGetEntryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        EntryManagerGetEntryQuery, \n                                        EntryManagerGetEntryVariables\n                                    >\n                    >\n         & TChildProps;\n    export function EntryManagerGetEntryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerGetEntryQuery,\n                EntryManagerGetEntryVariables,\n                EntryManagerGetEntryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerGetEntryQuery, EntryManagerGetEntryVariables, EntryManagerGetEntryProps<TChildProps>>(\n            EntryManagerGetEntryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerSetCategoryActivationStatusesDocument = gql`\n    mutation EntryManagerSetCategoryActivationStatuses($categoryIds: [ID!]!, $activationStatuses: [Boolean!]!) {\n  setCategoryActivationStatuses(categoryIds: $categoryIds, activatedStatuses: $activationStatuses) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerSetCategoryActivationStatusesComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables>\n                mutation={ EntryManagerSetCategoryActivationStatusesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerSetCategoryActivationStatusesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerSetCategoryActivationStatusesMutation, \n                                        EntryManagerSetCategoryActivationStatusesVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerSetCategoryActivationStatusesMutationFn = ReactApollo.MutationFn<EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables>;\n    export function EntryManagerSetCategoryActivationStatusesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerSetCategoryActivationStatusesMutation,\n                EntryManagerSetCategoryActivationStatusesVariables,\n                EntryManagerSetCategoryActivationStatusesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables, EntryManagerSetCategoryActivationStatusesProps<TChildProps>>(\n            EntryManagerSetCategoryActivationStatusesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerUpdateCategoryDocument = gql`\n    mutation EntryManagerUpdateCategory($categoryId: ID!, $update: UpdateCategoryRequest!) {\n  updateCategory(categoryId: $categoryId, update: $update) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerUpdateCategoryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables>\n                mutation={ EntryManagerUpdateCategoryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerUpdateCategoryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerUpdateCategoryMutation, \n                                        EntryManagerUpdateCategoryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerUpdateCategoryMutationFn = ReactApollo.MutationFn<EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables>;\n    export function EntryManagerUpdateCategoryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerUpdateCategoryMutation,\n                EntryManagerUpdateCategoryVariables,\n                EntryManagerUpdateCategoryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables, EntryManagerUpdateCategoryProps<TChildProps>>(\n            EntryManagerUpdateCategoryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerUpdateEntryDocument = gql`\n    mutation EntryManagerUpdateEntry($entryId: ID!, $update: UpdateEntryRequest!) {\n  updateEntry(entryId: $entryId, update: $update) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerUpdateEntryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables>\n                mutation={ EntryManagerUpdateEntryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerUpdateEntryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerUpdateEntryMutation, \n                                        EntryManagerUpdateEntryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerUpdateEntryMutationFn = ReactApollo.MutationFn<EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables>;\n    export function EntryManagerUpdateEntryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerUpdateEntryMutation,\n                EntryManagerUpdateEntryVariables,\n                EntryManagerUpdateEntryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables, EntryManagerUpdateEntryProps<TChildProps>>(\n            EntryManagerUpdateEntryDocument,\n            operationOptions\n        );\n    };\n    export const IndexManagerGetIndexPageConfigDocument = gql`\n    query IndexManagerGetIndexPageConfig {\n  logoConfig {\n    id\n    url\n  }\n  indexPageConfig {\n    id\n    heroBackgroundImageUrl\n    heroBackgroundAlpha\n    heroPrimaryText\n    heroFeatures\n    heroFooterText\n    aboutTitle\n    aboutText\n    aboutImages {\n      id\n      imageUrl\n      title\n      text\n    }\n  }\n}\n    \n      \n    \n  `;\n     export class IndexManagerGetIndexPageConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<IndexManagerGetIndexPageConfigQuery, IndexManagerGetIndexPageConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<IndexManagerGetIndexPageConfigQuery, IndexManagerGetIndexPageConfigVariables>\n                query={ IndexManagerGetIndexPageConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type IndexManagerGetIndexPageConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        IndexManagerGetIndexPageConfigQuery, \n                                        IndexManagerGetIndexPageConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function IndexManagerGetIndexPageConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                IndexManagerGetIndexPageConfigQuery,\n                IndexManagerGetIndexPageConfigVariables,\n                IndexManagerGetIndexPageConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, IndexManagerGetIndexPageConfigQuery, IndexManagerGetIndexPageConfigVariables, IndexManagerGetIndexPageConfigProps<TChildProps>>(\n            IndexManagerGetIndexPageConfigDocument,\n            operationOptions\n        );\n    };\n    export const IndexManagerUpdateIndexPageDocument = gql`\n    mutation IndexManagerUpdateIndexPage($logoUrl: String!, $indexPageUpdate: UpdateIndexPageRequest!, $indexCardsUpdate: [UpdateIndexCardsRequest!]!) {\n  updateLogoUrl(logoUrl: $logoUrl) {\n    id\n    url\n  }\n  updateIndexPage(request: $indexPageUpdate) {\n    id\n    heroBackgroundImageUrl\n    heroBackgroundAlpha\n    heroPrimaryText\n    heroFeatures\n    aboutTitle\n    aboutText\n    aboutImages {\n      id\n      imageUrl\n      title\n      text\n    }\n  }\n  updateIndexCards(request: $indexCardsUpdate) {\n    id\n    categories {\n      id\n      visible\n      title\n    }\n    colorBlock\n    colorCategoryBackground\n    colorLogoBackground\n    colorTitle\n    entryLogoUrl\n  }\n}\n    \n      \n    \n  `;\n     export class IndexManagerUpdateIndexPageComponent extends React.Component<Partial<ReactApollo.MutationProps<IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables>\n                mutation={ IndexManagerUpdateIndexPageDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type IndexManagerUpdateIndexPageProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        IndexManagerUpdateIndexPageMutation, \n                                        IndexManagerUpdateIndexPageVariables\n                                        >\n                >\n         & TChildProps;\n    export type IndexManagerUpdateIndexPageMutationFn = ReactApollo.MutationFn<IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables>;\n    export function IndexManagerUpdateIndexPageHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                IndexManagerUpdateIndexPageMutation,\n                IndexManagerUpdateIndexPageVariables,\n                IndexManagerUpdateIndexPageProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables, IndexManagerUpdateIndexPageProps<TChildProps>>(\n            IndexManagerUpdateIndexPageDocument,\n            operationOptions\n        );\n    };\n    export const LandingGetIndexPageConfigDocument = gql`\n    query LandingGetIndexPageConfig {\n  indexPageConfig {\n    id\n    heroBackgroundImageUrl\n    heroBackgroundAlpha\n    heroPrimaryText\n    heroFeatures\n    heroFooterText\n    aboutTitle\n    aboutText\n    aboutImages {\n      id\n      title\n      text\n      imageUrl\n    }\n  }\n  logoConfig {\n    id\n    url\n  }\n  indexCards {\n    id\n    title\n    entryLogoUrl\n    categories {\n      id\n      title\n    }\n    colorBlock\n    colorCategoryBackground\n    colorLogoBackground\n    colorTitle\n  }\n}\n    \n      \n    \n  `;\n     export class LandingGetIndexPageConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<LandingGetIndexPageConfigQuery, LandingGetIndexPageConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<LandingGetIndexPageConfigQuery, LandingGetIndexPageConfigVariables>\n                query={ LandingGetIndexPageConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type LandingGetIndexPageConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        LandingGetIndexPageConfigQuery, \n                                        LandingGetIndexPageConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function LandingGetIndexPageConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                LandingGetIndexPageConfigQuery,\n                LandingGetIndexPageConfigVariables,\n                LandingGetIndexPageConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, LandingGetIndexPageConfigQuery, LandingGetIndexPageConfigVariables, LandingGetIndexPageConfigProps<TChildProps>>(\n            LandingGetIndexPageConfigDocument,\n            operationOptions\n        );\n    };\n    export const WithHtmlSeoDocumentHtmlConfigDocument = gql`\n    query WithHtmlSeoDocumentHtmlConfig {\n  htmlConfig {\n    googleAnalyticsId\n    metaKeywords\n    metaDescription\n    metaAuthor\n    metaAbstract\n    metaCopyright\n  }\n}\n    \n      \n    \n  `;\n     export class WithHtmlSeoDocumentHtmlConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<WithHtmlSeoDocumentHtmlConfigQuery, WithHtmlSeoDocumentHtmlConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<WithHtmlSeoDocumentHtmlConfigQuery, WithHtmlSeoDocumentHtmlConfigVariables>\n                query={ WithHtmlSeoDocumentHtmlConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type WithHtmlSeoDocumentHtmlConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        WithHtmlSeoDocumentHtmlConfigQuery, \n                                        WithHtmlSeoDocumentHtmlConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function WithHtmlSeoDocumentHtmlConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                WithHtmlSeoDocumentHtmlConfigQuery,\n                WithHtmlSeoDocumentHtmlConfigVariables,\n                WithHtmlSeoDocumentHtmlConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, WithHtmlSeoDocumentHtmlConfigQuery, WithHtmlSeoDocumentHtmlConfigVariables, WithHtmlSeoDocumentHtmlConfigProps<TChildProps>>(\n            WithHtmlSeoDocumentHtmlConfigDocument,\n            operationOptions\n        );\n    };\n    export const WithLoadingSpinnerAppLogoConfigDocument = gql`\n    query WithLoadingSpinnerAppLogoConfig {\n  logoConfig {\n    url\n  }\n}\n    \n      \n    \n  `;\n     export class WithLoadingSpinnerAppLogoConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<WithLoadingSpinnerAppLogoConfigQuery, WithLoadingSpinnerAppLogoConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<WithLoadingSpinnerAppLogoConfigQuery, WithLoadingSpinnerAppLogoConfigVariables>\n                query={ WithLoadingSpinnerAppLogoConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type WithLoadingSpinnerAppLogoConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        WithLoadingSpinnerAppLogoConfigQuery, \n                                        WithLoadingSpinnerAppLogoConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function WithLoadingSpinnerAppLogoConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                WithLoadingSpinnerAppLogoConfigQuery,\n                WithLoadingSpinnerAppLogoConfigVariables,\n                WithLoadingSpinnerAppLogoConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, WithLoadingSpinnerAppLogoConfigQuery, WithLoadingSpinnerAppLogoConfigVariables, WithLoadingSpinnerAppLogoConfigProps<TChildProps>>(\n            WithLoadingSpinnerAppLogoConfigDocument,\n            operationOptions\n        );\n    };\n    export const CloudinaryConfigDocument = gql`\n    query CloudinaryConfig {\n  cloudinaryCloudName\n  cloudinaryApiKey\n}\n    \n      \n    \n  `;\n     export class CloudinaryConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<CloudinaryConfigQuery, CloudinaryConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<CloudinaryConfigQuery, CloudinaryConfigVariables>\n                query={ CloudinaryConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type CloudinaryConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        CloudinaryConfigQuery, \n                                        CloudinaryConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function CloudinaryConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                CloudinaryConfigQuery,\n                CloudinaryConfigVariables,\n                CloudinaryConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, CloudinaryConfigQuery, CloudinaryConfigVariables, CloudinaryConfigProps<TChildProps>>(\n            CloudinaryConfigDocument,\n            operationOptions\n        );\n    };\n    export const CloudinaryGenerateMediaLibraryAuthenticationTokenDocument = gql`\n    mutation CloudinaryGenerateMediaLibraryAuthenticationToken {\n  generateCloudinaryMediaLibraryAuthenticationToken {\n    api_key\n    cloud_name\n    signature\n    timestamp\n    username\n  }\n}\n    \n      \n    \n  `;\n     export class CloudinaryGenerateMediaLibraryAuthenticationTokenComponent extends React.Component<Partial<ReactApollo.MutationProps<CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables>\n                mutation={ CloudinaryGenerateMediaLibraryAuthenticationTokenDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type CloudinaryGenerateMediaLibraryAuthenticationTokenProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, \n                                        CloudinaryGenerateMediaLibraryAuthenticationTokenVariables\n                                        >\n                >\n         & TChildProps;\n    export type CloudinaryGenerateMediaLibraryAuthenticationTokenMutationFn = ReactApollo.MutationFn<CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables>;\n    export function CloudinaryGenerateMediaLibraryAuthenticationTokenHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                CloudinaryGenerateMediaLibraryAuthenticationTokenMutation,\n                CloudinaryGenerateMediaLibraryAuthenticationTokenVariables,\n                CloudinaryGenerateMediaLibraryAuthenticationTokenProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables, CloudinaryGenerateMediaLibraryAuthenticationTokenProps<TChildProps>>(\n            CloudinaryGenerateMediaLibraryAuthenticationTokenDocument,\n            operationOptions\n        );\n    };\n    export const CloudinaryGenerateSignatureDocument = gql`\n    mutation CloudinaryGenerateSignature($paramsToSign: Json!) {\n  generateCloudinarySignature(paramsToSign: $paramsToSign)\n}\n    \n      \n    \n  `;\n     export class CloudinaryGenerateSignatureComponent extends React.Component<Partial<ReactApollo.MutationProps<CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables>\n                mutation={ CloudinaryGenerateSignatureDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type CloudinaryGenerateSignatureProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        CloudinaryGenerateSignatureMutation, \n                                        CloudinaryGenerateSignatureVariables\n                                        >\n                >\n         & TChildProps;\n    export type CloudinaryGenerateSignatureMutationFn = ReactApollo.MutationFn<CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables>;\n    export function CloudinaryGenerateSignatureHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                CloudinaryGenerateSignatureMutation,\n                CloudinaryGenerateSignatureVariables,\n                CloudinaryGenerateSignatureProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables, CloudinaryGenerateSignatureProps<TChildProps>>(\n            CloudinaryGenerateSignatureDocument,\n            operationOptions\n        );\n    };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6jBA;AACA;AAMA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;A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","sourceRoot":""}