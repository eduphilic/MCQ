{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppBar/AppBar.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppBar/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppDrawer/AppDrawer.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppDrawer/AppDrawerContext.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppDrawer/LinkListItem.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppDrawer/LogoListItem.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppDrawer/ResponsiveDrawer.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppDrawer/generateToolbarHeightBasedCss.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/AppDrawer/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Button/Button.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Button/Typography/Typography.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Button/Typography/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Button/Typography/styleTable.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Button/Typography/types.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Button/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Card/Card.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Card/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/CardActionArea/CardActionArea.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/CardActionArea/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/CardHeader/CardHeader.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/CardHeader/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/DashboardCard.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/DashboardCardColumnComponents.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/DashboardCardModeContext.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/DashboardCardPagination.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/DashboardCardPaginationHeaderToolbar.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/DashboardCardTable.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/DashboardCardTitleToolbar.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardCard/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardTableRow/DashboardTableRow.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DashboardTableRow/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DraggableList/DraggableList.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/DraggableList/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Grid/Grid.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Grid/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/GridHideable/GridHideable.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/GridHideable/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Hidden/Hidden.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/Hidden/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/ImagePicker/ImagePicker.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/ImagePicker/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/IndexCard/IndexCard.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/IndexCard/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LayoutDashboard/LayoutDashboard.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LayoutDashboard/ResponsiveAppBar.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LayoutDashboard/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LayoutLanding/LayoutLanding.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LayoutLanding/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LoadingSpinner/LoadingSpinner.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LoadingSpinner/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LogoText/LogoText.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/LogoText/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/PendingChangesButton/PendingChangesButton.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/PendingChangesButton/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/ResponsiveIconTextButton/ResponsiveIconTextButton.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/ResponsiveIconTextButton/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/SubmissionProgressDialog/SubmissionProgressDialog.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/SubmissionProgressDialog/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/adminTypography.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/components/src/muiComponents.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/icons/src/CheckboxMarkedCircleOutlineIcon.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/icons/src/CloseCircleOutlineIcon.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/icons/src/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/localization/src/index.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/localization/src/translations.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/theme/src/ThemeBaseline.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/theme/src/index.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/theme/src/mixins.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/theme/src/styledComponents.ts","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/theme/src/themeProviders.tsx","webpack:////home/jason/code/clients/bhartitest/node_modules/@join-uniform/theme/src/themes.ts","webpack:///./lib/client/generated.tsx","webpack:///./lib/client/index.ts","webpack:///./lib/rendering/SubmissionProgressDialog.tsx","webpack:///./lib/rendering/apollo/index.ts","webpack:///./lib/rendering/apollo/initializeApollo.ts","webpack:///./lib/rendering/apollo/link.ts","webpack:///./lib/rendering/apollo/mutationCounterLink.ts","webpack:///./lib/rendering/apollo/withApolloApp.tsx","webpack:///./lib/rendering/index.ts","webpack:///./lib/rendering/material-ui/MaterialUIThemeProvider.tsx","webpack:///./lib/rendering/material-ui/createMUICssContext.ts","webpack:///./lib/rendering/material-ui/index.ts","webpack:///./lib/rendering/material-ui/withMaterialUIApp.tsx","webpack:///./lib/rendering/material-ui/withMaterialUIDocument.tsx","webpack:///./lib/rendering/seo/GoogleAnalyticsTag.tsx","webpack:///./lib/rendering/seo/SeoTags.tsx","webpack:///./lib/rendering/seo/index.ts","webpack:///./lib/rendering/seo/withHtmlSeoDocument.tsx","webpack:///./lib/rendering/styled-components/index.ts","webpack:///./lib/rendering/styled-components/withStyledComponentsDocument.tsx","webpack:///./lib/rendering/withLoadingSpinnerApp.tsx","webpack:///./lib/utils/Cloudinary.tsx","webpack:///./lib/utils/createResponsiveImageUrl.ts","webpack:///./lib/utils/index.ts","webpack:///./lib/utils/withQueryLoadingSpinner.tsx","webpack:///./pages/_app.tsx","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@material-ui/core/AppBar\"","webpack:///external \"@material-ui/core/Avatar\"","webpack:///external \"@material-ui/core/Button\"","webpack:///external \"@material-ui/core/Card\"","webpack:///external \"@material-ui/core/CardActions\"","webpack:///external \"@material-ui/core/CardContent\"","webpack:///external \"@material-ui/core/Checkbox\"","webpack:///external \"@material-ui/core/CircularProgress\"","webpack:///external \"@material-ui/core/CssBaseline\"","webpack:///external \"@material-ui/core/Dialog\"","webpack:///external \"@material-ui/core/DialogContent\"","webpack:///external \"@material-ui/core/Divider\"","webpack:///external \"@material-ui/core/Drawer\"","webpack:///external \"@material-ui/core/Fade\"","webpack:///external \"@material-ui/core/FormControl\"","webpack:///external \"@material-ui/core/FormControlLabel\"","webpack:///external \"@material-ui/core/FormLabel\"","webpack:///external \"@material-ui/core/Grid\"","webpack:///external \"@material-ui/core/Hidden\"","webpack:///external \"@material-ui/core/Icon\"","webpack:///external \"@material-ui/core/IconButton\"","webpack:///external \"@material-ui/core/Input\"","webpack:///external \"@material-ui/core/InputLabel\"","webpack:///external \"@material-ui/core/List\"","webpack:///external \"@material-ui/core/ListItem\"","webpack:///external \"@material-ui/core/ListItemIcon\"","webpack:///external \"@material-ui/core/ListItemText\"","webpack:///external \"@material-ui/core/MenuItem\"","webpack:///external \"@material-ui/core/Paper\"","webpack:///external \"@material-ui/core/Popover\"","webpack:///external \"@material-ui/core/Radio\"","webpack:///external \"@material-ui/core/RadioGroup\"","webpack:///external \"@material-ui/core/Select\"","webpack:///external \"@material-ui/core/SvgIcon\"","webpack:///external \"@material-ui/core/Switch\"","webpack:///external \"@material-ui/core/Table\"","webpack:///external \"@material-ui/core/TableBody\"","webpack:///external \"@material-ui/core/TableCell\"","webpack:///external \"@material-ui/core/TableFooter\"","webpack:///external \"@material-ui/core/TableHead\"","webpack:///external \"@material-ui/core/TablePagination\"","webpack:///external \"@material-ui/core/TableRow\"","webpack:///external \"@material-ui/core/TextField\"","webpack:///external \"@material-ui/core/Toolbar\"","webpack:///external \"@material-ui/core/Tooltip\"","webpack:///external \"@material-ui/core/Typography\"","webpack:///external \"@material-ui/core/styles\"","webpack:///external \"@material-ui/core/styles/MuiThemeProvider\"","webpack:///external \"@material-ui/core/styles/colorManipulator\"","webpack:///external \"@material-ui/core/styles/createBreakpoints\"","webpack:///external \"@material-ui/core/styles/createGenerateClassName\"","webpack:///external \"@material-ui/core/styles/createMuiTheme\"","webpack:///external \"@material-ui/icons/Add\"","webpack:///external \"@material-ui/icons/CloudUpload\"","webpack:///external \"@material-ui/icons/Collections\"","webpack:///external \"@material-ui/icons/Dashboard\"","webpack:///external \"@material-ui/icons/Delete\"","webpack:///external \"@material-ui/icons/Done\"","webpack:///external \"@material-ui/icons/DragHandle\"","webpack:///external \"@material-ui/icons/Edit\"","webpack:///external \"@material-ui/icons/Menu\"","webpack:///external \"@material-ui/icons/PowerSettingsNew\"","webpack:///external \"@material-ui/icons/Remove\"","webpack:///external \"@material-ui/icons/Texture\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-link-error\"","webpack:///external \"apollo-link-http\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"jss\"","webpack:///external \"next/app\"","webpack:///external \"next/config\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-jss/lib/JssProvider\"","webpack:///external \"react-localization\"","webpack:///external \"react-sortable-hoc\"","webpack:///external \"styled-components\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { MenuIcon, PowerSettingsNewIcon } from \"@join-uniform/icons\";\nimport { css, styled } from \"@join-uniform/theme\";\nimport MuiAppBar from \"@material-ui/core/AppBar\";\nimport IconButton, { IconButtonProps } from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport React, { FC, ReactElement, ReactNode } from \"react\";\nimport { Grid } from \"../Grid\";\nimport { Hidden } from \"../Hidden\";\nimport { Typography, TypographyProps } from \"../muiComponents\";\n\nexport type AppBarProps = {\n  /** Title text. */\n  title: string;\n\n  /** Buttons to render to the left of the logout button. */\n  buttons?: ReactElement<any>[];\n\n  /** Called on hamburger button click. */\n  onDrawerToggleButtonClick: () => void;\n\n  /** Called on logout button click. */\n  onLogoutButtonClick: () => void;\n};\n\n/**\n * Application app bar. Displays hamburger button on mobile.\n */\nexport function AppBar(props: AppBarProps) {\n  const {\n    title,\n    buttons,\n    onDrawerToggleButtonClick,\n    onLogoutButtonClick,\n  } = props;\n\n  return (\n    <Wrapper>\n      <DrawerToggleButton onClick={onDrawerToggleButtonClick} />\n      <Title title={title} />\n      {buttons && <ButtonsContainer buttons={buttons} />}\n      <LogoutButton onClick={onLogoutButtonClick} />\n    </Wrapper>\n  );\n}\n\nfunction Wrapper(props: { children?: ReactNode }) {\n  const { children } = props;\n\n  return (\n    <MuiAppBar position=\"static\" color=\"inherit\">\n      <Toolbar>\n        <Grid container justify=\"space-between\" alignItems=\"center\">\n          {children}\n        </Grid>\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n\nfunction DrawerToggleButton(props: { onClick: () => void }) {\n  const { onClick } = props;\n\n  return (\n    <Grid item>\n      <AppBarIconButton\n        color=\"inherit\"\n        aria-label=\"Menu\"\n        onClick={onClick}\n        reducedLeftMargin\n        mobileOnly\n      >\n        <MenuIcon />\n      </AppBarIconButton>\n    </Grid>\n  );\n}\n\nfunction Title(props: { title: string }) {\n  const { title } = props;\n\n  return (\n    <Grid item xs>\n      <Hidden implementation=\"css\" smDown>\n        <AppBarTypography variant=\"h6\" color=\"inherit\">\n          {title}\n        </AppBarTypography>\n      </Hidden>\n    </Grid>\n  );\n}\n\nconst AppBarTypography = styled(Typography as FC<TypographyProps>)`\n  font-weight: 400;\n`;\n\nfunction ButtonsContainer(props: { buttons: ReactElement<any>[] }) {\n  const { buttons } = props;\n\n  return (\n    <>\n      {buttons.map((button, index) => (\n        <Grid key={button.key || index} item>\n          {button}\n        </Grid>\n      ))}\n    </>\n  );\n}\n\nfunction LogoutButton(props: { onClick: () => void }) {\n  const { onClick } = props;\n\n  return (\n    <Grid item>\n      <AppBarIconButton reducedRightMargin red onClick={onClick}>\n        <PowerSettingsNewIcon />\n      </AppBarIconButton>\n    </Grid>\n  );\n}\n\nconst AppBarIconButton = styled(\n  (\n    props: IconButtonProps & {\n      reducedLeftMargin?: boolean;\n      reducedRightMargin?: boolean;\n      mobileOnly?: boolean;\n      red?: boolean;\n    },\n  ) => {\n    const {\n      reducedLeftMargin,\n      mobileOnly,\n      reducedRightMargin,\n      red,\n      ...rest\n    } = props;\n\n    return <IconButton {...rest} />;\n  },\n)`\n  ${props =>\n    props.reducedLeftMargin &&\n    css`\n      margin-left: -12px;\n    `};\n  ${props =>\n    props.mobileOnly &&\n    css`\n      ${({ theme }) => theme.breakpoints.up(\"md\")} {\n        display: none;\n      }\n    `};\n\n  ${props =>\n    props.reducedRightMargin &&\n    css`\n      margin-right: -12px;\n    `};\n  ${props =>\n    props.red &&\n    css`\n      color: ${({ theme }) => theme.palette.error.dark};\n    `};\n`;\n","export * from \"./AppBar\";\n","import {\n  AdminAppDrawerTheme,\n  styled,\n  UserAppDrawerTheme,\n} from \"@join-uniform/theme\";\nimport Drawer, { DrawerProps } from \"@material-ui/core/Drawer\";\nimport List, { ListProps } from \"@material-ui/core/List\";\nimport React, { FC } from \"react\";\nimport { AppDrawerLinkProps } from \"./AppDrawerLinkProps\";\nimport { LinkListItem } from \"./LinkListItem\";\nimport { LogoListItem } from \"./LogoListItem\";\nimport { ResponsiveDrawer } from \"./ResponsiveDrawer\";\n\nexport const drawerWidth = 240;\n\ntype Links = Omit<AppDrawerLinkProps, \"LinkComponent\">[];\n\nexport type AppDrawerProps = {\n  /** Drawer theme. Either admin dashboard theme or user dashboard theme. */\n  theme: \"admin\" | \"user\";\n\n  /** Logo image url. Image should be 48px by 48px. */\n  logoSrc: string;\n\n  /**\n   * Drawer links. The first also used as the home link for the logo image\n   * button.\n   */\n  links: Links;\n\n  /**\n   * Link component to wrap drawer links in for navigation/routing purposes. The\n   * component should set the class \"active\" on the parent child.\n   */\n  LinkComponent: AppDrawerLinkProps[\"LinkComponent\"];\n};\n\nexport function AppDrawer(props: AppDrawerProps) {\n  const { theme, logoSrc, links, LinkComponent } = props;\n  const ThemeProvider =\n    theme === \"admin\" ? AdminAppDrawerTheme : UserAppDrawerTheme;\n\n  return (\n    <ThemeProvider>\n      <ResponsiveDrawer Drawer={StyledDrawer}>\n        <LinksList>\n          <LogoListItem\n            src={logoSrc}\n            href={links[0].href}\n            LinkComponent={LinkComponent}\n          />\n\n          {links.map(link => (\n            <LinkListItem\n              key={link.href}\n              href={link.href}\n              title={link.title}\n              hiddenSubPage={link.hiddenSubPage}\n              LinkComponent={LinkComponent}\n            />\n          ))}\n        </LinksList>\n      </ResponsiveDrawer>\n    </ThemeProvider>\n  );\n}\n\nconst StyledDrawer = styled(Drawer as FC<DrawerProps>).attrs({\n  classes: { paper: \"drawer-paper\" },\n})`\n  .drawer-paper {\n    width: ${drawerWidth}px;\n    background-color: ${({ theme }) => theme.palette.background.default};\n  }\n`;\n\nconst LinksList = styled(List as FC<ListProps>)`\n  padding-top: 0px;\n`;\n","import React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from \"react\";\n\ntype AppDrawerContextValue = {\n  open: boolean;\n  toggle: () => void;\n};\n\nconst AppDrawerContext = createContext<AppDrawerContextValue>({\n  open: false,\n  toggle: () => {\n    throw new Error(\n      \"App drawer context consumer used outside context provider.\",\n    );\n  },\n});\n\nexport function AppDrawerContextProvider(props: { children?: ReactNode }) {\n  const [open, setOpen] = useState(false);\n  const toggle = useCallback(() => {\n    setOpen(state => !state);\n  }, []);\n  const value: AppDrawerContextValue = useMemo(\n    () => ({\n      open,\n      toggle,\n    }),\n    [open],\n  );\n  const { children } = props;\n\n  return (\n    <AppDrawerContext.Provider value={value}>\n      {children}\n    </AppDrawerContext.Provider>\n  );\n}\n\nexport function useAppDrawerContext() {\n  return useContext(AppDrawerContext);\n}\n","import { styled } from \"@join-uniform/theme\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText, {\n  ListItemTextProps,\n} from \"@material-ui/core/ListItemText\";\nimport React, { FC } from \"react\";\nimport { AppDrawerLinkProps } from \"./AppDrawerLinkProps\";\n\nexport function LinkListItem(props: AppDrawerLinkProps) {\n  const { LinkComponent, href, title, hiddenSubPage } = props;\n\n  return (\n    <LinkComponent href={href}>\n      {active => {\n        if (!active && hiddenSubPage) return <></>;\n\n        return (\n          <ListItem\n            button\n            component=\"a\"\n            href={href}\n            selected={active}\n            classes={{ selected: \"selected\" }}\n          >\n            <ListItemTextWithActiveStyle\n              inset={hiddenSubPage}\n              classes={{ inset: \"inset\" }}\n            >\n              {title}\n            </ListItemTextWithActiveStyle>\n          </ListItem>\n        );\n      }}\n    </LinkComponent>\n  );\n}\n\nconst ListItemTextWithActiveStyle = styled(ListItemText as FC<\n  ListItemTextProps\n>)`\n  span {\n    color: ${({ theme }) => theme.palette.text.secondary};\n\n    .selected & {\n      color: ${({ theme }) => theme.palette.text.primary};\n    }\n  }\n\n  &.inset {\n    padding-left: 24px;\n  }\n`;\n","import { styled } from \"@join-uniform/theme\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem, { ListItemProps } from \"@material-ui/core/ListItem\";\nimport ListItemIcon, {\n  ListItemIconProps,\n} from \"@material-ui/core/ListItemIcon\";\nimport ListItemText, {\n  ListItemTextProps,\n} from \"@material-ui/core/ListItemText\";\nimport React, { FC } from \"react\";\nimport { LogoText } from \"../LogoText\";\nimport { AppDrawerLinkProps } from \"./AppDrawerLinkProps\";\nimport { generateToolbarHeightBasedCss } from \"./generateToolbarHeightBasedCss\";\n\ntype LogoListItemProps = Omit<AppDrawerLinkProps, \"title\"> & {\n  /** Logo image url. Requires a 48px by 48px image. */\n  src: string;\n};\n\nexport function LogoListItem(props: LogoListItemProps) {\n  const { src, href, LinkComponent } = props;\n\n  return (\n    <>\n      <LinkComponent href={href}>\n        {() => (\n          <Wrapper button component=\"a\" href={href}>\n            <LogoListItemIcon>\n              <LogoListItemIconImage src={src} />\n            </LogoListItemIcon>\n            <LogoListItemText disableTypography>\n              <LogoText />\n            </LogoListItemText>\n          </Wrapper>\n        )}\n      </LinkComponent>\n\n      <Divider />\n    </>\n  );\n}\n\nconst listItemHeight = generateToolbarHeightBasedCss(0);\nconst logoWidth = generateToolbarHeightBasedCss(20, \"width\");\nconst logoHeight = generateToolbarHeightBasedCss(20);\n\nconst Wrapper = styled(ListItem as FC<ListItemProps>)`\n  ${listItemHeight};\n  padding: 0px;\n  padding-left: 16px;\n`;\n\nconst LogoListItemIcon = styled(ListItemIcon as FC<ListItemIconProps>)`\n  ${logoWidth};\n  ${logoHeight};\n  margin-right: 12px;\n`;\n\nconst LogoListItemIconImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nconst LogoListItemText = styled(ListItemText as FC<ListItemTextProps>)`\n  padding-left: 0;\n  padding-right: 0;\n`;\n","import { DrawerProps } from \"@material-ui/core/Drawer\";\nimport React, { ComponentType, ReactNode } from \"react\";\nimport { Hidden } from \"../Hidden\";\nimport { useAppDrawerContext } from \"./AppDrawerContext\";\n\ntype ResponsiveDrawerProps = {\n  children?: ReactNode;\n  Drawer: ComponentType<DrawerProps>;\n};\n\nexport function ResponsiveDrawer(props: ResponsiveDrawerProps) {\n  const { open, toggle } = useAppDrawerContext();\n  const { children, Drawer } = props;\n\n  return (\n    <>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={open}\n          onClose={toggle}\n          ModalProps={{ keepMounted: true }}\n        >\n          {children}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer variant=\"permanent\" open>\n          {children}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n}\n","import { css } from \"@join-uniform/theme\";\n\nexport function generateToolbarHeightBasedCss(\n  reduction: number,\n  field = \"height\" as \"width\" | \"height\",\n) {\n  return css(({ theme }) => ({\n    [field]: `${56 - reduction}px`,\n\n    [`${theme.breakpoints.up(\"xs\")} and (orientation: landscape)`]: {\n      [field]: `${48 - reduction}px`,\n    },\n\n    [`${theme.breakpoints.up(\"sm\")}`]: {\n      [field]: `${64 - reduction}px`,\n    },\n  }));\n}\n","export * from \"./AppDrawer\";\nexport * from \"./AppDrawerContext\";\n","import { css, styled } from \"@join-uniform/theme\";\nimport MuiButton, {\n  ButtonProps as MuiButtonProps,\n} from \"@material-ui/core/Button\";\nimport { darken, fade } from \"@material-ui/core/styles/colorManipulator\";\nimport React from \"react\";\nimport { styleTable } from \"./Typography\";\n\nconst createCustomColorCss = (colorName: string, color: string) => {\n  // From:\n  // https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/styles/createPalette.js\n  // function addLightOrDark(..)\n  const tonalOffset = 0.2;\n  // const colorLight = lighten(color, tonalOffset);\n  const colorDark = darken(color, tonalOffset * 1.5);\n\n  return css`\n    &.color-${colorName}:not([disabled]) {\n      color: ${color};\n    }\n\n    /* Styles applied to the root element if variant=\"text\". */\n    &.variant-text.color-${colorName} {\n      &:hover {\n        background-color: ${({ theme }) =>\n          fade(color, theme.palette.action.hoverOpacity)};\n\n        /* Reset on touch devices, it doesn't add specificity */\n        @media (hover: none) {\n          background-color: transparent;\n        }\n      }\n    }\n\n    /* Styles applied to the root element if variant=\"outlined\" */\n    &.variant-outlined.color-${colorName} {\n      border: 1px solid ${fade(color, 0.5)};\n\n      &:hover {\n        border: 1px solid ${color};\n      }\n    }\n\n    /* Styles applied to the root element if variant=\"[contained | fab]\". */\n    &.variant-contained.color-${colorName},\n      &.variant-fab.color-${colorName},\n      &.variant-extendedFab.color-${colorName} {\n      ${({ theme }) => `\n      color: ${theme.palette.getContrastText(color)};\n      background-color: ${color};\n      box-shadow: ${theme.shadows[2]};\n\n      &.focusVisible {\n        box-shadow: ${theme.shadows[6]};\n      }\n\n      &:active {\n        box-shadow: ${theme.shadows[8]};\n      }\n\n      &.disabled {\n        color: ${theme.palette.action.disabled};\n        background-color: ${theme.palette.action.disabledBackground};\n        box-shadow: ${theme.shadows[0]};\n      }\n\n      &:hover {\n        background-color: ${colorDark};\n\n        /* Reset on touch devices, it doesn't add specificity */\n        @media (hover: none) {\n          background-color: ${color};\n        }\n      }\n    `};\n    }\n  `;\n};\n\nconst buttonColors = {\n  primary: createCustomColorCss(\"primary\", \"#2f8d2b\"),\n  orange: createCustomColorCss(\"orange\", \"#f2994a\"),\n  red: createCustomColorCss(\"red\", \"#910f0f\"),\n  blue: createCustomColorCss(\"blue\", \"#2d9cdb\"),\n  yellow: createCustomColorCss(\"yellow\", \"#ecd100\"),\n  lightGreen: createCustomColorCss(\"lightGreen\", \"#4fef48\"),\n};\n\nexport const colors: NonNullable<ButtonProps[\"color\"]>[] = [\n  \"default\",\n  \"inherit\",\n  ...(Object.keys(buttonColors) as NonNullable<ButtonProps[\"color\"]>[]),\n];\n\nconst buttonColorsCss = Object.values(buttonColors).reduce(\n  (accumulator, color) => {\n    return [...accumulator, ...color];\n  },\n  [],\n);\n\nconst [typeface, font, size, casing, spacing] = styleTable.Button;\nif (casing) {\n  //\n}\n\nconst typographyCss = css`\n  font-family: ${typeface};\n  font-weight: ${font};\n  font-size: ${size / 16}rem;\n  letter-spacing: ${spacing / size}rem;\n  text-transform: none;\n`;\n\nexport type ButtonProps = Omit<\n  MuiButtonProps,\n  \"classes\" | \"color\" | \"variant\"\n> & {\n  classes?: Omit<\n    NonNullable<MuiButtonProps[\"classes\"]>,\n    \"disabled\" | \"focusVisible\"\n  >;\n  color?: keyof typeof buttonColors | \"default\" | \"inherit\";\n  variant?: \"text\" | \"outlined\" | \"contained\" | \"fab\" | \"extendedFab\";\n};\n\nexport const Button = styled((props: ButtonProps) => {\n  const {\n    className,\n    classes: parentClasses = {},\n    color = \"default\",\n    variant = \"text\",\n    ...rest\n  } = props;\n\n  const classNames: string[] = [];\n  if (className) classNames.push(className);\n  classNames.push(`variant-${variant}`);\n\n  if (color !== \"default\" && color !== \"inherit\") {\n    classNames.push(`color-${color}`);\n  }\n\n  const classes: MuiButtonProps[\"classes\"] = {\n    ...parentClasses,\n    disabled: \"disabled\",\n    focusVisible: \"focusVisible\",\n  };\n\n  return (\n    <MuiButton\n      className={classNames.join(\" \")}\n      classes={classes}\n      color={color === \"inherit\" ? \"inherit\" : \"default\"}\n      variant={variant}\n      {...rest}\n    />\n  );\n})`\n  ${typographyCss};\n  ${buttonColorsCss};\n`;\n","import { styled } from \"@join-uniform/theme\";\nimport MuiTypography, {\n  TypographyProps as MuiTypographyProps,\n} from \"@material-ui/core/Typography\";\nimport React, { SFC } from \"react\";\nimport { styleTable } from \"./styleTable\";\nimport { Style, Variant } from \"./types\";\n\nexport { Variant as TypographyVariant };\n\ntype BaseSharedProps =\n  | \"align\"\n  | \"color\"\n  | \"gutterBottom\"\n  | \"noWrap\"\n  | \"paragraph\";\n\nexport type TypographyProps = Pick<MuiTypographyProps, BaseSharedProps> & {\n  /**\n   * CSS classname for extensibility.\n   */\n  className?: string;\n\n  /**\n   * Manual style overrides for extensibility.\n   */\n  style?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLElement>,\n    HTMLElement\n  >[\"style\"];\n\n  /**\n   * Style variant. One of:\n   * - H1\n   * - H2\n   * - H3\n   * - H4\n   * - H5\n   * - H6\n   * - Subtitle1\n   * - Subtitle2\n   * - Body1\n   * - Body2\n   * - Button\n   * - Caption\n   * - Overline\n   */\n  variant?: keyof typeof Variant;\n\n  /**\n   * Set the root component.\n   *\n   * Example: \"h1\"\n   */\n  component?: keyof JSX.IntrinsicElements;\n};\n\n/**\n * Typography component based on the second iteration of the Material Design\n * specifications.\n *\n * @see https://material.io/design/typography/the-type-system.html\n */\nexport const Typography: SFC<TypographyProps> = props => {\n  const { variant = Variant.Body1, component, ...rest } = props;\n\n  const componentVariant = styles[variant];\n  const TypographyComponent = component\n    ? componentVariant.withComponent(component)\n    : componentVariant;\n\n  return (\n    <MuiTypography\n      component={({ className, style, children }) => (\n        <TypographyComponent className={className} style={style}>\n          {children}\n        </TypographyComponent>\n      )}\n      {...rest}\n    />\n  );\n};\n\nconst styles: Record<Variant, Style> = Object.entries(styleTable).reduce(\n  (accumulator, [variantKey, [typeface, font, size, casing, spacing]]) => {\n    const variant = variantKey as Variant;\n\n    accumulator[variant] = styled.span`\n      font-family: ${typeface};\n      font-weight: ${font};\n      font-size: ${size / 16}rem;\n      ${casing === \"all caps\" && \"text-transform: uppercase\"};\n      letter-spacing: ${spacing / size}rem;\n      line-height: initial;\n      line-height: unset;\n    `;\n\n    return accumulator;\n  },\n  // tslint:disable-next-line:no-object-literal-type-assertion\n  {} as Record<Variant, Style>,\n);\n","export * from \"./styleTable\";\nexport * from \"./Typography\";\n","import { BaseStyle, Face, Font, Variant } from \"./types\";\n\nexport const styleTable: Record<Variant, BaseStyle> = {\n  [Variant.H1]: [Face.Montserrat, Font.Light, 96, \"sentence\", -1.5],\n  [Variant.H2]: [Face.Montserrat, Font.Light, 60, \"sentence\", -0.5],\n  [Variant.H3]: [Face.Montserrat, Font.Regular, 48, \"sentence\", 0],\n  [Variant.H4]: [Face.Montserrat, Font.Regular, 34, \"sentence\", 0.25],\n  [Variant.H5]: [Face.Montserrat, Font.Regular, 24, \"sentence\", 0],\n  [Variant.H6]: [Face.Montserrat, Font.Medium, 20, \"sentence\", 0.15],\n  [Variant.Subtitle1]: [Face.Montserrat, Font.Regular, 16, \"sentence\", 0.15],\n  [Variant.Subtitle2]: [Face.Montserrat, Font.Medium, 14, \"sentence\", 0.1],\n  [Variant.Body1]: [Face.Montserrat, Font.Regular, 16, \"sentence\", 0.5],\n  [Variant.Body2]: [Face.Montserrat, Font.Regular, 14, \"sentence\", 0.25],\n  [Variant.Button]: [Face.Montserrat, Font.Medium, 14, \"all caps\", 0.75],\n  [Variant.Caption]: [Face.Montserrat, Font.Regular, 12, \"sentence\", 0.4],\n  [Variant.Overline]: [Face.Montserrat, Font.Regular, 10, \"all caps\", 1.5],\n};\n","import { styled } from \"@join-uniform/theme\";\n\nexport enum Variant {\n  H1 = \"H1\",\n  H2 = \"H2\",\n  H3 = \"H3\",\n  H4 = \"H4\",\n  H5 = \"H5\",\n  H6 = \"H6\",\n  Subtitle1 = \"Subtitle1\",\n  Subtitle2 = \"Subtitle2\",\n  Body1 = \"Body1\",\n  Body2 = \"Body2\",\n  Button = \"Button\",\n  Caption = \"Caption\",\n  Overline = \"Overline\",\n}\n\nexport enum Face {\n  Montserrat = \"'Montserrat', sans-serif\",\n  Roboto = \"'Roboto', sans-serif\",\n}\n\nexport enum Font {\n  Light = \"300\",\n  Regular = \"400\",\n  Medium = \"500\",\n}\n\nexport type Size = number;\n\nexport type Casing = \"sentence\" | \"all caps\";\n\nexport type LetterSpacing = number;\n\nexport type BaseStyle = [Face, Font, Size, Casing, LetterSpacing];\n\nexport type Style = ReturnType<typeof styled.span>;\n","export * from \"./Button\";\n","import { styled } from \"@join-uniform/theme\";\nimport MuiCard, { CardProps as MuiCardProps } from \"@material-ui/core/Card\";\nimport React, { Children, ReactNode } from \"react\";\nimport { CardActionArea } from \"../CardActionArea\";\n\nexport type CardProps = Omit<MuiCardProps, \"innerRef\"> & {\n  /**\n   * Add a hover animation on mouse over.\n   */\n  hoverable?: boolean;\n};\n\nexport const Card = styled((props: CardProps) => {\n  const { children, hoverable, ...rest } = props;\n\n  if (hoverable && process.env.NODE_ENV === \"development\") {\n    const hasActionArea = hasChildCardActionAreaComponent(children);\n    if (!hasActionArea) {\n      throw new Error(\n        \"Expected a child CardActionArea component when using the 'hoverable' style.\",\n      );\n    }\n  }\n\n  return <MuiCard {...rest}>{children}</MuiCard>;\n})`\n  ${({ theme }) => theme.breakpoints.down(\"sm\")} {\n    box-shadow: none;\n    border: 1px solid #dadce0;\n    border-radius: 4px;\n  }\n\n  transition: ${({ theme }) =>\n    theme.transitions.create(\"box-shadow\", {\n      duration: theme.transitions.duration.short,\n    })};\n\n  ${({ hoverable, theme }) =>\n    hoverable &&\n    `\n      &:hover {\n        box-shadow: ${theme.shadows[2]};\n      }\n\n      ${theme.breakpoints.up(\"md\")} {\n        &:hover {\n          box-shadow: ${theme.shadows[4]};\n        }\n      }\n    `};\n`;\n\n/**\n * Recursively checks children in search of an instance of the CardActionArea\n * component.\n *\n * @param children Children of current tree.\n */\nconst hasChildCardActionAreaComponent = (children: ReactNode): boolean => {\n  return Children.toArray(children).some(child => {\n    // Not a text node.\n    if (typeof child !== \"string\" && typeof child !== \"number\") {\n      // Not a native element and display name matches.\n      if (\n        typeof child.type !== \"string\" &&\n        child.type.displayName === CardActionArea.displayName\n      ) {\n        return true;\n      }\n\n      // Native element or component.\n      return hasChildCardActionAreaComponent(child.props.children);\n    }\n\n    // Text node.\n    return false;\n  });\n};\n","export * from \"./Card\";\n","import { css, styled } from \"@join-uniform/theme\";\n\nexport const CardActionArea = styled.div`\n  ${({ onClick }) =>\n    onClick &&\n    css`\n      cursor: pointer;\n    `};\n`;\n","export * from \"./CardActionArea\";\n","import { styled } from \"@join-uniform/theme\";\nimport Typography, { TypographyProps } from \"@material-ui/core/Typography\";\nimport React, { CSSProperties, ReactNode, SFC } from \"react\";\nimport { cardTitleStyle } from \"../adminTypography\";\n\nexport type CardHeaderProps = {\n  className?: string;\n\n  /** Card title. */\n  title: ReactNode;\n\n  titleStyle?: CSSProperties;\n\n  /** Subheader contents. */\n  subheader?: ReactNode;\n\n  /**\n   * Subheader color.\n   *\n   * @default textSecondary\n   */\n  subheaderColor?: NonNullable<TypographyProps[\"color\"]>;\n\n  /** Image url. */\n  imageUrl?: string;\n\n  /**\n   * Image size.\n   *\n   * @default 80\n   */\n  imageSize?: 48 | 80;\n\n  /** Overline contents. */\n  overline?: string;\n\n  /**\n   * Variant of the font styles.\n   *\n   * @default \"normal\"\n   */\n  variant?: \"normal\" | \"admin\";\n};\n\nexport const CardHeader: SFC<CardHeaderProps> = props => {\n  const {\n    className,\n    title,\n    titleStyle,\n    subheader,\n    imageUrl,\n    imageSize = 80,\n    overline,\n    subheaderColor = \"textSecondary\",\n    variant,\n  } = props;\n\n  return (\n    <Wrapper className={className}>\n      {imageUrl && <Image src={imageUrl} size={imageSize} />}\n\n      <div>\n        {overline && <Overline>{overline}</Overline>}\n\n        <Title\n          style={titleStyle}\n          css={variant === \"admin\" ? cardTitleStyle : undefined}\n        >\n          {title}\n        </Title>\n\n        <Subheader color={subheaderColor}>{subheader}</Subheader>\n      </div>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${({ theme }) => theme.spacing.unit * 2}px;\n\n  ${({ theme }) => theme.breakpoints.up(\"sm\")} {\n    padding: ${({ theme }) => theme.spacing.unit * 2}px\n      ${({ theme }) => theme.spacing.unit * 3}px;\n  }\n`;\n\nconst Image = styled(\n  (props: { className?: string; src: string; size: number }) => (\n    <img className={props.className} src={props.src} />\n  ),\n)`\n  display: block;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  margin-right: ${({ theme }) => theme.spacing.unit * 2}px;\n`;\n\nconst Overline = styled(\n  ({ className, children }: { children?: ReactNode; className?: string }) => (\n    <Typography className={className} variant=\"overline\" gutterBottom>\n      {children}\n    </Typography>\n  ),\n)`\n  font-weight: 500;\n`;\n\nconst Title = styled(\n  ({\n    children,\n    className,\n    style,\n  }: {\n    children?: ReactNode;\n    className?: string;\n    style?: CSSProperties;\n  }) => (\n    <Typography className={className} variant=\"h5\" paragraph style={style}>\n      {children}\n    </Typography>\n  ),\n)`\n  margin-bottom: 8px;\n`;\n\nconst Subheader = styled(\n  ({\n    children,\n    className,\n    color,\n  }: TypographyProps & {\n    style?: CSSProperties;\n  }) => (\n    <Typography\n      className={className}\n      variant=\"subtitle2\"\n      gutterBottom\n      color={color}\n    >\n      {children}\n    </Typography>\n  ),\n)``;\n","export * from \"./CardHeader\";\n","import React, { Component, ReactNode } from \"react\";\n\nimport Card from \"@material-ui/core/Card\";\n\nimport { CardActions } from \"../muiComponents\";\nimport { DashboardCardItem } from \"./DashboardCardItem\";\nimport {\n  DashboardCardModeContextProps,\n  DashboardCardModeProvider,\n} from \"./DashboardCardModeContext\";\nimport {\n  DashboardCardPagination,\n  DashboardCardPaginationProps,\n} from \"./DashboardCardPagination\";\nimport { DashboardCardPaginationHeaderToolbar } from \"./DashboardCardPaginationHeaderToolbar\";\nimport {\n  DashboardCardTable,\n  DashboardCardTableProps,\n} from \"./DashboardCardTable\";\nimport {\n  DashboardCardTitleToolbar,\n  DashboardCardTitleToolbarProps,\n} from \"./DashboardCardTitleToolbar\";\n\nexport interface DashboardCardProps\n  extends Pick<\n      DashboardCardModeContextProps,\n      \"onItemEditClick\" | \"onRequestDeleteClick\"\n    >,\n    Pick<\n      DashboardCardTitleToolbarProps,\n      \"editCaptionText\" | \"additionalActionNode\" | \"iconNode\"\n    >,\n    Pick<DashboardCardTableProps, \"columnLabels\" | \"columnTypes\"> {\n  /**\n   * Card title. If not provided, no title toolbar is displayed.\n   */\n  title?: string;\n\n  /**\n   * A node to render to the right of the card title.\n   */\n  titleSiblingNode?: ReactNode;\n\n  /**\n   * Data list items.\n   */\n  items: DashboardCardItem[];\n\n  /**\n   * Optional pagination options. When left undefined, no pagination control is\n   * shown.\n   */\n  paginationProps?: DashboardCardPaginationProps;\n\n  /**\n   * Required if \"paginationProps\" is provided. The word describing the type of\n   * items in the table, eg. \"question\". It will be pluralized automatically.\n   */\n  paginationListItemType?: string;\n\n  bottomActionsNode?: ReactNode;\n}\n\nexport class DashboardCard extends Component<DashboardCardProps> {\n  render() {\n    const {\n      title,\n      titleSiblingNode,\n      iconNode,\n      items,\n      onItemEditClick,\n      onRequestDeleteClick,\n      editCaptionText,\n      columnLabels,\n      columnTypes,\n      paginationProps,\n      paginationListItemType,\n      additionalActionNode,\n      bottomActionsNode,\n    } = this.props;\n    const itemKeys = items.map(item => item.key);\n\n    const paginationNode = paginationProps ? (\n      <DashboardCardPagination {...paginationProps} />\n    ) : (\n      undefined\n    );\n\n    return (\n      <DashboardCardModeProvider\n        itemKeys={itemKeys}\n        onItemEditClick={onItemEditClick}\n        onRequestDeleteClick={onRequestDeleteClick}\n      >\n        <Card>\n          {title && (\n            <DashboardCardTitleToolbar\n              title={title}\n              titleSiblingNode={titleSiblingNode}\n              iconNode={iconNode}\n              editCaptionText={editCaptionText}\n              showEditButton={items.length > 0 && Boolean(onItemEditClick)}\n              showDeletionButton={\n                items.length > 0 && Boolean(onRequestDeleteClick)\n              }\n              additionalActionNode={additionalActionNode}\n            />\n          )}\n\n          {paginationProps && (\n            <DashboardCardPaginationHeaderToolbar\n              {...paginationProps}\n              listItemType={paginationListItemType!}\n            />\n          )}\n\n          {items.length > 0 && (\n            <DashboardCardTable\n              showCheckboxes={Boolean(onRequestDeleteClick)}\n              columnLabels={columnLabels}\n              columnTypes={columnTypes}\n              items={items}\n              bottomPaginationNode={paginationNode}\n            />\n          )}\n\n          {bottomActionsNode && <CardActions>{bottomActionsNode}</CardActions>}\n        </Card>\n      </DashboardCardModeProvider>\n    );\n  }\n}\n","import { styled } from \"@join-uniform/theme\";\nimport React, { cloneElement, SFC } from \"react\";\n\nimport { Switch, SwitchProps, Tooltip, Typography } from \"../muiComponents\";\nimport { ResponsiveIconTextButton } from \"../ResponsiveIconTextButton\";\n\nimport { DashboardCardItemColumn } from \"./DashboardCardItemColumn\";\nimport { DashboardCardModeApi } from \"./DashboardCardModeContext\";\n\ntype ColumnItemComponent = SFC<{\n  itemColumn: DashboardCardItemColumn;\n  mode: DashboardCardModeApi[\"state\"][\"mode\"];\n}>;\n\nexport const ColumnItemDualLine: ColumnItemComponent = ({ itemColumn }) => (\n  <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n    <Typography>{itemColumn.primaryText}</Typography>\n    <Typography variant=\"caption\" color=\"textSecondary\">\n      {itemColumn.secondaryText}\n    </Typography>\n  </div>\n);\n\nexport const ColumnItemImage: ColumnItemComponent = ({ itemColumn }) => (\n  <img\n    style={{ display: \"block\", height: 64, margin: \"4px 0\" }}\n    src={itemColumn.imgUrl}\n  />\n);\n\nexport const ColumnItemProfile: ColumnItemComponent = ({ itemColumn }) => (\n  <ProfileWrapper>\n    <div className=\"profile-newness\">\n      <div\n        style={{ visibility: itemColumn.isNewUser ? \"visible\" : \"hidden\" }}\n      />\n    </div>\n    {/* Profile image */}\n    <img className=\"profile-image\" src={itemColumn.imgUrl} />\n    {/* Dual line text */}\n    <div className=\"profile-text\">\n      <Typography>{itemColumn.primaryText}</Typography>\n      <Typography variant=\"caption\" color=\"textSecondary\">\n        <a href={`mailto:${itemColumn.secondaryText}`}>\n          {itemColumn.secondaryText}\n        </a>\n      </Typography>\n    </div>\n  </ProfileWrapper>\n);\n\nexport const ColumnItemSingleLine: ColumnItemComponent = ({ itemColumn }) => (\n  <Typography>{itemColumn.primaryText}</Typography>\n);\n\nconst StyledSwitch = styled((props: SwitchProps) => (\n  <Switch\n    color=\"primary\"\n    classes={{ bar: \"bar\", checked: \"checked\", disabled: \"disabled\" }}\n    {...props}\n  />\n))`\n  .disabled {\n    color: ${({ theme }) => theme.palette.grey[50]};\n  }\n\n  .disabled + .bar {\n    opacity: 0.38;\n  }\n\n  .checked {\n    color: ${({ theme }) => theme.palette.primary.main};\n  }\n\n  .checked + .bar {\n    background-color: ${({ theme }) => theme.palette.primary.main};\n    opacity: 0.5;\n  }\n`;\n\nexport const ColumnItemSwitch: ColumnItemComponent = ({ itemColumn, mode }) => {\n  const component = (\n    <StyledSwitch\n      checked={Boolean(itemColumn.switchChecked)}\n      onClick={event => {\n        event.stopPropagation();\n      }}\n      onChange={event => {\n        if (!itemColumn.switchOnChange) return;\n        itemColumn.switchOnChange(event.target.checked);\n      }}\n      disabled={!itemColumn.switchAlwaysClickable && mode !== \"edit\"}\n      color=\"primary\"\n    />\n  );\n\n  return itemColumn.switchTooltipTitle ? (\n    <Tooltip title={itemColumn.switchTooltipTitle}>{component}</Tooltip>\n  ) : (\n    component\n  );\n};\n\nexport const ColumnItemButton: ColumnItemComponent = ({ itemColumn }) => {\n  const button = (\n    <ResponsiveIconTextButton\n      onClick={itemColumn.onClick}\n      iconNode={itemColumn.buttonIconNode}\n      tooltipTitle={itemColumn.buttonTooltipTitle}\n    >\n      {itemColumn.primaryText}\n    </ResponsiveIconTextButton>\n  );\n\n  return itemColumn.wrapper\n    ? cloneElement(itemColumn.wrapper, undefined, button)\n    : button;\n};\n\nconst ProfileWrapper = styled.div`\n  display: flex;\n\n  .profile-newness {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .profile-newness div {\n    width: 16px;\n    height: 16px;\n    background-color: ${({ theme }) => theme.palette.primary.light};\n    border-radius: 50%;\n  }\n\n  .profile-image {\n    display: block;\n    height: 64px;\n    margin: 4px 8px 4px 0;\n  }\n\n  .profile-text {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  .profile-text > *:first-child {\n    margin-bottom: 4px;\n  }\n`;\n","import React, { Component, createContext } from \"react\";\n\nexport interface DashboardCardModeContextProps {\n  /**\n   * Children which later can use the DashboardCardModeConsumer component to\n   * access the passed api.\n   */\n  children: Component<any>[\"props\"][\"children\"];\n\n  /**\n   * String keys for use tracking the contents of the data list. When an item is\n   * removed or added, the component's internal state will update to reflect.\n   */\n  itemKeys: string[];\n\n  /**\n   * Called when an item is clicked in edit mode.\n   */\n  onItemEditClick?: (key: string) => any;\n\n  /**\n   * Called when the user requests items be deleted.\n   */\n  onRequestDeleteClick?: (keys: string[]) => any;\n}\n\ninterface DashboardCardModeContextState {\n  mode: \"display\" | \"edit\" | \"deletion\";\n  selected: boolean[];\n}\n\nexport interface DashboardCardModeApi {\n  actions: {\n    enterEditMode: () => void;\n    enterDeletionMode: () => void;\n    exitMode: () => void;\n    clickItem: (key: string) => void;\n    requestDelete: () => void;\n    toggleSelectAll: () => void;\n    getSelectedCount: () => number;\n    getIsIndeterminate: () => boolean;\n    getIsAllSelected: () => boolean;\n  };\n  state: DashboardCardModeContextState;\n}\n\nconst initialState: DashboardCardModeContextState = {\n  mode: \"display\",\n  selected: [],\n};\n\nconst uninitializedAction = () => {\n  throw new Error(\"Uninitialized action was called.\");\n};\n\nconst context = createContext<DashboardCardModeApi>({\n  actions: {\n    enterEditMode: uninitializedAction,\n    enterDeletionMode: uninitializedAction,\n    exitMode: uninitializedAction,\n    clickItem: uninitializedAction,\n    requestDelete: uninitializedAction,\n    toggleSelectAll: uninitializedAction,\n    getSelectedCount: uninitializedAction,\n    getIsIndeterminate: uninitializedAction,\n    getIsAllSelected: uninitializedAction,\n  },\n  state: initialState,\n});\n\n/**\n * Wraps the functionality of the DashboardCard which deals with entering the\n * edit and deletion modes. It tracks the checkbox states for rows.\n */\nexport class DashboardCardModeProvider extends Component<\n  DashboardCardModeContextProps,\n  DashboardCardModeContextState\n> {\n  constructor(props: DashboardCardModeContextProps) {\n    super(props);\n\n    this.state = {\n      ...initialState,\n      ...DashboardCardModeProvider.getResetSelectionStateFromProps(props),\n    };\n  }\n\n  /**\n   * Returns the card to display mode and sets all items to unselected.\n   */\n  static getResetSelectionStateFromProps(\n    props: DashboardCardModeContextProps,\n  ): Partial<DashboardCardModeContextState> {\n    return {\n      mode: \"display\",\n      selected: props.itemKeys.map(() => false),\n    };\n  }\n\n  /**\n   * If the number of items provided to this component changes, recalculate the\n   * \"selected\" state property to prevent range errors.\n   */\n  static getDerivedStateFromProps(\n    nextProps: DashboardCardModeContextProps,\n    prevState: DashboardCardModeContextState,\n  ): Partial<DashboardCardModeContextState> | null {\n    if (nextProps.itemKeys.length !== prevState.selected.length) {\n      return DashboardCardModeProvider.getResetSelectionStateFromProps(\n        nextProps,\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * If any item key has changed, reset the display state (exit back to display\n   * mode) for safety. This relies on getDerivedStateFromProps correctly\n   * resizing the \"selected\" state array.\n   */\n  componentDidUpdate(prevProps: DashboardCardModeContextProps) {\n    for (let i = 0; i < prevProps.itemKeys.length; i += 1) {\n      if (prevProps.itemKeys[i] !== this.props.itemKeys[i]) {\n        this.handleExitMode();\n        return;\n      }\n    }\n  }\n\n  handleEnterEditMode = () => this.setState({ mode: \"edit\" });\n\n  handleEnterDeletionMode = () => this.setState({ mode: \"deletion\" });\n\n  handleExitMode = () =>\n    this.setState(\n      // FIXME: Not sure what's going with this type definition problem.\n      // @ts-ignore\n      DashboardCardModeProvider.getResetSelectionStateFromProps(this.props),\n    );\n\n  handleItemClick = (key: string) => {\n    const itemIndex = this.props.itemKeys.indexOf(key);\n    if (itemIndex < 0) return;\n\n    if (this.state.mode === \"deletion\") {\n      const { selected } = this.state;\n\n      this.setState({\n        selected: [\n          ...selected.slice(0, itemIndex),\n          !selected[itemIndex],\n          ...selected.slice(itemIndex + 1),\n        ],\n      });\n    } else if (this.state.mode === \"edit\" && this.props.onItemEditClick) {\n      this.props.onItemEditClick(key);\n    }\n  };\n\n  handleRequestDeleteClick = () => {\n    if (!this.props.onRequestDeleteClick) return;\n    if (this.getSelectedCount() === 0) return;\n\n    const selectedItemKeys = this.props.itemKeys.reduce(\n      (acc, key, index) => {\n        if (this.state.selected[index]) return acc.concat(key);\n        return acc;\n      },\n      [] as string[],\n    );\n\n    if (selectedItemKeys.length === 0) return;\n    this.props.onRequestDeleteClick(selectedItemKeys);\n  };\n\n  handleSelectAll = () => {\n    if (this.state.mode !== \"deletion\") return;\n\n    this.setState({\n      selected: this.props.itemKeys.map(() => !this.getIsAllSelected()),\n    });\n  };\n\n  getSelectedCount = () =>\n    this.state.selected.reduce((acc, val) => (val ? acc + 1 : acc), 0);\n\n  getIsIndeterminate = () => {\n    const selectedCount = this.getSelectedCount();\n    return selectedCount > 0 && selectedCount < this.state.selected.length;\n  };\n\n  getIsAllSelected = () =>\n    this.getSelectedCount() === this.props.itemKeys.length;\n\n  render() {\n    const { children } = this.props;\n    const api: DashboardCardModeApi = {\n      actions: {\n        enterEditMode: this.handleEnterEditMode,\n        enterDeletionMode: this.handleEnterDeletionMode,\n        exitMode: this.handleExitMode,\n        clickItem: this.handleItemClick,\n        requestDelete: this.handleRequestDeleteClick,\n        toggleSelectAll: this.handleSelectAll,\n        getSelectedCount: this.getSelectedCount,\n        getIsIndeterminate: this.getIsIndeterminate,\n        getIsAllSelected: this.getIsAllSelected,\n      },\n      state: this.state,\n    };\n\n    return <context.Provider value={api}>{children}</context.Provider>;\n  }\n}\n\nexport const DashboardCardModeConsumer = context.Consumer;\n","import React, { Component } from \"react\";\n\nimport { TablePagination, TablePaginationProps } from \"../muiComponents\";\n\n// tslint:disable-next-line:no-empty-interface\nexport interface DashboardCardPaginationProps extends TablePaginationProps {}\n\nexport class DashboardCardPagination extends Component<\n  DashboardCardPaginationProps\n> {\n  render() {\n    return <TablePagination {...this.props} />;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { Toolbar, Typography } from \"../muiComponents\";\n\nimport { DashboardCardPaginationProps } from \"./DashboardCardPagination\";\n\nexport type DashboardCardPaginationHeaderToolbarProps = DashboardCardPaginationProps & {\n  /**\n   * Description text of an item, eg. \"question\".\n   */\n  listItemType: string;\n};\n\nexport class DashboardCardPaginationHeaderToolbar extends Component<\n  DashboardCardPaginationHeaderToolbarProps\n> {\n  render() {\n    const { rowsPerPage, count, listItemType } = this.props;\n\n    if (!listItemType) {\n      throw new Error(\"List item type required if using pagination controls.\");\n    }\n\n    return (\n      <Toolbar>\n        <Typography variant=\"subtitle1\">\n          Showing {rowsPerPage} of {count} {listItemType}.\n        </Typography>\n      </Toolbar>\n    );\n  }\n}\n","import { styled } from \"@join-uniform/theme\";\nimport React, { Component, FC, ReactNode } from \"react\";\n\nimport {\n  DashboardTableRow,\n  DashboardTableRowProps,\n} from \"../DashboardTableRow\";\nimport { Hidden } from \"../Hidden\";\nimport {\n  Checkbox,\n  CheckboxProps,\n  Table,\n  TableBody,\n  TableCell,\n  TableCellProps,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Typography,\n} from \"../muiComponents\";\n\nimport {\n  ColumnItemButton,\n  ColumnItemDualLine,\n  ColumnItemImage,\n  ColumnItemProfile,\n  ColumnItemSingleLine,\n  ColumnItemSwitch,\n} from \"./DashboardCardColumnComponents\";\nimport { DashboardCardColumnType } from \"./DashboardCardColumnType\";\nimport { DashboardCardItem } from \"./DashboardCardItem\";\nimport {\n  DashboardCardModeApi,\n  DashboardCardModeConsumer,\n} from \"./DashboardCardModeContext\";\n\nexport type DashboardCardTableProps = {\n  /**\n   * Render checkboxes and placeholder padding for checkboxes.\n   */\n  showCheckboxes: boolean;\n\n  /**\n   * Column labels.\n   */\n  columnLabels: string[];\n\n  /**\n   * Column types.\n   */\n  columnTypes: DashboardCardColumnType[];\n\n  /**\n   * Items.\n   */\n  items: DashboardCardItem[];\n\n  /**\n   * Optional bottom pagination node.\n   */\n  bottomPaginationNode?: ReactNode;\n};\n\nexport class DashboardCardTable extends Component<DashboardCardTableProps> {\n  constructor(props: DashboardCardTableProps) {\n    super(props);\n\n    if (props.columnLabels.length !== props.columnTypes.length) {\n      throw new Error(\"Expected same length columnLabels and columnTypes\");\n    }\n  }\n\n  getColumnComponent = (type: DashboardCardColumnType) => {\n    switch (type) {\n      case \"dual-line\":\n        return ColumnItemDualLine;\n      case \"image\":\n        return ColumnItemImage;\n      case \"profile\":\n        return ColumnItemProfile;\n      case \"single-line\":\n        return ColumnItemSingleLine;\n      case \"switch\":\n        return ColumnItemSwitch;\n      case \"button\":\n        return ColumnItemButton;\n      default:\n        throw new Error(`Unknown column type: ${type}`);\n    }\n  };\n\n  render() {\n    const {\n      showCheckboxes,\n      columnTypes,\n      columnLabels,\n      items,\n      bottomPaginationNode,\n    } = this.props;\n\n    return (\n      <DashboardCardModeConsumer>\n        {api => (\n          <Table>\n            {/* Table Header */}\n            <TableHead>\n              <TableRow suppressHydrationWarning>\n                {/* Optional checkbox (for cards which have delete option). */}\n                {showCheckboxes && api.state.mode === \"deletion\" && (\n                  <CheckboxWidthTableCell>\n                    {api.state.mode === \"deletion\" && (\n                      <RedCheckbox\n                        indeterminate={api.actions.getIsIndeterminate()}\n                        checked={api.actions.getIsAllSelected()}\n                        onChange={api.actions.toggleSelectAll}\n                      />\n                    )}\n                  </CheckboxWidthTableCell>\n                )}\n\n                {/* Column Labels */}\n                {columnLabels.map((label, index) => (\n                  <Hidden\n                    key={index}\n                    xsDown={columnTypes[index] === \"image\"}\n                    implementation=\"js\"\n                  >\n                    <UnpaddedTableCell\n                      style={{\n                        // Make first cell the largest. This is to make multiple\n                        // tables on one page have the same column sizings.\n                        width:\n                          index === 0 && columnLabels.length > 2\n                            ? \"50%\"\n                            : undefined,\n                        // Force right padding if Switch component because we're\n                        // using numeric padding style.\n                        paddingRight:\n                          columnTypes[index] === \"switch\" ? 24 : undefined,\n                      }}\n                      align={\n                        columnTypes[index] === \"switch\" ? \"right\" : undefined\n                      }\n                    >\n                      <Typography\n                        variant=\"subtitle2\"\n                        // Add left padding for alignment with Toolbar Button.\n                        style={{\n                          paddingLeft:\n                            columnTypes[index] === \"button\" ? 32 : undefined,\n                        }}\n                      >\n                        {label}\n                      </Typography>\n                    </UnpaddedTableCell>\n                  </Hidden>\n                ))}\n              </TableRow>\n            </TableHead>\n\n            {/* Table Contents*/}\n            <TableBody>\n              {items.map((item, index) => (\n                <ClickableTableRow\n                  key={item.key}\n                  selected={api.state.selected[index]}\n                  onClick={() => api.actions.clickItem(item.key)}\n                  mode={api.state.mode}\n                  suppressHydrationWarning\n                >\n                  {showCheckboxes && api.state.mode === \"deletion\" && (\n                    <UnpaddedTableCell padding=\"checkbox\">\n                      {api.state.mode === \"deletion\" && (\n                        <RedCheckbox checked={api.state.selected[index]} />\n                      )}\n                    </UnpaddedTableCell>\n                  )}\n\n                  {/* Render column item using required component type. */}\n                  {item.columns.map((itemColumn, columnIndex) => {\n                    const ItemColumnComponent = this.getColumnComponent(\n                      columnTypes[columnIndex],\n                    );\n\n                    return (\n                      <Hidden\n                        key={`${item.key}-${columnIndex}`}\n                        xsDown={columnTypes[columnIndex] === \"image\"}\n                        implementation=\"js\"\n                      >\n                        <UnpaddedTableCell\n                          style={{\n                            // Force right padding if Switch component because we're\n                            // using numeric padding style.\n                            paddingRight:\n                              columnTypes[columnIndex] === \"switch\"\n                                ? 24\n                                : undefined,\n                          }}\n                          align={\n                            columnTypes[columnIndex] === \"switch\"\n                              ? \"right\"\n                              : undefined\n                          }\n                        >\n                          <ItemColumnComponent\n                            itemColumn={itemColumn}\n                            mode={api.state.mode}\n                          />\n                        </UnpaddedTableCell>\n                      </Hidden>\n                    );\n                  })}\n                </ClickableTableRow>\n              ))}\n            </TableBody>\n\n            {/* Optional bottom pagination control. */}\n            {bottomPaginationNode && (\n              <TableFooter>\n                <TableRow>{bottomPaginationNode}</TableRow>\n              </TableFooter>\n            )}\n          </Table>\n        )}\n      </DashboardCardModeConsumer>\n    );\n  }\n}\n\nconst CheckboxWidthTableCell = styled(TableCell as FC<TableCellProps>).attrs(\n  () => ({\n    padding: \"checkbox\",\n  }),\n)`\n  width: 72px;\n`;\n\nconst RedCheckbox = styled(Checkbox as FC<CheckboxProps>).attrs(() => ({\n  classes: {\n    checked: \"checked\",\n  },\n}))`\n  &.checked {\n    color: #e10050;\n  }\n`;\n\nconst UnpaddedTableCell = styled(TableCell as FC<TableCellProps>)`\n  &:not(:first-child) {\n    padding-left: 0;\n    padding-right: 0;\n  }\n`;\n\ntype ModeProp = Pick<DashboardCardModeApi[\"state\"], \"mode\">;\n\nconst ClickableTableRow = styled((props: DashboardTableRowProps & ModeProp) => {\n  const { mode, ...rest } = props;\n  return <DashboardTableRow {...rest} />;\n})`\n  cursor: ${({ mode }) => (mode !== \"display\" ? \"pointer\" : \"inherit\")};\n`;\n","import { styled } from \"@join-uniform/theme\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport React, { Component, ReactElement, ReactNode } from \"react\";\n\nimport {\n  DashboardIcon,\n  DeleteIcon,\n  DoneIcon,\n  EditIcon,\n} from \"@join-uniform/icons\";\nimport { cardTitleStyle } from \"../adminTypography\";\nimport {\n  IconButton,\n  Toolbar,\n  ToolbarProps,\n  Tooltip,\n  Typography,\n} from \"../muiComponents\";\n\nimport {\n  DashboardCardModeApi,\n  DashboardCardModeConsumer,\n} from \"./DashboardCardModeContext\";\n\nexport interface DashboardCardTitleToolbarProps {\n  /**\n   * Card title.\n   */\n  title: string;\n\n  /**\n   * Optional icon node. Replaces the default Material Design \"dashboard\" icon.\n   */\n  iconNode?: ReactNode;\n\n  /**\n   * A node to render to the right of the card title.\n   */\n  titleSiblingNode?: ReactNode;\n\n  /**\n   * Instructions caption text shown in edit mode.\n   */\n  editCaptionText?: string;\n\n  /**\n   * Wether to display edit mode button or not.\n   *\n   * @default false\n   */\n  showEditButton?: boolean;\n\n  /**\n   * Whether to display deletion mode button or not.\n   *\n   * @default false\n   */\n  showDeletionButton?: boolean;\n\n  /**\n   * Additional action node. Shown to the left of the edit and delete action\n   * buttons if provided.\n   */\n  additionalActionNode?: ReactNode;\n}\n\nexport class DashboardCardTitleToolbar extends Component<\n  DashboardCardTitleToolbarProps\n> {\n  generateActionsButtonNode = (api: DashboardCardModeApi) => {\n    const {\n      showDeletionButton,\n      showEditButton,\n      additionalActionNode,\n    } = this.props;\n    const {\n      enterDeletionMode,\n      enterEditMode,\n      exitMode,\n      requestDelete,\n    } = api.actions;\n    const { mode } = api.state;\n    const selectedCount = api.actions.getSelectedCount();\n\n    /**\n     * This is used to selectively wrap an element with a tooltip. Passing a\n     * disabled button as a child to a tooltip causes an error. To prevent the\n     * error, undefined is passed as the title when the element should be\n     * disabled to prevent wrapping with a tooltip.\n     */\n    const maybeWithTooltip = (element: ReactElement<any>, title?: string) =>\n      title ? <Tooltip title={title}>{element}</Tooltip> : element;\n\n    return mode === \"display\" ? (\n      <>\n        {additionalActionNode}\n        {showDeletionButton && (\n          <Tooltip title=\"Deletion Mode\">\n            <IconButton onClick={enterDeletionMode}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n        {showEditButton && (\n          <Tooltip title=\"Edit Mode\">\n            <IconButton onClick={enterEditMode}>\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </>\n    ) : (\n      <>\n        {mode === \"deletion\" &&\n          maybeWithTooltip(\n            <IconButton disabled={selectedCount === 0} onClick={requestDelete}>\n              <DeleteIcon />\n            </IconButton>,\n            selectedCount !== 0\n              ? `Delete ${selectedCount} Selected Item${\n                  selectedCount !== 1 ? \"s\" : \"\"\n                }`\n              : undefined,\n          )}\n        <Tooltip title={`Exit ${mode === \"edit\" ? \"Edit\" : \"Deletion\"} Mode`}>\n          <IconButton onClick={exitMode}>\n            <DoneIcon />\n          </IconButton>\n        </Tooltip>\n      </>\n    );\n  };\n\n  generateCaptionNode = (api: DashboardCardModeApi) => {\n    const { title, titleSiblingNode, editCaptionText, iconNode } = this.props;\n    const { mode } = api.state;\n    const selectedCount = api.actions.getSelectedCount();\n\n    return (\n      <>\n        {/* Display mode caption. */}\n        {mode === \"display\" && (\n          <EntryTitleWrapper>\n            {iconNode || <DashboardIcon />}\n            <Typography css={cardTitleStyle}>{title}</Typography>\n            {titleSiblingNode}\n          </EntryTitleWrapper>\n        )}\n\n        {/* Edit/Deletion mode captions. */}\n        {mode !== \"display\" && (\n          <Typography variant=\"subtitle2\" color=\"inherit\">\n            {mode === \"edit\"\n              ? `Edit Mode${editCaptionText ? \" - \" : \"\"}${editCaptionText ||\n                  \"\"}`\n              : `${selectedCount} Selected for Deletion`}\n          </Typography>\n        )}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <DashboardCardModeConsumer>\n        {api => (\n          <ColoredToolbar mode={api.state.mode}>\n            <CaptionWrapper>{this.generateCaptionNode(api)}</CaptionWrapper>\n            {this.generateActionsButtonNode(api)}\n          </ColoredToolbar>\n        )}\n      </DashboardCardModeConsumer>\n    );\n  }\n}\n\ntype ModeProp = Pick<DashboardCardModeApi[\"state\"], \"mode\">;\n\nconst ColoredToolbar = styled((props: ToolbarProps & ModeProp) => {\n  const { mode, ...rest } = props;\n  return <Toolbar {...rest} />;\n})`\n  ${({ mode, theme }) => {\n    if (mode === \"display\") return;\n\n    return `\n      color: ${\n        mode === \"edit\" ? theme.palette.primary.dark : theme.palette.error.dark\n      };\n      background-color: ${lighten(\n        mode === \"edit\"\n          ? theme.palette.primary.light\n          : theme.palette.error.light,\n        0.75,\n      )}\n    `;\n  }}\n`;\n\nconst CaptionWrapper = styled.div`\n  flex: 1;\n`;\n\nconst EntryTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  > *:first-child {\n    margin-right: ${({ theme }) => theme.spacing.unit}px;\n    color: #757575;\n  }\n\n  > *:nth-child(3) {\n    margin-left: ${({ theme }) => theme.spacing.unit * 2}px;\n  }\n`;\n","export * from \"./DashboardCard\";\nexport * from \"./DashboardCardColumnType\";\nexport * from \"./DashboardCardItem\";\nexport * from \"./DashboardCardItemColumn\";\nexport * from \"./DashboardCardModeContext\";\nexport * from \"./DashboardCardPagination\";\nexport * from \"./DashboardCardPaginationHeaderToolbar\";\nexport * from \"./DashboardCardTable\";\nexport * from \"./DashboardCardTitleToolbar\";\n","import { styled } from \"@join-uniform/theme\";\nimport TableRow, { TableRowProps } from \"@material-ui/core/TableRow\";\nimport React from \"react\";\n\nexport type DashboardTableRowProps = Omit<TableRowProps, \"classes\">;\n\nexport const DashboardTableRow = styled((props: DashboardTableRowProps) => {\n  return <TableRow {...props} classes={{ selected: \"selected\" }} />;\n})`\n  &:nth-of-type(odd) {\n    background-color: ${({ theme }) => theme.palette.background.default};\n  }\n\n  &.selected {\n    background-color: rgba(0, 0, 0, 0.07);\n  }\n\n  td {\n    border: none;\n  }\n`;\n","export * from \"./DashboardTableRow\";\n","import { DragHandleIcon, RemoveIcon } from \"@join-uniform/icons\";\nimport { styled } from \"@join-uniform/theme\";\nimport React, { ReactElement } from \"react\";\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableContainerProps,\n  SortableElement,\n  SortableHandle,\n} from \"react-sortable-hoc\";\nimport { Grid } from \"../Grid\";\nimport { IconButton } from \"../muiComponents\";\n\nexport { arrayMove };\n\nexport type DraggableListProps = Omit<\n  SortableContainerProps,\n  \"useDragHandle\"\n> & {\n  itemElements: ReactElement<any>[];\n  onRemoveButtonClick: (index: number) => void;\n};\n\ntype DraggableListItemProps = {\n  children: ReactElement<any>;\n  itemIndex: number;\n  onRemoveButtonClick: (index: number) => void;\n};\n\nconst DraggableListBase = SortableContainer<DraggableListProps>(props => {\n  const { itemElements, onRemoveButtonClick } = props;\n\n  const draggableItemElements = itemElements.map((itemElement, index) => {\n    const key = itemElement.key || index;\n    return (\n      <DraggableListItem\n        key={key}\n        index={index}\n        itemIndex={index}\n        onRemoveButtonClick={onRemoveButtonClick}\n      >\n        {itemElement}\n      </DraggableListItem>\n    );\n  });\n\n  return <div>{draggableItemElements}</div>;\n});\n\nexport function DraggableList(props: DraggableListProps) {\n  return <DraggableListBase {...props} useDragHandle />;\n}\n\nconst DraggableListItem = SortableElement<DraggableListItemProps>(props => {\n  const { children, itemIndex, onRemoveButtonClick } = props;\n\n  return (\n    <Grid container spacing={16}>\n      <Grid item>\n        <Grid container direction=\"column\">\n          <Grid item>\n            <DragHandle />\n          </Grid>\n          <Grid item>\n            <IconButton>\n              <RemoveIcon onClick={() => onRemoveButtonClick(itemIndex)} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs>\n        {children}\n      </Grid>\n    </Grid>\n  );\n});\n\nconst DragHandleIconButton = styled((props: { className?: string }) => (\n  <IconButton className={props.className}>\n    <DragHandleIcon />\n  </IconButton>\n))`\n  cursor: grab;\n`;\n\nconst DragHandle = SortableHandle(() => (\n  <div>\n    <DragHandleIconButton />\n  </div>\n));\n","export * from \"./DraggableList\";\n","import { css, styled } from \"@join-uniform/theme\";\nimport MuiGrid, { GridProps as MuiGridProps } from \"@material-ui/core/Grid\";\nimport React from \"react\";\n\nexport type GridProps = MuiGridProps & {\n  /**\n   * Centers container and sets a maximum width. Requires that the container\n   * prop be set.\n   */\n  contentCenter?: boolean;\n\n  /**\n   * Applies the style from the `contentCenter` variant but with vertical\n   * padding in addition to the horizontal padding from the contentCenter\n   * setting.\n   */\n  storybookContainer?: boolean;\n};\n\nexport const Grid = styled((props: GridProps) => {\n  const {\n    contentCenter: contentCenterProp,\n    container: containerProp,\n    storybookContainer,\n    ...rest\n  } = props;\n\n  const contentCenter = !!contentCenterProp || !!storybookContainer;\n  const container = !!containerProp || !!storybookContainer;\n\n  if (contentCenter && !container) {\n    throw new Error(\n      \"The container prop must be set to true to use contentCenter.\",\n    );\n  }\n\n  let element = <MuiGrid container={container} {...rest} />;\n\n  if (contentCenter) {\n    element = (\n      <div\n        css={css`\n          padding: ${storybookContainer ? \"8px 8px\" : \"0px 0px\"};\n        `}\n      >\n        {element}\n      </div>\n    );\n  }\n\n  return element;\n})`\n  ${props =>\n    props.contentCenter &&\n    css`\n      width: 100%;\n      max-width: 1280px;\n      margin-left: auto;\n      margin-right: auto;\n    `};\n`;\n","export * from \"./Grid\";\n","import { css, styled } from \"@join-uniform/theme\";\nimport { keys as breakpointKeys } from \"@material-ui/core/styles/createBreakpoints\";\nimport React from \"react\";\nimport { Grid, GridProps } from \"../Grid\";\nimport { HiddenProps } from \"../Hidden\";\n\nexport type GridHideableProps = Omit<\n  GridProps & HiddenProps,\n  \"component\" | \"implementation\" | \"initialWidth\"\n>;\n\n/**\n * Adds the functionality from Material UI's Hidden component. This allows using\n * the CSS only implementation alongside Grid.\n *\n * This provides a workaround for service side rendering.\n */\nexport const GridHideable = styled((props: GridHideableProps) => {\n  const {\n    className,\n    lgDown,\n    lgUp,\n    mdDown,\n    mdUp,\n    only,\n    smDown,\n    smUp,\n    xlDown,\n    xlUp,\n    xsDown,\n    xsUp,\n    ...rest\n  } = props;\n\n  const classNames: string[] = [];\n  if (className) classNames.push(className);\n\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < breakpointKeys.length; i += 1) {\n    const breakpoint = breakpointKeys[i];\n    const breakpointUp = props[`${breakpoint}Up` as keyof GridHideableProps];\n    const breakpointDown = props[`${breakpoint}Down` as keyof GridHideableProps]; // prettier-ignore\n\n    if (breakpointUp) {\n      classNames.push(`hidden-${breakpoint}Up`);\n    }\n    if (breakpointDown) {\n      classNames.push(`hidden-${breakpoint}Down`);\n    }\n\n    if (only) {\n      const onlyBreakpoints = Array.isArray(only) ? only : [only];\n      onlyBreakpoints.forEach(b => {\n        classNames.push(`hidden-only-${b}`);\n      });\n    }\n  }\n\n  return <Grid {...rest} className={classNames.join(\" \")} />;\n})`\n  ${breakpointKeys.map(\n    key => css`\n      ${({ theme }) => theme.breakpoints.only(key)} {\n        &.hidden-only-${key} {\n          display: none;\n        }\n      }\n\n      ${({ theme }) => theme.breakpoints.up(key)} {\n        &.hidden-${key}Up {\n          display: none;\n        }\n      }\n\n      ${({ theme }) => theme.breakpoints.down(key)} {\n        &.hidden-${key}Down {\n          display: none;\n        }\n      }\n    `,\n  )};\n`;\n","export * from \"./GridHideable\";\n","import MuiHidden, {\n  HiddenProps as MuiHiddenProps,\n} from \"@material-ui/core/Hidden\";\nimport React from \"react\";\n\nexport type HiddenProps = Omit<MuiHiddenProps, \"implementation\"> & {\n  // Make \"implementation\" prop required.\n  implementation: NonNullable<MuiHiddenProps[\"implementation\"]>;\n};\n\nexport function Hidden(props: HiddenProps) {\n  // Hopefully tree shake this away in production.\n  if (process.env.NODE_ENV === \"development\") {\n    // Enforce usage of the \"implementation\" prop to avoid unexpected warning\n    // when rehydrating from server side rendering.\n    if (typeof props.implementation !== \"string\") {\n      throw new Error(\n        \"Implementation must be specified to prevent accidental issues with server side rendering.\",\n      );\n    }\n  }\n\n  return <MuiHidden {...props} />;\n}\n","export * from \"./Hidden\";\n","import {\n  CloudUploadIcon,\n  CollectionsIcon,\n  TextureIcon,\n} from \"@join-uniform/icons\";\nimport { createGlobalStyle, styled } from \"@join-uniform/theme\";\nimport { SvgIconProps } from \"@material-ui/core/SvgIcon\";\nimport React, { FC, Fragment, SFC, useMemo } from \"react\";\nimport { Button } from \"../Button\";\nimport { Grid } from \"../Grid\";\nimport { Typography } from \"../muiComponents\";\n\ntype ImagePickerProps = {\n  /**\n   * Url to the uploaded full size image. A browser tab is opened when the\n   * preview image is clicked to this url.\n   */\n  uploadedImageUrl: string | null;\n\n  /**\n   * A 128px by 128px preview image of the currently selected image.\n   */\n  previewImageUrl: string | null;\n\n  /**\n   * Component title.\n   */\n  title?: string;\n\n  onSelectButtonClick?: () => void;\n\n  onUploadButtonClick?: () => void;\n};\n\n/**\n * Provides an image picker component for use in the admin dashboard.\n */\nexport function ImagePicker(props: ImagePickerProps) {\n  const {\n    uploadedImageUrl,\n    previewImageUrl,\n    title,\n    onSelectButtonClick,\n    onUploadButtonClick,\n  } = props;\n\n  const Wrapper = useMemo(\n    () => {\n      if (!uploadedImageUrl) return Fragment;\n\n      const Link: SFC = ({ children }) => (\n        <a href={uploadedImageUrl} target=\"_blank\">\n          {children}\n        </a>\n      );\n      return Link;\n    },\n    [uploadedImageUrl],\n  );\n\n  return (\n    <Grid container spacing={16}>\n      <LeftIconStyle />\n\n      {/* Image preview. */}\n      <Grid item>\n        <Wrapper>\n          <ImageWrapper>\n            {previewImageUrl ? (\n              <Image src={previewImageUrl} />\n            ) : (\n              <EmptyImageTexture />\n            )}\n          </ImageWrapper>\n        </Wrapper>\n      </Grid>\n\n      <Grid item xs container direction=\"column\" justify=\"space-between\">\n        {/* Title */}\n        <Grid item>\n          <Typography variant=\"h6\">{title}</Typography>\n        </Grid>\n\n        {/* Action buttons. */}\n        <Grid item>\n          <Button onClick={onSelectButtonClick}>\n            <CollectionsIcon className=\"left-icon\" />\n            Select\n          </Button>\n          <Button onClick={onUploadButtonClick}>\n            <CloudUploadIcon className=\"left-icon\" />\n            Upload\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst LeftIconStyle = createGlobalStyle`\n  .left-icon {\n    margin-right: ${({ theme }) => theme.spacing.unit}px;\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  width: 128px;\n  height: 128px;\n  border: 1px solid\n    ${({ theme }) =>\n      theme.palette.type === \"light\"\n        ? \"rgba(0, 0, 0, 0.23)\"\n        : \"rgba(255, 255, 255, 0.23)\"};\n`;\n\nconst EmptyImageTexture = styled(TextureIcon as FC<SvgIconProps>)`\n  width: 100%;\n  height: 100%;\n  color: ${({ theme }) =>\n    theme.palette.type === \"light\"\n      ? \"rgba(0, 0, 0, 0.23)\"\n      : \"rgba(255, 255, 255, 0.23)\"};\n`;\n\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n","export * from \"./ImagePicker\";\n","import { styled } from \"@join-uniform/theme\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\nimport React, { FC, ReactNode } from \"react\";\nimport { cardTitleStyle } from \"../adminTypography\";\nimport { Typography, TypographyProps } from \"../muiComponents\";\n\nexport type IndexCardProps = {\n  title: string;\n  categories: string[];\n  /** This should be provided as a responsive 128px by 128px image. */\n  entryLogoUrl: string;\n\n  colorBlock: string;\n  colorCategoryBackground: string;\n  colorLogoBackground: string;\n  colorTitle: string;\n};\n\nexport function IndexCard(props: IndexCardProps) {\n  const {\n    title,\n    categories,\n    entryLogoUrl,\n    colorBlock,\n    colorCategoryBackground,\n    colorLogoBackground,\n    colorTitle,\n  } = props;\n\n  return (\n    <Wrapper backgroundColor={colorBlock}>\n      <InnerWrapper backgroundColor={colorBlock}>\n        <EntryLogoImage\n          backgroundColor={colorLogoBackground}\n          src={entryLogoUrl}\n        />\n\n        <TextSectionWrapper>\n          <TitleWrapper>\n            <TitleTypography>{title}</TitleTypography>\n            <Typography>mock test for:</Typography>\n          </TitleWrapper>\n\n          <CategoryPillWrapper>\n            {categories.map((category, index) => (\n              <CategoryPill\n                key={index}\n                backgroundColor={colorCategoryBackground}\n                textColor={colorTitle}\n                title={category}\n              />\n            ))}\n          </CategoryPillWrapper>\n        </TextSectionWrapper>\n      </InnerWrapper>\n    </Wrapper>\n  );\n}\n\nconst logoSizePixels = 128;\nconst blockWidthPixels = logoSizePixels + logoSizePixels / 2;\nconst verticalMargin = 50;\nconst mobileBreakpoint: Breakpoint = \"sm\";\n\nconst Wrapper = styled.div<{ backgroundColor: string }>`\n  width: 100%;\n  padding: 16px;\n  background-color: ${props => getLightBg(props.backgroundColor)};\n\n  > * {\n    max-width: 1280px;\n    margin: 0 auto;\n  }\n`;\n\nconst InnerWrapper = styled(\n  (props: {\n    children?: ReactNode;\n    className?: string;\n    backgroundColor: string;\n  }) => <div className={props.className}>{props.children}</div>,\n)`\n  display: flex;\n  padding-left: ${logoSizePixels}px;\n\n  ${({ backgroundColor, theme }) => `\n    background-image: linear-gradient(\n      to right,\n      ${backgroundColor},\n      ${backgroundColor} ${blockWidthPixels}px,\n      ${getLightBg(backgroundColor)} ${blockWidthPixels}px,\n      ${getLightBg(backgroundColor)}\n    );\n\n    ${theme.breakpoints.down(mobileBreakpoint)} {\n      flex-direction: column;\n      align-items: center;\n      padding-left: 0;\n      padding-top: ${verticalMargin}px;\n      background-image: linear-gradient(\n        to bottom,\n        ${backgroundColor},\n        ${backgroundColor} ${verticalMargin + logoSizePixels / 2}px,\n        ${getLightBg(backgroundColor)} ${verticalMargin + logoSizePixels / 2}px,\n        ${getLightBg(backgroundColor)}\n      );\n    }\n  `};\n`;\n\nconst EntryLogoImage = styled.img<{\n  backgroundColor: string;\n}>`\n  display: block;\n  width: ${logoSizePixels}px;\n  height: ${logoSizePixels}px;\n  margin: ${verticalMargin}px 0;\n  background-color: ${({ backgroundColor }) => `${backgroundColor}`};\n\n  ${({ theme }) => theme.breakpoints.down(mobileBreakpoint)} {\n    margin: 0;\n  }\n`;\n\nconst TextSectionWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 24px 0;\n  margin-left: 16px;\n\n  ${({ theme }) => theme.breakpoints.down(mobileBreakpoint)} {\n    margin-left: 0;\n  }\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-left: 8px;\n  margin-bottom: 16px;\n\n  > :first-child {\n    margin-right: 8px;\n  }\n\n  ${({ theme }) => theme.breakpoints.down(mobileBreakpoint)} {\n    flex-direction: column;\n    align-items: center;\n    margin-left: 0;\n\n    > :first-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst TitleTypography = styled(Typography as FC<TypographyProps>)`\n  ${cardTitleStyle};\n`;\n\nconst CategoryPillWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst CategoryPill = styled(\n  ({\n    className,\n    title,\n  }: {\n    className?: string;\n    backgroundColor: string;\n    textColor: string;\n    title: string;\n  }) => (\n    <div className={className}>\n      <Typography>{title}</Typography>\n    </div>\n  ),\n)`\n  width: calc(100% / 3 - 16px);\n  padding: 8px;\n  margin: 8px;\n  border-radius: 8px;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  text-align: center;\n\n  ${({ theme }) => theme.breakpoints.down(mobileBreakpoint)} {\n    width: calc(100% / 2 - 16px);\n  }\n`;\n\nfunction getLightBg(color: string) {\n  return lighten(color, 0.4);\n}\n","export * from \"./IndexCard\";\n","import { mixins, styled } from \"@join-uniform/theme\";\nimport React, { ReactNode } from \"react\";\nimport {\n  AppDrawer,\n  AppDrawerContextProvider,\n  AppDrawerProps,\n  drawerWidth,\n} from \"../AppDrawer\";\nimport { ResponsiveAppBar, ResponsiveAppBarProps } from \"./ResponsiveAppBar\";\n\nexport type LayoutDashboardProps = ResponsiveAppBarProps & {\n  children?: ReactNode;\n\n  drawerTheme: AppDrawerProps[\"theme\"];\n  drawerLinks: AppDrawerProps[\"links\"];\n  drawerLogoSrc: AppDrawerProps[\"logoSrc\"];\n  DrawerLinkComponent: AppDrawerProps[\"LinkComponent\"];\n};\n\nexport function LayoutDashboard(props: LayoutDashboardProps) {\n  const {\n    title,\n    buttons,\n    onLogoutButtonClick,\n    drawerTheme,\n    drawerLinks,\n    drawerLogoSrc,\n    DrawerLinkComponent,\n  } = props;\n\n  return (\n    <AppDrawerContextProvider>\n      <ResponsiveAppBar\n        title={title}\n        buttons={buttons}\n        onLogoutButtonClick={onLogoutButtonClick}\n      />\n\n      <AppDrawer\n        theme={drawerTheme}\n        links={drawerLinks}\n        LinkComponent={DrawerLinkComponent}\n        logoSrc={drawerLogoSrc}\n      />\n\n      <AppBarSpacer />\n\n      <ContentWrapper>{props.children}</ContentWrapper>\n    </AppDrawerContextProvider>\n  );\n}\n\nconst ContentWrapper = styled.main`\n  padding: 16px 0;\n\n  ${({ theme }) => theme.breakpoints.up(\"md\")} {\n    margin-left: ${drawerWidth}px;\n  }\n`;\n\nconst AppBarSpacer = styled.div`\n  ${mixins.toolbar};\n`;\n","import { styled } from \"@join-uniform/theme\";\nimport React from \"react\";\nimport { AppBar, AppBarProps } from \"../AppBar\";\nimport { drawerWidth, useAppDrawerContext } from \"../AppDrawer\";\n\nexport type ResponsiveAppBarProps = Omit<\n  AppBarProps,\n  \"onDrawerToggleButtonClick\"\n>;\n\nexport const ResponsiveAppBar = styled(\n  (props: ResponsiveAppBarProps & { className?: string }) => {\n    const { toggle } = useAppDrawerContext();\n    const { className, ...rest } = props;\n\n    return (\n      <div className={className}>\n        <AppBar {...rest} onDrawerToggleButtonClick={toggle} />\n      </div>\n    );\n  },\n)`\n  position: fixed;\n  width: 100%;\n  z-index: ${({ theme }) => theme.zIndex.appBar};\n\n  ${({ theme }) => theme.breakpoints.up(\"md\")} {\n    width: calc(100% - ${drawerWidth}px);\n    margin-left: ${drawerWidth}px;\n  }\n`;\n","export * from \"./LayoutDashboard\";\n","import { strings } from \"@join-uniform/localization\";\nimport { DarkTheme, styled } from \"@join-uniform/theme\";\nimport React, { FC, ReactNode } from \"react\";\nimport { Grid, GridProps } from \"../Grid\";\nimport { Typography } from \"../muiComponents\";\n\ntype LayoutLandingProps = { children?: ReactNode };\n\nexport function LayoutLanding(props: LayoutLandingProps) {\n  const { children } = props;\n\n  return (\n    <Wrapper>\n      <PageContentsWrapper>{children}</PageContentsWrapper>\n\n      <FooterWrapper>\n        <DarkTheme>\n          <Typography variant=\"caption\">{strings.landingFooter}</Typography>\n        </DarkTheme>\n      </FooterWrapper>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled(Grid as FC<GridProps>).attrs(\n  (): Partial<GridProps> => ({\n    container: true,\n    direction: \"column\",\n    wrap: \"nowrap\",\n  }),\n)`\n  height: 100%;\n`;\n\nconst PageContentsWrapper = styled(Grid as FC<GridProps>).attrs(\n  (): Partial<GridProps> => ({\n    item: true,\n    xs: true,\n  }),\n)``;\n\nconst FooterWrapper = styled(Grid as FC<GridProps>).attrs(\n  (): Partial<GridProps> => ({\n    component: \"footer\",\n    item: true,\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n  }),\n)`\n  flex-shrink: 0;\n  height: 40px;\n  background-color: #333333;\n`;\n","export * from \"./LayoutLanding\";\n","import { styled } from \"@join-uniform/theme\";\nimport Avatar, { AvatarProps } from \"@material-ui/core/Avatar\";\nimport CircularProgress, {\n  CircularProgressProps,\n} from \"@material-ui/core/CircularProgress\";\nimport Fade from \"@material-ui/core/Fade\";\nimport React, {\n  createContext,\n  FC,\n  ReactNode,\n  useContext,\n  useMemo,\n} from \"react\";\n\nexport type LoadingSpinnerContextValue = {\n  /**\n   * Delay in milliseconds before displaying the loading spinner. Displaying\n   * loading spinners immediately causes users to perceive the page as being\n   * slower.\n   *\n   * @default 2000\n   */\n  transitionDelay?: number;\n\n  /** 72x72px logo image. Displayed on 1x DPI screens. */\n  src1_0x: string;\n\n  /** 105x105px logo image. Displayed on 1.5x DPI screens. */\n  src1_5x: string;\n\n  /** 144x144px logo image. Displayed on 2x DPI screens. */\n  src2_0x: string;\n};\n\nexport type LoadingSpinnerProviderProps = LoadingSpinnerContextValue & {\n  children?: ReactNode;\n};\n\nconst LoadingSpinnerContext = createContext<LoadingSpinnerContextValue | null>(\n  null,\n);\n\n/**\n * Provides the configuration for instances of LoadingSpinner.\n */\nexport function LoadingSpinnerProvider(props: LoadingSpinnerProviderProps) {\n  const { children, ...rest } = props;\n\n  const value = useMemo(() => rest, [\n    rest.transitionDelay,\n    rest.src1_0x,\n    rest.src1_5x,\n    rest.src2_0x,\n  ]);\n\n  return (\n    <LoadingSpinnerContext.Provider value={value}>\n      {children}\n    </LoadingSpinnerContext.Provider>\n  );\n}\n\ntype LoadingSpinnerProps = {\n  /**\n   * Forces the immediate display of the loading spinner. This overrides the\n   * value from the LoadingSpinnerProvider.\n   */\n  noTransitionDelay?: boolean;\n};\n\n/**\n * Displays a loading spinner with the configured image and animation delay. The\n * spinner must be configured through the use of a LoadingSpinnerProvider. The\n * configuration is passed through the tree using React Context.\n */\nexport function LoadingSpinner(props: LoadingSpinnerProps) {\n  const { noTransitionDelay } = props;\n\n  const context = useContext(LoadingSpinnerContext);\n  if (!context) {\n    throw new Error(\n      \"LoadingSpinner was used without a corresponding context provider.\",\n    );\n  }\n\n  const {\n    transitionDelay: transitionDelayContext,\n    src1_0x,\n    src1_5x,\n    src2_0x,\n  } = context;\n  const srcSet = useMemo(() => `${src1_0x}, ${src1_5x} 1.5x, ${src2_0x} 2.0x`, [\n    src1_0x,\n    src1_5x,\n    src2_0x,\n  ]);\n  const transitionDelay = noTransitionDelay ? 0 : transitionDelayContext;\n\n  return (\n    <Fade in unmountOnExit style={{ transitionDelay: `${transitionDelay}ms` }}>\n      <Wrapper>\n        <InnerWrapper>\n          <LogoImage alt=\"\" src={src1_0x} srcSet={srcSet} />\n          <StyledCircularProgress size={120} thickness={1.2} />\n        </InnerWrapper>\n      </Wrapper>\n    </Fade>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst InnerWrapper = styled.div`\n  position: relative;\n  width: 120px;\n  height: 120px;\n`;\n\nconst LogoImage = styled(Avatar as FC<AvatarProps>)`\n  position: absolute;\n  width: 72px;\n  height: 72px;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst StyledCircularProgress = styled(CircularProgress as FC<\n  CircularProgressProps\n>)`\n  width: 120px;\n  height: 120px;\n`;\n","export * from \"./LoadingSpinner\";\n","import { css, styled } from \"@join-uniform/theme\";\nimport React from \"react\";\nimport { Typography } from \"../muiComponents\";\n\nexport type LogoTextProps = {\n  className?: string;\n  variant?: \"default\" | \"split-color\";\n};\n\nexport const LogoText = styled(({ className }: LogoTextProps) => (\n  <Typography className={className} variant=\"h5\">\n    <span>Join&nbsp;</span>\n    <span>Uniform</span>\n  </Typography>\n))`\n  font-size: 22px;\n  font-weight: 700;\n  line-height: 27px;\n\n  > span {\n    color: ${({ theme }) => theme.palette.secondary.main};\n  }\n\n  ${props =>\n    props.variant === \"split-color\" &&\n    css`\n      > span:last-child {\n        color: ${({ theme }) => theme.palette.primary.main};\n      }\n    `};\n`;\n","export * from \"./LogoText\";\n","import {\n  CheckboxMarkedCircleOutlineIcon,\n  CloseCircleOutlineIcon,\n} from \"@join-uniform/icons\";\nimport { css } from \"@join-uniform/theme\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport { Button } from \"../Button\";\nimport { Grid } from \"../Grid\";\nimport { Hidden } from \"../Hidden\";\nimport { Typography } from \"../muiComponents\";\n\nexport type PendingChangesButtonProps = {\n  /**\n   * When the current changes can be published (changes present and pass\n   * validation).\n   */\n  hasPublishableChanges: boolean;\n\n  /**\n   * When changes are present. If this is false, the component is hidden.\n   */\n  hasDiscardableChanges: boolean;\n\n  /** Called when the publish button is clicked. */\n  onPublishButtonClick: () => void;\n\n  /** Called when the discard button is clicked. */\n  onDiscardButtonClick: () => void;\n};\n\n/**\n * A pending changes button with discard and publish buttons for use in the\n * admin dashboard app bar.\n */\nexport function PendingChangesButton(props: PendingChangesButtonProps) {\n  const {\n    hasPublishableChanges,\n    hasDiscardableChanges,\n    onPublishButtonClick,\n    onDiscardButtonClick,\n  } = props;\n  if (!hasDiscardableChanges) return null;\n\n  return (\n    <Grid container spacing={8} alignItems=\"center\" wrap=\"nowrap\">\n      <Hidden xsDown mdUp implementation=\"css\">\n        <Grid item>\n          <Typography variant=\"caption\" style={{ whiteSpace: \"nowrap\" }}>\n            Pending changes\n          </Typography>\n        </Grid>\n      </Hidden>\n\n      <Grid item>\n        <Hidden smDown implementation=\"css\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={!hasPublishableChanges}\n            onClick={onPublishButtonClick}\n          >\n            Publish changes\n          </Button>\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton\n            color=\"primary\"\n            disabled={!hasPublishableChanges}\n            onClick={onPublishButtonClick}\n            css={css`\n              margin-right: -8px;\n            `}\n          >\n            <CheckboxMarkedCircleOutlineIcon />\n          </IconButton>\n        </Hidden>\n      </Grid>\n\n      <Grid item>\n        <Hidden smDown implementation=\"css\">\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={onDiscardButtonClick}\n          >\n            Discard all\n          </Button>\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <IconButton color=\"primary\" onClick={onDiscardButtonClick}>\n            <CloseCircleOutlineIcon />\n          </IconButton>\n        </Hidden>\n      </Grid>\n    </Grid>\n  );\n}\n","export * from \"./PendingChangesButton\";\n","import { styled } from \"@join-uniform/theme\";\nimport React, { Fragment, ReactNode } from \"react\";\nimport { Button, ButtonProps } from \"../Button\";\nimport { Hidden } from \"../Hidden\";\nimport { IconButton, Tooltip } from \"../muiComponents\";\n\nexport type ResponsiveIconTextButtonProps = ButtonProps & {\n  /**\n   * Icon shown to the left of the children.\n   */\n  iconNode: ReactNode;\n\n  /**\n   * Tooltip text to display on hover on viewports above \"xs\".\n   */\n  tooltipTitle?: string;\n};\n\n/**\n * A button for use on app-bars and toolbars. Its purpose is to provide a button\n * which contains an icon and description text. On mobile viewport, the\n * description text is hidden to preserve horizontal space. It provides a\n * tooltip on hover on viewports above \"xs\".\n *\n * Uses the \"text\" button variant by default.\n */\nexport function ResponsiveIconTextButton(props: ResponsiveIconTextButtonProps) {\n  const { children, iconNode, tooltipTitle, ...rest } = props;\n\n  const MaybeTooltip = tooltipTitle ? Tooltip : Fragment;\n  const { className, color, component, ...iconProps } = rest;\n  const buttonProps = rest;\n\n  return (\n    <>\n      <Hidden smUp implementation=\"css\">\n        <IconButton {...iconProps}>{iconNode}</IconButton>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <MaybeTooltip title={tooltipTitle}>\n          <Button variant=\"text\" {...buttonProps}>\n            {iconNode}\n            <IconRightMargin />\n            {children}\n          </Button>\n        </MaybeTooltip>\n      </Hidden>\n    </>\n  );\n}\n\nconst IconRightMargin = styled.div`\n  margin-right: 8px;\n`;\n","export * from \"./ResponsiveIconTextButton\";\n","import { css } from \"@join-uniform/theme\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport React from \"react\";\nimport { LoadingSpinner } from \"../LoadingSpinner\";\n\ntype SubmissionProgressDialogProps = {\n  open: boolean;\n};\n\nexport function SubmissionProgressDialog(props: SubmissionProgressDialogProps) {\n  const { open } = props;\n\n  return (\n    <Dialog\n      open={open}\n      classes={{ paper: \"paper\" }}\n      css={css`\n        .paper {\n          width: 200px;\n          height: 200px;\n        }\n      `}\n    >\n      <DialogContent\n        css={css`\n          display: flex;\n          align-items: center;\n        `}\n      >\n        <LoadingSpinner noTransitionDelay />\n      </DialogContent>\n    </Dialog>\n  );\n}\n","export * from \"./SubmissionProgressDialog\";\n","import { css } from \"@join-uniform/theme\";\n\nexport const cardTitleStyle = css`\n  font-size: 18px;\n  font-weight: 500;\n`;\n","export * from \"./Button\";\nexport * from \"./Card\";\nexport * from \"./CardActionArea\";\nexport * from \"./CardHeader\";\nexport * from \"./DashboardCard\";\nexport * from \"./DraggableList\";\nexport * from \"./Hidden\";\nexport * from \"./Grid\";\nexport * from \"./GridHideable\";\nexport * from \"./ImagePicker\";\nexport * from \"./IndexCard\";\nexport * from \"./LayoutDashboard\";\nexport * from \"./LayoutLanding\";\nexport * from \"./LoadingSpinner\";\nexport * from \"./LogoText\";\nexport * from \"./PendingChangesButton\";\nexport * from \"./SubmissionProgressDialog\";\n\nexport * from \"./muiComponents\";\n","import CardActions, {\n  CardActionsProps as MuiCardActionProps,\n} from \"@material-ui/core/CardActions\";\nexport type CardActionsProps = MuiCardActionProps;\nexport { CardActions };\n\nimport CardContent, {\n  CardContentProps as MuiCardContentProps,\n} from \"@material-ui/core/CardContent\";\nexport type CardContentProps = MuiCardContentProps;\nexport { CardContent };\n\nimport Checkbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from \"@material-ui/core/Checkbox\";\nexport type CheckboxProps = MuiCheckboxProps;\nexport { Checkbox };\n\nimport Divider, {\n  DividerProps as MuiDividerProps,\n} from \"@material-ui/core/Divider\";\nexport type DividerProps = MuiDividerProps;\nexport { Divider };\n\nimport FormControl, {\n  FormControlProps as MuiFormControlProps,\n} from \"@material-ui/core/FormControl\";\nexport type FormControlProps = MuiFormControlProps;\nexport { FormControl };\n\nimport FormControlLabel, {\n  FormControlLabelProps as MuiFormControlLabelProps,\n} from \"@material-ui/core/FormControlLabel\";\nexport type FormControlLabelProps = MuiFormControlLabelProps;\nexport { FormControlLabel };\n\nimport FormLabel, {\n  FormLabelProps as MuiFormLabelProps,\n} from \"@material-ui/core/FormLabel\";\nexport type FormLabelProps = MuiFormLabelProps;\nexport { FormLabel };\n\nimport Icon, { IconProps as MuiIconProps } from \"@material-ui/core/Icon\";\nexport type IconProps = MuiIconProps;\nexport { Icon };\n\nimport IconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\nexport type IconButtonProps = MuiIconButtonProps;\nexport { IconButton };\n\nimport Input, { InputProps as MuiInputProps } from \"@material-ui/core/Input\";\nexport type InputProps = MuiInputProps;\nexport { Input };\n\nimport InputLabel, {\n  InputLabelProps as MuiInputLabelProps,\n} from \"@material-ui/core/InputLabel\";\nexport type InputLabelProps = MuiInputLabelProps;\nexport { InputLabel };\n\nimport MenuItem, {\n  MenuItemProps as MuiMenuItemProps,\n} from \"@material-ui/core/MenuItem\";\nexport type MenuItemProps = MuiMenuItemProps;\nexport { MenuItem };\n\nimport Paper, { PaperProps as MuiPaperProps } from \"@material-ui/core/Paper\";\nexport type PaperProps = MuiPaperProps;\nexport { Paper };\n\nimport Popover, {\n  PopoverProps as MuiPopoverProps,\n} from \"@material-ui/core/Popover\";\nexport type PopoverProps = MuiPopoverProps;\nexport { Popover };\n\nimport Radio, { RadioProps as MuiRadioProps } from \"@material-ui/core/Radio\";\nexport type RadioProps = MuiRadioProps;\nexport { Radio };\n\nimport RadioGroup, {\n  RadioGroupProps as MuiRadioGroupProps,\n} from \"@material-ui/core/RadioGroup\";\nexport type RadioGroupProps = MuiRadioGroupProps;\nexport { RadioGroup };\n\nimport Select, {\n  SelectProps as MuiSelectProps,\n} from \"@material-ui/core/Select\";\nexport type SelectProps = MuiSelectProps;\nexport { Select };\n\nimport Switch, {\n  SwitchProps as MuiSwitchProps,\n} from \"@material-ui/core/Switch\";\nexport type SwitchProps = MuiSwitchProps;\nexport { Switch };\n\nimport Table, { TableProps as MuiTableProps } from \"@material-ui/core/Table\";\nexport type TableProps = MuiTableProps;\nexport { Table };\n\nimport TableBody, {\n  TableBodyProps as MuiTableBodyProps,\n} from \"@material-ui/core/TableBody\";\nexport type TableBodyProps = MuiTableBodyProps;\nexport { TableBody };\n\nimport TableCell, {\n  TableCellProps as MuiTableCellProps,\n} from \"@material-ui/core/TableCell\";\nexport type TableCellProps = MuiTableCellProps;\nexport { TableCell };\n\nimport TableFooter, {\n  TableFooterProps as MuiTableFooterProps,\n} from \"@material-ui/core/TableFooter\";\nexport type TableFooterProps = MuiTableFooterProps;\nexport { TableFooter };\n\nimport TableHead, {\n  TableHeadProps as MuiTableHeadProps,\n} from \"@material-ui/core/TableHead\";\nexport type TableHeadProps = MuiTableHeadProps;\nexport { TableHead };\n\nimport TablePagination, {\n  TablePaginationProps as MuiTablePaginationProps,\n} from \"@material-ui/core/TablePagination\";\nexport type TablePaginationProps = MuiTablePaginationProps;\nexport { TablePagination };\n\nimport TableRow, {\n  TableRowProps as MuiTableRowProps,\n} from \"@material-ui/core/TableRow\";\nexport type TableRowProps = MuiTableRowProps;\nexport { TableRow };\n\nimport TextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from \"@material-ui/core/TextField\";\nexport type TextFieldProps = MuiTextFieldProps;\nexport { TextField };\n\nimport Toolbar, {\n  ToolbarProps as MuiToolbarProps,\n} from \"@material-ui/core/Toolbar\";\nexport type ToolbarProps = MuiToolbarProps;\nexport { Toolbar };\n\nimport Tooltip, {\n  TooltipProps as MuiTooltipProps,\n} from \"@material-ui/core/Tooltip\";\nexport type TooltipProps = MuiTooltipProps;\nexport { Tooltip };\n\nimport Typography, {\n  TypographyProps as MuiTypographyProps,\n} from \"@material-ui/core/Typography\";\nexport type TypographyProps = MuiTypographyProps;\nexport { Typography };\n","import SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\nimport React from \"react\";\n\nexport function CheckboxMarkedCircleOutlineIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2,4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\" />\n    </SvgIcon>\n  );\n}\n","import SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\nimport React from \"react\";\n\nexport function CloseCircleOutlineIcon(props: SvgIconProps) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20M12,2C6.47,2 2,6.47 2,12C2,17.53 6.47,22 12,22C17.53,22 22,17.53 22,12C22,6.47 17.53,2 12,2M14.59,8L12,10.59L9.41,8L8,9.41L10.59,12L8,14.59L9.41,16L12,13.41L14.59,16L16,14.59L13.41,12L16,9.41L14.59,8Z\" />\n    </SvgIcon>\n  );\n}\n","export { default as AddIcon } from \"@material-ui/icons/Add\";\nexport * from \"./CheckboxMarkedCircleOutlineIcon\";\nexport * from \"./CloseCircleOutlineIcon\";\nexport { default as CloudUploadIcon } from \"@material-ui/icons/CloudUpload\";\nexport { default as CollectionsIcon } from \"@material-ui/icons/Collections\";\nexport { default as DashboardIcon } from \"@material-ui/icons/Dashboard\";\nexport { default as DeleteIcon } from \"@material-ui/icons/Delete\";\nexport { default as DoneIcon } from \"@material-ui/icons/Done\";\nexport { default as DragHandleIcon } from \"@material-ui/icons/DragHandle\";\nexport { default as EditIcon } from \"@material-ui/icons/Edit\";\nexport { default as MenuIcon } from \"@material-ui/icons/Menu\";\nexport { default as PowerSettingsNewIcon } from \"@material-ui/icons/PowerSettingsNew\"; // prettier-ignore\nexport { default as RemoveIcon } from \"@material-ui/icons/Remove\";\nexport { default as TextureIcon } from \"@material-ui/icons/Texture\";\n","import { models } from \"@join-uniform/common\";\nimport { createContext, ReactElement, useContext, useMemo } from \"react\";\nimport LocalizedStrings, { LocalizedStringsMethods } from \"react-localization\";\nimport { LocalizedStringKey, translations } from \"./translations\";\n\nexport type LocalizedString = models.LocalizedString;\nexport type LocalizedStringKey = LocalizedStringKey;\n\ntype Strings = LocalizedStringsMethods & Record<LocalizedStringKey, string>;\n\nexport const strings: Strings = new LocalizedStrings(translations);\n\nexport const LocalizationContext = createContext<\"en\" | \"hi\">(\"en\");\n\n// TODO: Subscribe to localization changes.\n/**\n * Renders a localized string using the current localization language.\n */\nexport function L(props: { localizedString: LocalizedString }) {\n  const { localizedString } = props;\n  const language = useContext(LocalizationContext);\n  const text = useMemo(\n    () => {\n      if (!localizedString.hi) return localizedString.en;\n      return localizedString[language]!;\n    },\n    [language],\n  );\n\n  return (text as unknown) as ReactElement<any>;\n}\n","// tslint:disable:no-object-literal-type-assertion\nimport { models } from \"@join-uniform/common\";\n\nconst localizedStrings: Record<LocalizedStringKey, models.LocalizedString> = {\n  landingFooter: {\n    en: \"Copyright : Eduphilic Consultancy Pvt Ltd 2018\",\n    hi: null,\n  },\n};\n\nexport const translations = Object.entries(localizedStrings).reduce(\n  (accumulator, [key, localizedString]) => {\n    const localizedStringKey = key as LocalizedStringKey;\n\n    accumulator.en[localizedStringKey] = localizedString.en;\n    if (localizedString.hi !== null) {\n      accumulator.hi[localizedStringKey] = localizedString.hi;\n    }\n\n    return accumulator;\n  },\n  {\n    en: {} as Record<LocalizedStringKey, string>,\n    hi: {} as Record<LocalizedStringKey, string>,\n  },\n);\n\nexport type LocalizedStringKey = \"landingFooter\";\n","import CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React, { SFC } from \"react\";\nimport { createGlobalStyle } from \"./styledComponents\";\n\nexport const ThemeBaseline: SFC<{}> = ({ children }) => (\n  <>\n    <CssBaseline />\n    <RootGlobalStyle />\n\n    {children}\n  </>\n);\n\nconst RootGlobalStyle = createGlobalStyle`\nbody {\n  font-family: 'Montserrat', sans-serif;\n}\n\n/* Prevent iPhone page zoom on input selection. */\n@media screen and (-webkit-min-device-pixel-ratio: 0) and (max-device-width: 1024px) {\n  select,\n  textarea,\n  input {\n    font-size: 16px !important;\n  }\n}\n\n  html,\n  body {\n    height: 100%;\n  }\n\n  body,\n  #__next,\n  #root {\n    display: flex;\n    flex-direction: column;\n  }\n\n  #__next,\n  #root {\n    flex: 1;\n  }\n`;\n","export * from \"./themeProviders\";\nexport * from \"./styledComponents\";\nexport * from \"./ThemeBaseline\";\nexport * from \"./mixins\";\n\nimport { Theme as BaseTheme } from \"./themes\";\nexport type Theme = BaseTheme;\n","import { css } from \"./styledComponents\";\n\nexport const mixins = {\n  gutters: (\n    styles: {\n      xs?: ReturnType<typeof css>;\n      sm?: ReturnType<typeof css>;\n    } = {},\n  ) => {\n    return css`\n      padding-left: 16px;\n      padding-right: 16px;\n      ${styles.xs};\n\n      ${({ theme }) => theme.breakpoints.up(\"sm\")} {\n        padding-left: 24px;\n        padding-right: 24px;\n        ${styles.sm};\n      }\n    `;\n  },\n\n  toolbar: css`\n    min-height: 56px;\n\n    ${({ theme }) => theme.breakpoints.up(\"xs\")} and (orientation: landscape) {\n      min-height: 48px;\n    }\n\n    ${({ theme }) => theme.breakpoints.up(\"sm\")} {\n      min-height: 64px;\n    }\n  `,\n};\n","/**\n * This module re-exports Styled Components with our custom Material UI theme so\n * that autocompletion and typechecking works with TypeScript.\n *\n * @see https://www.styled-components.com/docs/api#define-a-theme-interface\n */\n\nimport * as styledComponents from \"styled-components\";\n// tslint:disable-next-line:no-duplicate-imports\nimport { ThemedStyledComponentsModule } from \"styled-components\";\n\nimport { Theme } from \"./themes\";\n\nconst {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  createGlobalStyle,\n  ServerStyleSheet,\n} = styledComponents as ThemedStyledComponentsModule<Theme>;\n\nexport {\n  styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  createGlobalStyle,\n  ServerStyleSheet,\n};\n","import { Theme } from \"@material-ui/core/styles\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport React, { ReactChild } from \"react\";\nimport { ThemeProvider as StyledComponentsThemeProvider } from \"./styledComponents\";\nimport {\n  adminAppDrawerTheme,\n  darkTheme,\n  lightTheme,\n  userAppDrawerTheme,\n} from \"./themes\";\n\nexport { lightTheme };\nexport const LightTheme = createTheme(\"light\");\nexport const DarkTheme = createTheme(\"dark\");\nexport const AdminAppDrawerTheme = createTheme(\"adminAppDrawer\");\nexport const UserAppDrawerTheme = createTheme(\"userAppDrawer\");\n\nfunction createTheme(\n  themeType: \"light\" | \"dark\" | \"adminAppDrawer\" | \"userAppDrawer\",\n) {\n  let theme: Theme;\n  switch (themeType) {\n    case \"light\":\n      theme = lightTheme;\n      break;\n    case \"dark\":\n      theme = darkTheme;\n      break;\n    case \"adminAppDrawer\":\n      theme = adminAppDrawerTheme;\n      break;\n    case \"userAppDrawer\":\n      theme = userAppDrawerTheme;\n      break;\n  }\n\n  return ({ children }: { children?: ReactChild }) => (\n    <MuiThemeProvider theme={theme}>\n      <StyledComponentsThemeProvider theme={theme}>\n        {children}\n      </StyledComponentsThemeProvider>\n    </MuiThemeProvider>\n  );\n}\n","/**\n * This module provides overrides to the default theme of Material UI.\n *\n * @see https://material-ui-next.com/customization/default-theme/\n */\nimport createMuiTheme, {\n  ThemeOptions,\n} from \"@material-ui/core/styles/createMuiTheme\";\n\nconst theme: ThemeOptions = {\n  palette: {\n    background: {\n      // default: \"#fff\",\n    },\n    primary: {\n      main: \"#2f8d2b\", // green\n    },\n    secondary: {\n      main: \"#f9d017\", // yellow\n    },\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: \"'Montserrat', sans-serif\",\n  },\n};\n\nexport const lightTheme = createMuiTheme({\n  ...theme,\n});\n\nexport const darkTheme = createMuiTheme({\n  ...theme,\n  palette: {\n    ...theme.palette,\n    type: \"dark\",\n  },\n});\n\nexport const adminAppDrawerTheme = createMuiTheme({\n  ...theme,\n  palette: {\n    ...theme.palette,\n    background: { default: \"#4f4f4f\" },\n    type: \"dark\",\n  },\n});\n\nexport const userAppDrawerTheme = createMuiTheme({\n  ...theme,\n  palette: {\n    ...theme.palette,\n    background: { default: \"#03285b\" },\n    type: \"dark\",\n  },\n  // Make portaled bottom navigation app bars have the same background color\n  // as the bottom navigation swipe interface.\n  overrides: {\n    MuiAppBar: {\n      root: {\n        backgroundColor: \"#03285b !important\",\n      },\n    },\n  },\n});\n\nexport type Theme = typeof lightTheme;\n","// This is an automatically generated file.\n// DO NOT MODIFY\n// Use the command: \"yarn graphql\" to regenerate.\nimport { models } from \"@join-uniform/common\";\nexport type Maybe<T> = T | null;\n\n\nexport interface CreateCategoryRequest {\n  \n  name: string;\n  \n  education: string;\n  \n  pricePerPaperRs: number;\n  \n  entryId: string;\n}\n\nexport interface CreateEntryRequest {\n  \n  name: string;\n  \n  explanation: string;\n  \n  logoUrl: string;\n}\n\nexport interface UpdateCategoryRequest {\n  \n  name: string;\n  \n  education: string;\n  \n  pricePerPaperRs: number;\n}\n\nexport interface UpdateEntryRequest {\n  \n  name: string;\n  \n  logoUrl: string;\n  \n  description: string;\n}\n\nexport interface UpdateIndexCardsRequest {\n  /** Same as the id for the Entry the IndexCard represents. */\n  id: string;\n  \n  categories: UpdateIndexCardsCategoriesRequest[];\n  \n  colorBlock: string;\n  \n  colorCategoryBackground: string;\n  \n  colorLogoBackground: string;\n  \n  colorTitle: string;\n}\n\nexport interface UpdateIndexCardsCategoriesRequest {\n  /** Id of the category. */\n  id: string;\n  \n  visible: boolean;\n}\n\nexport interface UpdateIndexPageRequest {\n  \n  heroBackgroundImageUrl: string;\n  \n  heroBackgroundAlpha: number;\n  \n  heroPrimaryTextEnglish: string;\n  \n  heroPrimaryTextHindi: Maybe<string>;\n  \n  heroFeatures: models.LocalizedString[];\n  \n  heroFooterTextEnglish: string;\n  \n  heroFooterTextHindi: Maybe<string>;\n  \n  aboutTitleEnglish: string;\n  \n  aboutTitleHindi: Maybe<string>;\n  \n  aboutTextEnglish: string;\n  \n  aboutTextHindi: Maybe<string>;\n  \n  aboutImages: UpdateIndexPageAboutImageRequest[];\n}\n\nexport interface UpdateIndexPageAboutImageRequest {\n  \n  id: string;\n  \n  imageUrl: string;\n  \n  title: models.LocalizedString;\n  \n  text: models.LocalizedString;\n}\n\n/** Represents a localized string. The Hindi field is optional. Fields: - en: String! - hi: String */\nexport type LocalizedString = models.LocalizedString;\n\n\nexport type Json = any;\n\n\n// ====================================================\n// Documents\n// ====================================================\n\n\n\n  export type AdminLayoutDashboardContainerLogoUrlVariables = {\n  }\n\n  export type AdminLayoutDashboardContainerLogoUrlQuery = {\n    __typename?: \"Query\";\n    \n    logoConfig: AdminLayoutDashboardContainerLogoUrlLogoConfig;\n  }\n\n  export type AdminLayoutDashboardContainerLogoUrlLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    url: string;\n  } \n\n  export type EntryManagerCreateCategoryVariables = {\n    request: CreateCategoryRequest;\n  }\n\n  export type EntryManagerCreateCategoryMutation = {\n    __typename?: \"Mutation\";\n    \n    createCategory: EntryManagerCreateCategoryCreateCategory;\n  }\n\n  export type EntryManagerCreateCategoryCreateCategory = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerCreateEntryVariables = {\n    request: CreateEntryRequest;\n  }\n\n  export type EntryManagerCreateEntryMutation = {\n    __typename?: \"Mutation\";\n    \n    createEntry: EntryManagerCreateEntryCreateEntry;\n  }\n\n  export type EntryManagerCreateEntryCreateEntry = EntryManagerEntryPartsFragment\n\n  export type EntryManagerDeleteCategoriesVariables = {\n    categoryIds: string[];\n  }\n\n  export type EntryManagerDeleteCategoriesMutation = {\n    __typename?: \"Mutation\";\n    \n    deleteCategories: EntryManagerDeleteCategoriesDeleteCategories[];\n  }\n\n  export type EntryManagerDeleteCategoriesDeleteCategories = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerDeleteEntriesVariables = {\n    entryIds: string[];\n  }\n\n  export type EntryManagerDeleteEntriesMutation = {\n    __typename?: \"Mutation\";\n    \n    deleteEntries: EntryManagerDeleteEntriesDeleteEntries[];\n  }\n\n  export type EntryManagerDeleteEntriesDeleteEntries = EntryManagerEntryPartsFragment\n\n  export type EntryManagerGetCategoryVariables = {\n    id: string;\n  }\n\n  export type EntryManagerGetCategoryQuery = {\n    __typename?: \"Query\";\n    \n    categoriesByIds: EntryManagerGetCategoryCategoriesByIds[];\n  }\n\n  export type EntryManagerGetCategoryCategoriesByIds = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerGetEntriesVariables = {\n  }\n\n  export type EntryManagerGetEntriesQuery = {\n    __typename?: \"Query\";\n    \n    entries: EntryManagerGetEntriesEntries[];\n  }\n\n  export type EntryManagerGetEntriesEntries = EntryManagerEntryPartsFragment\n\n  export type EntryManagerGetEntryVariables = {\n    entryId: string;\n  }\n\n  export type EntryManagerGetEntryQuery = {\n    __typename?: \"Query\";\n    \n    entriesByIds: EntryManagerGetEntryEntriesByIds[];\n  }\n\n  export type EntryManagerGetEntryEntriesByIds = EntryManagerEntryPartsFragment\n\n  export type EntryManagerSetCategoryActivationStatusesVariables = {\n    categoryIds: string[];\n    activationStatuses: boolean[];\n  }\n\n  export type EntryManagerSetCategoryActivationStatusesMutation = {\n    __typename?: \"Mutation\";\n    \n    setCategoryActivationStatuses: EntryManagerSetCategoryActivationStatusesSetCategoryActivationStatuses[];\n  }\n\n  export type EntryManagerSetCategoryActivationStatusesSetCategoryActivationStatuses = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerUpdateCategoryVariables = {\n    categoryId: string;\n    update: UpdateCategoryRequest;\n  }\n\n  export type EntryManagerUpdateCategoryMutation = {\n    __typename?: \"Mutation\";\n    \n    updateCategory: EntryManagerUpdateCategoryUpdateCategory;\n  }\n\n  export type EntryManagerUpdateCategoryUpdateCategory = EntryManagerCategoryPartsFragment\n\n  export type EntryManagerUpdateEntryVariables = {\n    entryId: string;\n    update: UpdateEntryRequest;\n  }\n\n  export type EntryManagerUpdateEntryMutation = {\n    __typename?: \"Mutation\";\n    \n    updateEntry: EntryManagerUpdateEntryUpdateEntry;\n  }\n\n  export type EntryManagerUpdateEntryUpdateEntry = EntryManagerEntryPartsFragment\n\n  export type IndexManagerGetIndexPageConfigVariables = {\n  }\n\n  export type IndexManagerGetIndexPageConfigQuery = {\n    __typename?: \"Query\";\n    \n    logoConfig: IndexManagerGetIndexPageConfigLogoConfig;\n    \n    indexPageConfig: IndexManagerGetIndexPageConfigIndexPageConfig;\n  }\n\n  export type IndexManagerGetIndexPageConfigLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    id: string;\n    \n    url: string;\n  } \n\n  export type IndexManagerGetIndexPageConfigIndexPageConfig = {\n    __typename?: \"IndexPageConfig\";\n    \n    id: string;\n    \n    heroBackgroundImageUrl: string;\n    \n    heroBackgroundAlpha: number;\n    \n    heroPrimaryText: models.LocalizedString;\n    \n    heroFeatures: models.LocalizedString[];\n    \n    heroFooterText: models.LocalizedString;\n    \n    aboutTitle: models.LocalizedString;\n    \n    aboutText: models.LocalizedString;\n    \n    aboutImages: IndexManagerGetIndexPageConfigAboutImages[];\n  } \n\n  export type IndexManagerGetIndexPageConfigAboutImages = {\n    __typename?: \"IndexPageAboutImage\";\n    \n    id: string;\n    \n    imageUrl: string;\n    \n    title: models.LocalizedString;\n    \n    text: models.LocalizedString;\n  } \n\n  export type IndexManagerUpdateIndexPageVariables = {\n    logoUrl: string;\n    indexPageUpdate: UpdateIndexPageRequest;\n    indexCardsUpdate: UpdateIndexCardsRequest[];\n  }\n\n  export type IndexManagerUpdateIndexPageMutation = {\n    __typename?: \"Mutation\";\n    \n    updateLogoUrl: IndexManagerUpdateIndexPageUpdateLogoUrl;\n    \n    updateIndexPage: IndexManagerUpdateIndexPageUpdateIndexPage;\n    \n    updateIndexCards: IndexManagerUpdateIndexPageUpdateIndexCards[];\n  }\n\n  export type IndexManagerUpdateIndexPageUpdateLogoUrl = {\n    __typename?: \"LogoConfig\";\n    \n    id: string;\n    \n    url: string;\n  } \n\n  export type IndexManagerUpdateIndexPageUpdateIndexPage = {\n    __typename?: \"IndexPageConfig\";\n    \n    id: string;\n    \n    heroBackgroundImageUrl: string;\n    \n    heroBackgroundAlpha: number;\n    \n    heroPrimaryText: models.LocalizedString;\n    \n    heroFeatures: models.LocalizedString[];\n    \n    aboutTitle: models.LocalizedString;\n    \n    aboutText: models.LocalizedString;\n    \n    aboutImages: IndexManagerUpdateIndexPageAboutImages[];\n  } \n\n  export type IndexManagerUpdateIndexPageAboutImages = {\n    __typename?: \"IndexPageAboutImage\";\n    \n    id: string;\n    \n    imageUrl: string;\n    \n    title: models.LocalizedString;\n    \n    text: models.LocalizedString;\n  } \n\n  export type IndexManagerUpdateIndexPageUpdateIndexCards = {\n    __typename?: \"IndexCard\";\n    \n    id: string;\n    \n    categories: IndexManagerUpdateIndexPageCategories[];\n    \n    colorBlock: string;\n    \n    colorCategoryBackground: string;\n    \n    colorLogoBackground: string;\n    \n    colorTitle: string;\n    \n    entryLogoUrl: string;\n  } \n\n  export type IndexManagerUpdateIndexPageCategories = {\n    __typename?: \"IndexCardCategory\";\n    \n    id: string;\n    \n    visible: boolean;\n    \n    title: string;\n  } \n\n  export type LandingGetIndexPageConfigVariables = {\n  }\n\n  export type LandingGetIndexPageConfigQuery = {\n    __typename?: \"Query\";\n    \n    indexPageConfig: LandingGetIndexPageConfigIndexPageConfig;\n    \n    logoConfig: LandingGetIndexPageConfigLogoConfig;\n    \n    indexCards: LandingGetIndexPageConfigIndexCards[];\n  }\n\n  export type LandingGetIndexPageConfigIndexPageConfig = {\n    __typename?: \"IndexPageConfig\";\n    \n    id: string;\n    \n    heroBackgroundImageUrl: string;\n    \n    heroBackgroundAlpha: number;\n    \n    heroPrimaryText: models.LocalizedString;\n    \n    heroFeatures: models.LocalizedString[];\n    \n    heroFooterText: models.LocalizedString;\n    \n    aboutTitle: models.LocalizedString;\n    \n    aboutText: models.LocalizedString;\n    \n    aboutImages: LandingGetIndexPageConfigAboutImages[];\n  } \n\n  export type LandingGetIndexPageConfigAboutImages = {\n    __typename?: \"IndexPageAboutImage\";\n    \n    id: string;\n    \n    title: models.LocalizedString;\n    \n    text: models.LocalizedString;\n    \n    imageUrl: string;\n  } \n\n  export type LandingGetIndexPageConfigLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    id: string;\n    \n    url: string;\n  } \n\n  export type LandingGetIndexPageConfigIndexCards = {\n    __typename?: \"IndexCard\";\n    \n    id: string;\n    \n    title: string;\n    \n    entryLogoUrl: string;\n    \n    categories: LandingGetIndexPageConfigCategories[];\n    \n    colorBlock: string;\n    \n    colorCategoryBackground: string;\n    \n    colorLogoBackground: string;\n    \n    colorTitle: string;\n  } \n\n  export type LandingGetIndexPageConfigCategories = {\n    __typename?: \"IndexCardCategory\";\n    \n    id: string;\n    \n    title: string;\n  } \n\n  export type WithHtmlSeoDocumentHtmlConfigVariables = {\n  }\n\n  export type WithHtmlSeoDocumentHtmlConfigQuery = {\n    __typename?: \"Query\";\n    \n    htmlConfig: WithHtmlSeoDocumentHtmlConfigHtmlConfig;\n  }\n\n  export type WithHtmlSeoDocumentHtmlConfigHtmlConfig = {\n    __typename?: \"HtmlConfig\";\n    \n    googleAnalyticsId: Maybe<string>;\n    \n    metaKeywords: Maybe<string>;\n    \n    metaDescription: Maybe<string>;\n    \n    metaAuthor: Maybe<string>;\n    \n    metaAbstract: Maybe<string>;\n    \n    metaCopyright: Maybe<string>;\n  } \n\n  export type WithLoadingSpinnerAppLogoConfigVariables = {\n  }\n\n  export type WithLoadingSpinnerAppLogoConfigQuery = {\n    __typename?: \"Query\";\n    \n    logoConfig: WithLoadingSpinnerAppLogoConfigLogoConfig;\n  }\n\n  export type WithLoadingSpinnerAppLogoConfigLogoConfig = {\n    __typename?: \"LogoConfig\";\n    \n    url: string;\n  } \n\n  export type CloudinaryConfigVariables = {\n  }\n\n  export type CloudinaryConfigQuery = {\n    __typename?: \"Query\";\n    \n    cloudinaryCloudName: string;\n    \n    cloudinaryApiKey: string;\n  }\n\n  export type CloudinaryGenerateMediaLibraryAuthenticationTokenVariables = {\n  }\n\n  export type CloudinaryGenerateMediaLibraryAuthenticationTokenMutation = {\n    __typename?: \"Mutation\";\n    \n    generateCloudinaryMediaLibraryAuthenticationToken: CloudinaryGenerateMediaLibraryAuthenticationTokenGenerateCloudinaryMediaLibraryAuthenticationToken;\n  }\n\n  export type CloudinaryGenerateMediaLibraryAuthenticationTokenGenerateCloudinaryMediaLibraryAuthenticationToken = {\n    __typename?: \"CloudinaryMediaWidgetAuthenticationToken\";\n    \n    api_key: string;\n    \n    cloud_name: string;\n    \n    signature: string;\n    \n    timestamp: string;\n    \n    username: string;\n  } \n\n  export type CloudinaryGenerateSignatureVariables = {\n    paramsToSign: Json;\n  }\n\n  export type CloudinaryGenerateSignatureMutation = {\n    __typename?: \"Mutation\";\n    \n    generateCloudinarySignature: string;\n  }\n\n  export type EntryManagerCategoryPartsFragment = {\n    __typename?: \"Category\";\n    \n    id: string;\n    \n    name: string;\n    \n    education: string;\n    \n    pricePerPaperRs: number;\n    \n    activated: boolean;\n  }\n\n  export type EntryManagerEntryPartsFragment = {\n    __typename?: \"Entry\";\n    \n    id: string;\n    \n    name: string;\n    \n    logoUrl: string;\n    \n    description: string;\n    \n    categories: EntryManagerEntryPartsCategories[];\n  }\n\n  export type EntryManagerEntryPartsCategories =EntryManagerCategoryPartsFragment\n\nimport * as ReactApollo from 'react-apollo';\nimport * as React from 'react';\n\nimport gql from 'graphql-tag';\n\n\n\n// ====================================================\n// Fragments\n// ====================================================\n\n\n\n          export const EntryManagerCategoryPartsFragmentDoc = gql`\n    fragment EntryManagerCategoryParts on Category {\n  id\n  name\n  education\n  pricePerPaperRs\n  activated\n}\n    \n      \n    \n  `;\n        \n\n          export const EntryManagerEntryPartsFragmentDoc = gql`\n    fragment EntryManagerEntryParts on Entry {\n  id\n  name\n  logoUrl\n  description\n  categories {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n        \n\n\n\n// ====================================================\n// Components\n// ====================================================\n\n\n    export const AdminLayoutDashboardContainerLogoUrlDocument = gql`\n    query AdminLayoutDashboardContainerLogoUrl {\n  logoConfig {\n    url\n  }\n}\n    \n      \n    \n  `;\n     export class AdminLayoutDashboardContainerLogoUrlComponent extends React.Component<Partial<ReactApollo.QueryProps<AdminLayoutDashboardContainerLogoUrlQuery, AdminLayoutDashboardContainerLogoUrlVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<AdminLayoutDashboardContainerLogoUrlQuery, AdminLayoutDashboardContainerLogoUrlVariables>\n                query={ AdminLayoutDashboardContainerLogoUrlDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type AdminLayoutDashboardContainerLogoUrlProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        AdminLayoutDashboardContainerLogoUrlQuery, \n                                        AdminLayoutDashboardContainerLogoUrlVariables\n                                    >\n                    >\n         & TChildProps;\n    export function AdminLayoutDashboardContainerLogoUrlHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                AdminLayoutDashboardContainerLogoUrlQuery,\n                AdminLayoutDashboardContainerLogoUrlVariables,\n                AdminLayoutDashboardContainerLogoUrlProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, AdminLayoutDashboardContainerLogoUrlQuery, AdminLayoutDashboardContainerLogoUrlVariables, AdminLayoutDashboardContainerLogoUrlProps<TChildProps>>(\n            AdminLayoutDashboardContainerLogoUrlDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerCreateCategoryDocument = gql`\n    mutation EntryManagerCreateCategory($request: CreateCategoryRequest!) {\n  createCategory(request: $request) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerCreateCategoryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables>\n                mutation={ EntryManagerCreateCategoryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerCreateCategoryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerCreateCategoryMutation, \n                                        EntryManagerCreateCategoryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerCreateCategoryMutationFn = ReactApollo.MutationFn<EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables>;\n    export function EntryManagerCreateCategoryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerCreateCategoryMutation,\n                EntryManagerCreateCategoryVariables,\n                EntryManagerCreateCategoryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerCreateCategoryMutation, EntryManagerCreateCategoryVariables, EntryManagerCreateCategoryProps<TChildProps>>(\n            EntryManagerCreateCategoryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerCreateEntryDocument = gql`\n    mutation EntryManagerCreateEntry($request: CreateEntryRequest!) {\n  createEntry(request: $request) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerCreateEntryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables>\n                mutation={ EntryManagerCreateEntryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerCreateEntryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerCreateEntryMutation, \n                                        EntryManagerCreateEntryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerCreateEntryMutationFn = ReactApollo.MutationFn<EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables>;\n    export function EntryManagerCreateEntryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerCreateEntryMutation,\n                EntryManagerCreateEntryVariables,\n                EntryManagerCreateEntryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerCreateEntryMutation, EntryManagerCreateEntryVariables, EntryManagerCreateEntryProps<TChildProps>>(\n            EntryManagerCreateEntryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerDeleteCategoriesDocument = gql`\n    mutation EntryManagerDeleteCategories($categoryIds: [ID!]!) {\n  deleteCategories(categoryIds: $categoryIds) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerDeleteCategoriesComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables>\n                mutation={ EntryManagerDeleteCategoriesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerDeleteCategoriesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerDeleteCategoriesMutation, \n                                        EntryManagerDeleteCategoriesVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerDeleteCategoriesMutationFn = ReactApollo.MutationFn<EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables>;\n    export function EntryManagerDeleteCategoriesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerDeleteCategoriesMutation,\n                EntryManagerDeleteCategoriesVariables,\n                EntryManagerDeleteCategoriesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerDeleteCategoriesMutation, EntryManagerDeleteCategoriesVariables, EntryManagerDeleteCategoriesProps<TChildProps>>(\n            EntryManagerDeleteCategoriesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerDeleteEntriesDocument = gql`\n    mutation EntryManagerDeleteEntries($entryIds: [ID!]!) {\n  deleteEntries(entryIds: $entryIds) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerDeleteEntriesComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables>\n                mutation={ EntryManagerDeleteEntriesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerDeleteEntriesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerDeleteEntriesMutation, \n                                        EntryManagerDeleteEntriesVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerDeleteEntriesMutationFn = ReactApollo.MutationFn<EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables>;\n    export function EntryManagerDeleteEntriesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerDeleteEntriesMutation,\n                EntryManagerDeleteEntriesVariables,\n                EntryManagerDeleteEntriesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerDeleteEntriesMutation, EntryManagerDeleteEntriesVariables, EntryManagerDeleteEntriesProps<TChildProps>>(\n            EntryManagerDeleteEntriesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerGetCategoryDocument = gql`\n    query EntryManagerGetCategory($id: ID!) {\n  categoriesByIds(ids: [$id]) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerGetCategoryComponent extends React.Component<Partial<ReactApollo.QueryProps<EntryManagerGetCategoryQuery, EntryManagerGetCategoryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<EntryManagerGetCategoryQuery, EntryManagerGetCategoryVariables>\n                query={ EntryManagerGetCategoryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerGetCategoryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        EntryManagerGetCategoryQuery, \n                                        EntryManagerGetCategoryVariables\n                                    >\n                    >\n         & TChildProps;\n    export function EntryManagerGetCategoryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerGetCategoryQuery,\n                EntryManagerGetCategoryVariables,\n                EntryManagerGetCategoryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerGetCategoryQuery, EntryManagerGetCategoryVariables, EntryManagerGetCategoryProps<TChildProps>>(\n            EntryManagerGetCategoryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerGetEntriesDocument = gql`\n    query EntryManagerGetEntries {\n  entries {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerGetEntriesComponent extends React.Component<Partial<ReactApollo.QueryProps<EntryManagerGetEntriesQuery, EntryManagerGetEntriesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<EntryManagerGetEntriesQuery, EntryManagerGetEntriesVariables>\n                query={ EntryManagerGetEntriesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerGetEntriesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        EntryManagerGetEntriesQuery, \n                                        EntryManagerGetEntriesVariables\n                                    >\n                    >\n         & TChildProps;\n    export function EntryManagerGetEntriesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerGetEntriesQuery,\n                EntryManagerGetEntriesVariables,\n                EntryManagerGetEntriesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerGetEntriesQuery, EntryManagerGetEntriesVariables, EntryManagerGetEntriesProps<TChildProps>>(\n            EntryManagerGetEntriesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerGetEntryDocument = gql`\n    query EntryManagerGetEntry($entryId: ID!) {\n  entriesByIds(ids: [$entryId]) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerGetEntryComponent extends React.Component<Partial<ReactApollo.QueryProps<EntryManagerGetEntryQuery, EntryManagerGetEntryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<EntryManagerGetEntryQuery, EntryManagerGetEntryVariables>\n                query={ EntryManagerGetEntryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerGetEntryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        EntryManagerGetEntryQuery, \n                                        EntryManagerGetEntryVariables\n                                    >\n                    >\n         & TChildProps;\n    export function EntryManagerGetEntryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerGetEntryQuery,\n                EntryManagerGetEntryVariables,\n                EntryManagerGetEntryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerGetEntryQuery, EntryManagerGetEntryVariables, EntryManagerGetEntryProps<TChildProps>>(\n            EntryManagerGetEntryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerSetCategoryActivationStatusesDocument = gql`\n    mutation EntryManagerSetCategoryActivationStatuses($categoryIds: [ID!]!, $activationStatuses: [Boolean!]!) {\n  setCategoryActivationStatuses(categoryIds: $categoryIds, activatedStatuses: $activationStatuses) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerSetCategoryActivationStatusesComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables>\n                mutation={ EntryManagerSetCategoryActivationStatusesDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerSetCategoryActivationStatusesProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerSetCategoryActivationStatusesMutation, \n                                        EntryManagerSetCategoryActivationStatusesVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerSetCategoryActivationStatusesMutationFn = ReactApollo.MutationFn<EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables>;\n    export function EntryManagerSetCategoryActivationStatusesHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerSetCategoryActivationStatusesMutation,\n                EntryManagerSetCategoryActivationStatusesVariables,\n                EntryManagerSetCategoryActivationStatusesProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerSetCategoryActivationStatusesMutation, EntryManagerSetCategoryActivationStatusesVariables, EntryManagerSetCategoryActivationStatusesProps<TChildProps>>(\n            EntryManagerSetCategoryActivationStatusesDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerUpdateCategoryDocument = gql`\n    mutation EntryManagerUpdateCategory($categoryId: ID!, $update: UpdateCategoryRequest!) {\n  updateCategory(categoryId: $categoryId, update: $update) {\n    ...EntryManagerCategoryParts\n  }\n}\n    \n      ${EntryManagerCategoryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerUpdateCategoryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables>\n                mutation={ EntryManagerUpdateCategoryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerUpdateCategoryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerUpdateCategoryMutation, \n                                        EntryManagerUpdateCategoryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerUpdateCategoryMutationFn = ReactApollo.MutationFn<EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables>;\n    export function EntryManagerUpdateCategoryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerUpdateCategoryMutation,\n                EntryManagerUpdateCategoryVariables,\n                EntryManagerUpdateCategoryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerUpdateCategoryMutation, EntryManagerUpdateCategoryVariables, EntryManagerUpdateCategoryProps<TChildProps>>(\n            EntryManagerUpdateCategoryDocument,\n            operationOptions\n        );\n    };\n    export const EntryManagerUpdateEntryDocument = gql`\n    mutation EntryManagerUpdateEntry($entryId: ID!, $update: UpdateEntryRequest!) {\n  updateEntry(entryId: $entryId, update: $update) {\n    ...EntryManagerEntryParts\n  }\n}\n    \n      ${EntryManagerEntryPartsFragmentDoc}\n    \n  `;\n     export class EntryManagerUpdateEntryComponent extends React.Component<Partial<ReactApollo.MutationProps<EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables>\n                mutation={ EntryManagerUpdateEntryDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type EntryManagerUpdateEntryProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        EntryManagerUpdateEntryMutation, \n                                        EntryManagerUpdateEntryVariables\n                                        >\n                >\n         & TChildProps;\n    export type EntryManagerUpdateEntryMutationFn = ReactApollo.MutationFn<EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables>;\n    export function EntryManagerUpdateEntryHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                EntryManagerUpdateEntryMutation,\n                EntryManagerUpdateEntryVariables,\n                EntryManagerUpdateEntryProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, EntryManagerUpdateEntryMutation, EntryManagerUpdateEntryVariables, EntryManagerUpdateEntryProps<TChildProps>>(\n            EntryManagerUpdateEntryDocument,\n            operationOptions\n        );\n    };\n    export const IndexManagerGetIndexPageConfigDocument = gql`\n    query IndexManagerGetIndexPageConfig {\n  logoConfig {\n    id\n    url\n  }\n  indexPageConfig {\n    id\n    heroBackgroundImageUrl\n    heroBackgroundAlpha\n    heroPrimaryText\n    heroFeatures\n    heroFooterText\n    aboutTitle\n    aboutText\n    aboutImages {\n      id\n      imageUrl\n      title\n      text\n    }\n  }\n}\n    \n      \n    \n  `;\n     export class IndexManagerGetIndexPageConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<IndexManagerGetIndexPageConfigQuery, IndexManagerGetIndexPageConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<IndexManagerGetIndexPageConfigQuery, IndexManagerGetIndexPageConfigVariables>\n                query={ IndexManagerGetIndexPageConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type IndexManagerGetIndexPageConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        IndexManagerGetIndexPageConfigQuery, \n                                        IndexManagerGetIndexPageConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function IndexManagerGetIndexPageConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                IndexManagerGetIndexPageConfigQuery,\n                IndexManagerGetIndexPageConfigVariables,\n                IndexManagerGetIndexPageConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, IndexManagerGetIndexPageConfigQuery, IndexManagerGetIndexPageConfigVariables, IndexManagerGetIndexPageConfigProps<TChildProps>>(\n            IndexManagerGetIndexPageConfigDocument,\n            operationOptions\n        );\n    };\n    export const IndexManagerUpdateIndexPageDocument = gql`\n    mutation IndexManagerUpdateIndexPage($logoUrl: String!, $indexPageUpdate: UpdateIndexPageRequest!, $indexCardsUpdate: [UpdateIndexCardsRequest!]!) {\n  updateLogoUrl(logoUrl: $logoUrl) {\n    id\n    url\n  }\n  updateIndexPage(request: $indexPageUpdate) {\n    id\n    heroBackgroundImageUrl\n    heroBackgroundAlpha\n    heroPrimaryText\n    heroFeatures\n    aboutTitle\n    aboutText\n    aboutImages {\n      id\n      imageUrl\n      title\n      text\n    }\n  }\n  updateIndexCards(request: $indexCardsUpdate) {\n    id\n    categories {\n      id\n      visible\n      title\n    }\n    colorBlock\n    colorCategoryBackground\n    colorLogoBackground\n    colorTitle\n    entryLogoUrl\n  }\n}\n    \n      \n    \n  `;\n     export class IndexManagerUpdateIndexPageComponent extends React.Component<Partial<ReactApollo.MutationProps<IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables>\n                mutation={ IndexManagerUpdateIndexPageDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type IndexManagerUpdateIndexPageProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        IndexManagerUpdateIndexPageMutation, \n                                        IndexManagerUpdateIndexPageVariables\n                                        >\n                >\n         & TChildProps;\n    export type IndexManagerUpdateIndexPageMutationFn = ReactApollo.MutationFn<IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables>;\n    export function IndexManagerUpdateIndexPageHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                IndexManagerUpdateIndexPageMutation,\n                IndexManagerUpdateIndexPageVariables,\n                IndexManagerUpdateIndexPageProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, IndexManagerUpdateIndexPageMutation, IndexManagerUpdateIndexPageVariables, IndexManagerUpdateIndexPageProps<TChildProps>>(\n            IndexManagerUpdateIndexPageDocument,\n            operationOptions\n        );\n    };\n    export const LandingGetIndexPageConfigDocument = gql`\n    query LandingGetIndexPageConfig {\n  indexPageConfig {\n    id\n    heroBackgroundImageUrl\n    heroBackgroundAlpha\n    heroPrimaryText\n    heroFeatures\n    heroFooterText\n    aboutTitle\n    aboutText\n    aboutImages {\n      id\n      title\n      text\n      imageUrl\n    }\n  }\n  logoConfig {\n    id\n    url\n  }\n  indexCards {\n    id\n    title\n    entryLogoUrl\n    categories {\n      id\n      title\n    }\n    colorBlock\n    colorCategoryBackground\n    colorLogoBackground\n    colorTitle\n  }\n}\n    \n      \n    \n  `;\n     export class LandingGetIndexPageConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<LandingGetIndexPageConfigQuery, LandingGetIndexPageConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<LandingGetIndexPageConfigQuery, LandingGetIndexPageConfigVariables>\n                query={ LandingGetIndexPageConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type LandingGetIndexPageConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        LandingGetIndexPageConfigQuery, \n                                        LandingGetIndexPageConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function LandingGetIndexPageConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                LandingGetIndexPageConfigQuery,\n                LandingGetIndexPageConfigVariables,\n                LandingGetIndexPageConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, LandingGetIndexPageConfigQuery, LandingGetIndexPageConfigVariables, LandingGetIndexPageConfigProps<TChildProps>>(\n            LandingGetIndexPageConfigDocument,\n            operationOptions\n        );\n    };\n    export const WithHtmlSeoDocumentHtmlConfigDocument = gql`\n    query WithHtmlSeoDocumentHtmlConfig {\n  htmlConfig {\n    googleAnalyticsId\n    metaKeywords\n    metaDescription\n    metaAuthor\n    metaAbstract\n    metaCopyright\n  }\n}\n    \n      \n    \n  `;\n     export class WithHtmlSeoDocumentHtmlConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<WithHtmlSeoDocumentHtmlConfigQuery, WithHtmlSeoDocumentHtmlConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<WithHtmlSeoDocumentHtmlConfigQuery, WithHtmlSeoDocumentHtmlConfigVariables>\n                query={ WithHtmlSeoDocumentHtmlConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type WithHtmlSeoDocumentHtmlConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        WithHtmlSeoDocumentHtmlConfigQuery, \n                                        WithHtmlSeoDocumentHtmlConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function WithHtmlSeoDocumentHtmlConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                WithHtmlSeoDocumentHtmlConfigQuery,\n                WithHtmlSeoDocumentHtmlConfigVariables,\n                WithHtmlSeoDocumentHtmlConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, WithHtmlSeoDocumentHtmlConfigQuery, WithHtmlSeoDocumentHtmlConfigVariables, WithHtmlSeoDocumentHtmlConfigProps<TChildProps>>(\n            WithHtmlSeoDocumentHtmlConfigDocument,\n            operationOptions\n        );\n    };\n    export const WithLoadingSpinnerAppLogoConfigDocument = gql`\n    query WithLoadingSpinnerAppLogoConfig {\n  logoConfig {\n    url\n  }\n}\n    \n      \n    \n  `;\n     export class WithLoadingSpinnerAppLogoConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<WithLoadingSpinnerAppLogoConfigQuery, WithLoadingSpinnerAppLogoConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<WithLoadingSpinnerAppLogoConfigQuery, WithLoadingSpinnerAppLogoConfigVariables>\n                query={ WithLoadingSpinnerAppLogoConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type WithLoadingSpinnerAppLogoConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        WithLoadingSpinnerAppLogoConfigQuery, \n                                        WithLoadingSpinnerAppLogoConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function WithLoadingSpinnerAppLogoConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                WithLoadingSpinnerAppLogoConfigQuery,\n                WithLoadingSpinnerAppLogoConfigVariables,\n                WithLoadingSpinnerAppLogoConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, WithLoadingSpinnerAppLogoConfigQuery, WithLoadingSpinnerAppLogoConfigVariables, WithLoadingSpinnerAppLogoConfigProps<TChildProps>>(\n            WithLoadingSpinnerAppLogoConfigDocument,\n            operationOptions\n        );\n    };\n    export const CloudinaryConfigDocument = gql`\n    query CloudinaryConfig {\n  cloudinaryCloudName\n  cloudinaryApiKey\n}\n    \n      \n    \n  `;\n     export class CloudinaryConfigComponent extends React.Component<Partial<ReactApollo.QueryProps<CloudinaryConfigQuery, CloudinaryConfigVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Query<CloudinaryConfigQuery, CloudinaryConfigVariables>\n                query={ CloudinaryConfigDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type CloudinaryConfigProps<TChildProps = any> = \n            Partial<\n                ReactApollo.DataProps<\n                                        CloudinaryConfigQuery, \n                                        CloudinaryConfigVariables\n                                    >\n                    >\n         & TChildProps;\n    export function CloudinaryConfigHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                CloudinaryConfigQuery,\n                CloudinaryConfigVariables,\n                CloudinaryConfigProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, CloudinaryConfigQuery, CloudinaryConfigVariables, CloudinaryConfigProps<TChildProps>>(\n            CloudinaryConfigDocument,\n            operationOptions\n        );\n    };\n    export const CloudinaryGenerateMediaLibraryAuthenticationTokenDocument = gql`\n    mutation CloudinaryGenerateMediaLibraryAuthenticationToken {\n  generateCloudinaryMediaLibraryAuthenticationToken {\n    api_key\n    cloud_name\n    signature\n    timestamp\n    username\n  }\n}\n    \n      \n    \n  `;\n     export class CloudinaryGenerateMediaLibraryAuthenticationTokenComponent extends React.Component<Partial<ReactApollo.MutationProps<CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables>\n                mutation={ CloudinaryGenerateMediaLibraryAuthenticationTokenDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type CloudinaryGenerateMediaLibraryAuthenticationTokenProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, \n                                        CloudinaryGenerateMediaLibraryAuthenticationTokenVariables\n                                        >\n                >\n         & TChildProps;\n    export type CloudinaryGenerateMediaLibraryAuthenticationTokenMutationFn = ReactApollo.MutationFn<CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables>;\n    export function CloudinaryGenerateMediaLibraryAuthenticationTokenHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                CloudinaryGenerateMediaLibraryAuthenticationTokenMutation,\n                CloudinaryGenerateMediaLibraryAuthenticationTokenVariables,\n                CloudinaryGenerateMediaLibraryAuthenticationTokenProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, CloudinaryGenerateMediaLibraryAuthenticationTokenMutation, CloudinaryGenerateMediaLibraryAuthenticationTokenVariables, CloudinaryGenerateMediaLibraryAuthenticationTokenProps<TChildProps>>(\n            CloudinaryGenerateMediaLibraryAuthenticationTokenDocument,\n            operationOptions\n        );\n    };\n    export const CloudinaryGenerateSignatureDocument = gql`\n    mutation CloudinaryGenerateSignature($paramsToSign: Json!) {\n  generateCloudinarySignature(paramsToSign: $paramsToSign)\n}\n    \n      \n    \n  `;\n     export class CloudinaryGenerateSignatureComponent extends React.Component<Partial<ReactApollo.MutationProps<CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables>>> {\n        render(){\n            return (\n                <ReactApollo.Mutation<CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables>\n                mutation={ CloudinaryGenerateSignatureDocument }\n                {...(this as any)['props'] as any}\n                />\n            );\n        }\n    }\n    export type CloudinaryGenerateSignatureProps<TChildProps = any> = \n            Partial<\n                ReactApollo.MutateProps<\n                                        CloudinaryGenerateSignatureMutation, \n                                        CloudinaryGenerateSignatureVariables\n                                        >\n                >\n         & TChildProps;\n    export type CloudinaryGenerateSignatureMutationFn = ReactApollo.MutationFn<CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables>;\n    export function CloudinaryGenerateSignatureHOC<TProps, TChildProps = any>(operationOptions: \n            ReactApollo.OperationOption<\n                TProps, \n                CloudinaryGenerateSignatureMutation,\n                CloudinaryGenerateSignatureVariables,\n                CloudinaryGenerateSignatureProps<TChildProps>\n            > | undefined){\n        return ReactApollo.graphql<TProps, CloudinaryGenerateSignatureMutation, CloudinaryGenerateSignatureVariables, CloudinaryGenerateSignatureProps<TChildProps>>(\n            CloudinaryGenerateSignatureDocument,\n            operationOptions\n        );\n    };\n","export * from \"./generated\";\n","import { SubmissionProgressDialog as BaseSubmissionProgressDialog } from \"@join-uniform/components\";\nimport React, { ReactNode, useEffect, useReducer } from \"react\";\n\n/**\n * Current count of inflight Apollo mutation operations.\n */\nlet mutationsInProgressCounter = 0;\n\n/**\n * Memoized status value to prevent unnecessary re-renders.\n */\nlet lastMutationsInFlight = false;\n\n/**\n * Observers of the mutations operation counter.\n */\nlet subscribers: ((mutationsInFlight: boolean) => void)[] = [];\n\n/**\n * Increments the count of current inflight Apollo mutation operations. This is\n * used by the SubmissionProgressDialog component to display a submission dialog\n * while mutations are in progress.\n */\nexport function mutationCounterIncrement() {\n  mutationsInProgressCounter += 1;\n  if (mutationsInProgressCounter > 0 === lastMutationsInFlight) return;\n  lastMutationsInFlight = mutationsInProgressCounter > 0;\n  subscribers.forEach(s => s(true));\n}\n\n/**\n * Decrements the count of current inflight Apollo mutation operations. This is\n * used by the SubmissionProgressDialog component to display a submission dialog\n * while mutations are in progress.\n */\nexport function mutationCounterDecrement() {\n  mutationsInProgressCounter -= 1;\n  if (mutationsInProgressCounter > 0 === lastMutationsInFlight) return;\n  lastMutationsInFlight = mutationsInProgressCounter > 0;\n  subscribers.forEach(s => s(mutationsInProgressCounter > 0));\n}\n\n/**\n * Subscribes to the status of current Apollo mutations currently inflight.\n *\n * @param cb\n * Callback called when inflight Apollo mutations are in progress or when they\n * have all completed.\n */\nfunction mutationCounterSubscribe(cb: (mutationsInFlight: boolean) => void) {\n  subscribers.push(cb);\n  return unsubscribe;\n\n  function unsubscribe() {\n    subscribers = subscribers.filter(s => s !== cb);\n  }\n}\n\nif (process.env.NODE_ENV === \"development\") {\n  mutationCounterSubscribe(mutationsInFlight => {\n    /* tslint:disable-next-line:no-console */\n    console.log(\"Mutations inflight:\", mutationsInFlight);\n    /* tslint:disable-next-line:no-console */\n    console.log(\"Subscriber count:\", subscribers.length);\n  });\n}\n\n/**\n * Displays the LoadingSpinner component in a non-dismissible dialog while\n * Apollo mutation operations are currently in progress.\n */\nexport function SubmissionProgressDialog(props: { children?: ReactNode }) {\n  const { children } = props;\n\n  const [open, setOpen] = useReducer<boolean, boolean>((_state, action) => {\n    return action;\n  }, false);\n\n  useEffect(() => {\n    const dispose = mutationCounterSubscribe(handleMutationCounterChange);\n\n    return () => {\n      dispose();\n    };\n\n    function handleMutationCounterChange(mutationsInFlight: boolean) {\n      setOpen(mutationsInFlight);\n    }\n  }, []);\n\n  return (\n    <>\n      {children}\n\n      {/* Disable hydration warnings here to prevent errors from differences\n          between the server side rendered React tree and the client version.\n\n          On the server we avoid rendering the dialog.\n      */}\n      <div style={{ display: \"none\" }} suppressHydrationWarning>\n        {process.browser ? <BaseSubmissionProgressDialog open={open} /> : null}\n      </div>\n    </>\n  );\n}\n","export * from \"./initializeApollo\";\nexport * from \"./withApolloApp\";\n","import { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ApolloClient from \"apollo-client\";\nimport { link } from \"./link\";\n\nlet apolloClient: ApolloClient<any> | null = null;\n\nexport function initializeApollo(initialState?: any) {\n  // Reuse Apollo client on browser. Don't reuse on server because data should\n  // be unique between web requests.\n  if (apolloClient && process.browser) {\n    return apolloClient;\n  }\n\n  apolloClient = new ApolloClient({\n    connectToDevTools:\n      process.browser && process.env.NODE_ENV === \"development\",\n    ssrMode: !process.browser,\n    link,\n    cache: new InMemoryCache().restore(initialState || {}),\n  });\n\n  return apolloClient;\n}\n","import { ApolloLink } from \"apollo-link\";\nimport { onError } from \"apollo-link-error\";\nimport { HttpLink } from \"apollo-link-http\";\nimport fetch from \"isomorphic-unfetch\";\nimport getConfig from \"next/config\";\nimport { mutationCounterLink } from \"./mutationCounterLink\";\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.map(({ message, locations, path }) =>\n      // tslint:disable-next-line:no-console\n      console.error(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      ),\n    );\n  }\n  // tslint:disable-next-line:no-console\n  if (networkError) console.error(`[Network error]: ${networkError}`);\n});\n\nconst httpLink = new HttpLink({\n  uri: getConfig().publicRuntimeConfig!.graphQLUri,\n  credentials: \"same-origin\",\n  fetch,\n});\n\n// TODO: Add CSRF Link\nexport const link = ApolloLink.from([\n  errorLink,\n  mutationCounterLink,\n  /* csrfLink */ httpLink,\n]);\n","import { ApolloLink, Operation } from \"apollo-link\";\nimport {\n  mutationCounterDecrement,\n  mutationCounterIncrement,\n} from \"../SubmissionProgressDialog\";\n\n/**\n * Updates the count of currently inflight Apollo mutation operations. This is\n * used by the SubmissionProgressDialog component to display a dialog while\n * operations are in progress.\n */\nexport const mutationCounterLink = new ApolloLink((operation, forward) => {\n  const isMutation = isMutationOperation(operation);\n\n  if (isMutation) mutationCounterIncrement();\n\n  return forward\n    ? forward(operation).map(fetchResult => {\n        mutationCounterDecrement();\n        return fetchResult;\n      })\n    : null;\n});\n\n/**\n * Returns whether or not the current operation is performing a mutation.\n *\n * @param operation Apollo operation.\n */\nfunction isMutationOperation(operation: Operation) {\n  if (\n    operation.query.kind === \"Document\" &&\n    operation.query.definitions.find(\n      d => d.kind === \"OperationDefinition\" && d.operation === \"mutation\",\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n","import ApolloClient from \"apollo-client\";\nimport { AppComponentType, DefaultAppIProps, NextAppContext } from \"next/app\";\nimport Head from \"next/head\";\nimport React, { Component as ReactComponent } from \"react\";\nimport { getDataFromTree } from \"react-apollo\";\nimport { RenderingAppProps } from \"../RenderingAppProps\";\nimport { initializeApollo } from \"./initializeApollo\";\n\nexport function withApolloApp(\n  App: AppComponentType<RenderingAppProps, DefaultAppIProps>,\n) {\n  const WithApolloApp: AppComponentType<\n    RenderingAppProps,\n    DefaultAppIProps\n  > = class extends ReactComponent<RenderingAppProps> {\n    static readonly displayName = \"WithApolloApp(App)\";\n    private readonly client: ApolloClient<any>;\n\n    static async getInitialProps(context: NextAppContext) {\n      const { Component, router } = context;\n\n      // tslint:disable-next-line:no-object-literal-type-assertion\n      let initialProps = {} as RenderingAppProps;\n      if (App.getInitialProps) {\n        initialProps = (await App.getInitialProps(\n          context,\n        )) as RenderingAppProps;\n      }\n\n      const client = initializeApollo();\n\n      // Run all GraphQL queries in the component tree and extract the resulting\n      // data.\n      if (!process.browser) {\n        try {\n          await getDataFromTree(\n            <WithApolloApp\n              {...initialProps}\n              Component={Component}\n              router={router}\n              serverSideApolloClient={client}\n            />,\n          );\n        } catch (e) {\n          // Prevent Apollo Client GraphQL errors from crashing SSR. Handle them\n          // in components via the data.error prop:\n          // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n          // tslint:disable-next-line:no-console\n          console.error('Error while running \"getDataFromTree\"', e);\n        }\n\n        // getDataFromTree does not call componentWillUnmount.\n        // Head side effect therefore need to be cleared manually.\n        Head.rewind();\n      }\n\n      // Extract query data from Apollo store.\n      initialProps.apolloState = client.cache.extract();\n\n      return initialProps;\n    }\n\n    constructor(props: RenderingAppProps) {\n      super(props);\n\n      this.client =\n        props.serverSideApolloClient || initializeApollo(props.apolloState);\n    }\n\n    render() {\n      return <App {...this.props} apolloClient={this.client} />;\n    }\n  };\n\n  return WithApolloApp;\n}\n","export { withApolloApp } from \"./apollo\";\nexport {\n  withMaterialUIDocument,\n  MaterialUIThemeProvider,\n  withMaterialUIApp,\n} from \"./material-ui\";\nexport { withHtmlSeoDocument } from \"./seo\";\nexport { withStyledComponentsDocument } from \"./styled-components\";\nexport * from \"./RenderingAppProps\";\nexport { SubmissionProgressDialog } from \"./SubmissionProgressDialog\";\nexport { withLoadingSpinnerApp } from \"./withLoadingSpinnerApp\";\n","import { lightTheme } from \"@join-uniform/theme\";\nimport { jssPreset, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { create } from \"jss\";\nimport React, { ReactNode, useEffect, useMemo } from \"react\";\nimport JssProvider from \"react-jss/lib/JssProvider\";\nimport { MUICssContext } from \"./createMUICssContext\";\n\nexport function MaterialUIThemeProvider(props: {\n  children?: ReactNode;\n  muiCssContext: MUICssContext;\n}) {\n  const {\n    children,\n    muiCssContext: { sheetsRegistry, sheetsManager, generateClassName },\n  } = props;\n\n  useEffect(() => {\n    if (process.browser) {\n      // Remove the server-side injected CSS.\n      const jssStyles = document.querySelector(\"#jss-server-side\");\n      if (jssStyles && jssStyles.parentNode) {\n        jssStyles.parentNode.removeChild(jssStyles);\n      }\n    }\n  }, []);\n\n  const jss = useMemo(() => {\n    // Ensure Material Design styles are added before those from Styled\n    // Components so that Styled Components can override default styles.\n    if (process.browser) {\n      return create({\n        ...jssPreset(),\n        insertionPoint: document.getElementById(\"jss-insertion-point\")!,\n      });\n    }\n    return undefined;\n  }, []);\n\n  return (\n    <JssProvider\n      jss={jss}\n      registry={sheetsRegistry}\n      generateClassName={generateClassName}\n    >\n      <MuiThemeProvider theme={lightTheme} sheetsManager={sheetsManager}>\n        {children}\n      </MuiThemeProvider>\n    </JssProvider>\n  );\n}\n","import createGenerateClassName from \"@material-ui/core/styles/createGenerateClassName\";\nimport { SheetsRegistry } from \"jss\";\n\nexport type MUICssContext = {\n  sheetsManager: Map<any, any>;\n  sheetsRegistry: SheetsRegistry;\n  generateClassName: ReturnType<typeof createGenerateClassName>;\n};\n\nlet cachedCssContext: MUICssContext | null = null;\n\nexport function createMuiCssContext() {\n  // Make sure to create a new context for every server-side request so that\n  // data isn't shared between connections (which would be bad).\n  if (!process.browser) return createContext();\n\n  // Reuse context on the client-side.\n  if (!cachedCssContext) {\n    cachedCssContext = createContext();\n  }\n\n  return cachedCssContext;\n\n  function createContext() {\n    return {\n      sheetsManager: new Map(),\n      sheetsRegistry: new SheetsRegistry(),\n      generateClassName: createGenerateClassName(),\n    };\n  }\n}\n","export * from \"./createMUICssContext\";\nexport * from \"./MaterialUIThemeProvider\";\nexport * from \"./withMaterialUIApp\";\nexport * from \"./withMaterialUIDocument\";\n","import { AppComponentType, DefaultAppIProps, NextAppContext } from \"next/app\";\nimport React, { Component as ReactComponent } from \"react\";\nimport { RenderingAppProps } from \"../RenderingAppProps\";\nimport { createMuiCssContext } from \"./createMUICssContext\";\n\nexport function withMaterialUIApp(\n  App: AppComponentType<RenderingAppProps, DefaultAppIProps>,\n) {\n  const WithMaterialUIApp: AppComponentType<\n    RenderingAppProps,\n    DefaultAppIProps\n  > = class extends ReactComponent<RenderingAppProps> {\n    static readonly displayName = \"WithMaterialUIApp(App)\";\n    private readonly muiCssContext = createMuiCssContext();\n\n    static async getInitialProps(context: NextAppContext) {\n      // tslint:disable-next-line:no-object-literal-type-assertion\n      let initialProps = {} as DefaultAppIProps;\n      if (App.getInitialProps) {\n        initialProps = await App.getInitialProps(context);\n      }\n      return initialProps;\n    }\n\n    render() {\n      return <App {...this.props} muiCssContext={this.muiCssContext} />;\n    }\n  };\n\n  return WithMaterialUIApp;\n}\n","import {\n  DefaultDocumentIProps,\n  DocumentComponentType,\n  DocumentProps,\n  Enhancer,\n  NextDocumentContext,\n} from \"next/document\";\nimport React, { Component } from \"react\";\nimport { RenderingPageProps } from \"../RenderingPageProps\";\nimport { MUICssContext } from \"./createMUICssContext\";\n\nexport function withMaterialUIDocument<\n  P extends DocumentProps,\n  IP extends DefaultDocumentIProps,\n  C extends NextDocumentContext\n>(Document: DocumentComponentType<P, IP, C>) {\n  const WithMaterialUIDocument: DocumentComponentType<\n    P,\n    IP,\n    C\n  > = class extends Component<P> {\n    static displayName = \"WithMaterialUIDocumentDocument(Document)\";\n\n    static async getInitialProps(context: C) {\n      const originalRenderPage = context.renderPage;\n\n      let muiCssContext: MUICssContext | undefined;\n\n      context.renderPage = enhancer => {\n        const typedEnhancer:\n          | Enhancer<RenderingPageProps>\n          | undefined = enhancer as any;\n\n        const renderPageResponse = originalRenderPage<RenderingPageProps>(\n          App => props => {\n            const EnhancedApp = typedEnhancer ? typedEnhancer(App) : App;\n            muiCssContext = props.muiCssContext;\n\n            return <EnhancedApp {...props} />;\n          },\n        );\n\n        return renderPageResponse;\n      };\n\n      // tslint:disable-next-line:no-object-literal-type-assertion\n      let initialProps = {} as IP;\n      if (Document.getInitialProps) {\n        initialProps = await Document.getInitialProps(context);\n      }\n\n      if (!muiCssContext) {\n        throw new Error(\n          \"_app must be decorated with withMaterialUIApp and use MaterialUIThemeProvider.\",\n        );\n      }\n\n      initialProps.styles = (\n        <>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,500,700\"\n          />\n          <style\n            id=\"jss-server-side\"\n            dangerouslySetInnerHTML={{\n              __html: muiCssContext.sheetsRegistry.toString(),\n            }}\n          />\n          <noscript id=\"jss-insertion-point\" />\n          {initialProps.styles}\n        </>\n      );\n\n      return initialProps;\n    }\n\n    render() {\n      return <Document {...this.props} />;\n    }\n  };\n\n  return WithMaterialUIDocument;\n}\n","import React from \"react\";\n\nexport function GoogleAnalyticsTags(props: {\n  googleAnalyticsId: string | null;\n}) {\n  const { googleAnalyticsId } = props;\n\n  return (\n    <>\n      {/* Google Analytics */}\n      {process.env.NODE_ENV === \"production\" && googleAnalyticsId && (\n        <>\n          <script\n            key=\"googleTagManager\"\n            async\n            src={`https://www.googletagmanager.com/gtag/js?id=${googleAnalyticsId}`}\n          />\n          <script\n            key=\"googleAnalytics\"\n            dangerouslySetInnerHTML={{\n              __html: generateGoogleAnalyticsScriptContents(googleAnalyticsId),\n            }}\n          />\n        </>\n      )}\n    </>\n  );\n}\n\nfunction generateGoogleAnalyticsScriptContents(googleAnalyticsId: string) {\n  return `window.dataLayer = window.dataLayer || [];\nfunction gtag() { dataLayer.push(arguments); }\ngtag('js', new Date());\ngtag('config', '${googleAnalyticsId}');`\n    .split(\"\\n\")\n    .join(\"\");\n}\n","import React from \"react\";\nimport { WithHtmlSeoDocumentHtmlConfigHtmlConfig } from \"~/lib/client\";\n\nconst publicPath = \"/static\";\n\nexport function SeoTags(props: {\n  htmlConfig: WithHtmlSeoDocumentHtmlConfigHtmlConfig;\n}) {\n  const {\n    htmlConfig: {\n      metaKeywords,\n      metaDescription,\n      metaAuthor,\n      metaAbstract,\n      metaCopyright,\n    },\n  } = props;\n\n  return (\n    <>\n      {/* Manifest and Favicon */}\n      {/* prettier-ignore */}\n      <>\n        <link rel=\"apple-touch-icon\" sizes=\"57x57\" href={`${publicPath}/favicons/apple-icon-57x57.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"60x60\" href={`${publicPath}/favicons/apple-icon-60x60.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"72x72\" href={`${publicPath}/favicons/apple-icon-72x72.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"76x76\" href={`${publicPath}/favicons/apple-icon-76x76.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"114x114\" href={`${publicPath}/favicons/apple-icon-114x114.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"120x120\" href={`${publicPath}/favicons/apple-icon-120x120.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"144x144\" href={`${publicPath}/favicons/apple-icon-144x144.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"152x152\" href={`${publicPath}/favicons/apple-icon-152x152.png`} />\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={`${publicPath}/favicons/apple-icon-180x180.png`} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href={`${publicPath}/favicons/android-icon-192x192.png`} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={`${publicPath}/favicons/favicon-32x32.png`} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href={`${publicPath}/favicons/favicon-96x96.png`} />\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={`${publicPath}/favicons/favicon-16x16.png`} />\n        <link rel=\"shortcut icon\" href={`${publicPath}/favicon.ico`} />\n        <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n        <meta name=\"msapplication-TileImage\" content={`${publicPath}/favicons/ms-icon-144x144.png`} />\n        <meta name=\"theme-color\" content=\"#ffffff\" />\n        <link rel=\"manifest\" href={`${publicPath}/manifest.json`} />\n      </>\n\n      {/* Keywords and Meta Tags */}\n      {metaKeywords && <meta name=\"keywords\" content={metaKeywords} />}\n      {metaDescription && <meta name=\"description\" content={metaDescription} />}\n      {metaAuthor && <meta name=\"author\" content={metaAuthor} />}\n      {metaAbstract && <meta name=\"abstract\" content={metaAbstract} />}\n      {metaCopyright && <meta name=\"copyright\" content={metaCopyright} />}\n    </>\n  );\n}\n","export * from \"./withHtmlSeoDocument\";\n","import {\n  DefaultDocumentIProps,\n  DocumentComponentType,\n  DocumentProps,\n  NextDocumentContext,\n} from \"next/document\";\nimport React, { Component } from \"react\";\nimport {\n  WithHtmlSeoDocumentHtmlConfigDocument,\n  WithHtmlSeoDocumentHtmlConfigQuery,\n} from \"~/lib/client\";\nimport { initializeApollo } from \"../apollo\";\nimport { GoogleAnalyticsTags } from \"./GoogleAnalyticsTag\";\nimport { SeoTags } from \"./SeoTags\";\n\nexport function withHtmlSeoDocument<\n  P extends DocumentProps,\n  IP extends DefaultDocumentIProps,\n  C extends NextDocumentContext\n>(Document: DocumentComponentType<P, IP, C>) {\n  const WithHtmlSeoDocument: DocumentComponentType<\n    P,\n    IP,\n    C\n  > = class extends Component<P> {\n    static displayName = \"WithHtmlSeoDocument(Document)\";\n\n    static async getInitialProps(context: C) {\n      const apolloClient = initializeApollo();\n      const htmlConfigQueryResult = await apolloClient.query<\n        WithHtmlSeoDocumentHtmlConfigQuery\n      >({\n        query: WithHtmlSeoDocumentHtmlConfigDocument,\n      });\n      const htmlConfig = htmlConfigQueryResult.data.htmlConfig;\n\n      // tslint:disable-next-line:no-object-literal-type-assertion\n      let initialProps = {} as IP;\n      if (Document.getInitialProps) {\n        initialProps = await Document.getInitialProps(context);\n      }\n\n      initialProps.styles = (\n        <>\n          <GoogleAnalyticsTags\n            googleAnalyticsId={htmlConfig.googleAnalyticsId}\n          />\n          {/* Only render SEO elements on landing pages. */}\n          {!/^\\/a(dmin)?/.test(context.pathname) && (\n            <SeoTags htmlConfig={htmlConfig} />\n          )}\n          {initialProps.styles}\n        </>\n      );\n\n      return initialProps;\n    }\n\n    render() {\n      return <Document {...this.props} />;\n    }\n  };\n\n  return WithHtmlSeoDocument;\n}\n","export * from \"./withStyledComponentsDocument\";\n","import { ServerStyleSheet as StyledComponentsServerStyleSheet } from \"@join-uniform/theme\";\nimport {\n  DefaultDocumentIProps,\n  DocumentComponentType,\n  DocumentProps,\n  Enhancer,\n  NextDocumentContext,\n} from \"next/document\";\nimport React, { Component } from \"react\";\nimport { RenderingPageProps } from \"../RenderingPageProps\";\n\nexport function withStyledComponentsDocument<\n  P extends DocumentProps,\n  IP extends DefaultDocumentIProps,\n  C extends NextDocumentContext\n>(Document: DocumentComponentType<P, IP, C>) {\n  const WithStyledComponentsDocument: DocumentComponentType<\n    P,\n    IP,\n    C\n  > = class extends Component<P> {\n    static displayName = \"WithStyledComponentsDocument(Document)\";\n\n    static async getInitialProps(context: C) {\n      const sheet = new StyledComponentsServerStyleSheet();\n\n      const originalRenderPage = context.renderPage;\n\n      context.renderPage = enhancer => {\n        const typedEnhancer:\n          | Enhancer<RenderingPageProps>\n          | undefined = enhancer as any;\n\n        const renderPageResponse = originalRenderPage<RenderingPageProps>(\n          App => props => {\n            const EnhancedApp = typedEnhancer ? typedEnhancer(App) : App;\n\n            return sheet.collectStyles(<EnhancedApp {...props} />);\n          },\n        );\n\n        return renderPageResponse;\n      };\n\n      // tslint:disable-next-line:no-object-literal-type-assertion\n      let initialProps = {} as IP;\n      if (Document.getInitialProps) {\n        initialProps = await Document.getInitialProps(context);\n      }\n\n      initialProps.styles = (\n        <>\n          {initialProps.styles}\n          {sheet.getStyleElement()}\n        </>\n      );\n\n      return initialProps;\n    }\n\n    render() {\n      return <Document {...this.props} />;\n    }\n  };\n\n  return WithStyledComponentsDocument;\n}\n","import { LoadingSpinnerContextValue } from \"@join-uniform/components\";\nimport { AppComponentType, DefaultAppIProps, NextAppContext } from \"next/app\";\nimport React, { Component } from \"react\";\nimport { WithLoadingSpinnerAppLogoConfigComponent } from \"~/lib/client\";\nimport { createResponsiveImageUrl } from \"../utils\";\nimport { RenderingAppProps } from \"./RenderingAppProps\";\n\nexport function withLoadingSpinnerApp(\n  App: AppComponentType<RenderingAppProps, DefaultAppIProps>,\n) {\n  const WithLoadingSpinnerApp: AppComponentType<\n    RenderingAppProps,\n    DefaultAppIProps\n  > = class extends Component<RenderingAppProps> {\n    static readonly displayName = \"WithLoadingSpinnerApp(App)\";\n\n    static async getInitialProps(context: NextAppContext) {\n      return App.getInitialProps\n        ? App.getInitialProps(context)\n        : // tslint:disable-next-line:no-object-literal-type-assertion\n          ({} as DefaultAppIProps);\n    }\n\n    render() {\n      const client =\n        this.props.apolloClient || this.props.serverSideApolloClient;\n\n      return (\n        <WithLoadingSpinnerAppLogoConfigComponent client={client}>\n          {result => {\n            const logoUrl =\n              !result.loading && !result.error\n                ? result.data!.logoConfig.url\n                : \"\";\n\n            return (\n              <App\n                {...this.props}\n                loadingSpinnerConfig={createLoadingSpinnerConfig(logoUrl)}\n              />\n            );\n          }}\n        </WithLoadingSpinnerAppLogoConfigComponent>\n      );\n    }\n  };\n\n  return WithLoadingSpinnerApp;\n}\n\nfunction createLoadingSpinnerConfig(\n  logoUrl: string,\n): LoadingSpinnerContextValue {\n  return {\n    src1_0x: createResponsiveImageUrl(logoUrl, {\n      w: \"72\",\n      h: \"72\",\n      format: \"png\",\n    }),\n    src1_5x: createResponsiveImageUrl(logoUrl, {\n      w: \"105\",\n      h: \"105\",\n      format: \"png\",\n    }),\n    src2_0x: createResponsiveImageUrl(logoUrl, {\n      w: \"144\",\n      h: \"144\",\n      format: \"png\",\n    }),\n    transitionDelay: 2000,\n  };\n}\n","import { LoadingSpinner } from \"@join-uniform/components\";\nimport React, {\n  createContext,\n  ReactNode,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { MutationFn } from \"react-apollo\";\nimport {\n  CloudinaryConfigHOC,\n  CloudinaryConfigProps,\n  CloudinaryGenerateMediaLibraryAuthenticationTokenHOC,\n  CloudinaryGenerateMediaLibraryAuthenticationTokenMutation,\n  CloudinaryGenerateMediaLibraryAuthenticationTokenVariables,\n  CloudinaryGenerateSignatureHOC,\n  CloudinaryGenerateSignatureMutation,\n  CloudinaryGenerateSignatureVariables,\n} from \"~/lib/client\";\n\nlet initializationStatus: Promise<{ success: boolean }>;\n\ntype CloudinaryContextValue = {\n  client: Cloudinary;\n  cloudName: string;\n  apiKey: string;\n  generateSignature: (\n    cb: (signature: string) => void,\n    paramsToSign: any,\n  ) => void;\n  getDefaultUploadWidgetOptions: () => CloudinaryOpenUploadWidgetOptions;\n  getDefaultMediaLibraryWidgetOptions: () => Promise<\n    CloudinaryOpenMediaLibraryOptions\n  >;\n} | null;\nconst CloudinaryContext = createContext<CloudinaryContextValue>(null);\n\nexport function useCloudinary() {\n  return useContext(CloudinaryContext);\n}\n\ntype CloudinaryProviderProps = CloudinaryConfigProps<{}> & {\n  generateCloudinaryMediaLibraryAuthenticationToken: MutationFn<\n    CloudinaryGenerateMediaLibraryAuthenticationTokenMutation,\n    CloudinaryGenerateMediaLibraryAuthenticationTokenVariables\n  >;\n  generateCloudinarySignature: MutationFn<\n    CloudinaryGenerateSignatureMutation,\n    CloudinaryGenerateSignatureVariables\n  >;\n  children?: ReactNode;\n};\n\n/**\n * Initializes the Cloudinary client library if it has not already been\n * initialized. If rendered on the server, the client library is not\n * initialized.\n */\nexport const CloudinaryProvider = CloudinaryGenerateMediaLibraryAuthenticationTokenHOC(\n  { name: \"generateCloudinaryMediaLibraryAuthenticationToken\" },\n)(\n  CloudinaryGenerateSignatureHOC({\n    name: \"generateCloudinarySignature\",\n  })(CloudinaryConfigHOC(undefined)(CloudinaryProviderBase)),\n);\n\nfunction CloudinaryProviderBase(\n  props: CloudinaryProviderProps,\n): React.ReactElement<any> {\n  const [cloudinary, setCloudinary] = useState<CloudinaryContextValue>(null);\n\n  // Load the Cloudinary client libraries if it hasn't already been loaded.\n  if (process.browser && !initializationStatus) {\n    const uploadWidgetScript = document.createElement(\"script\");\n    const mediaLibraryWidgetScript = document.createElement(\"script\");\n\n    initializationStatus = Promise.all<{ success: boolean }>([\n      new Promise(resolve => {\n        uploadWidgetScript.onload = () => resolve({ success: true });\n        uploadWidgetScript.onerror = () => resolve({ success: false });\n      }),\n      new Promise(resolve => {\n        mediaLibraryWidgetScript.onload = () => resolve({ success: true });\n        mediaLibraryWidgetScript.onerror = () => resolve({ success: false });\n      }),\n    ]).then(results =>\n      results.reduce(\n        (accumulator, r) => {\n          if (!r.success) accumulator.success = false;\n          return accumulator;\n        },\n        { success: true },\n      ),\n    );\n\n    uploadWidgetScript.src = \"https://widget.cloudinary.com/v2.0/global/all.js\";\n    mediaLibraryWidgetScript.src =\n      \"https://media-library.cloudinary.com/global/all.js\";\n\n    if (!document.head) throw new Error('Could not retrieve \"head\" element.');\n    document.head.insertBefore(uploadWidgetScript, null);\n    document.head.insertBefore(mediaLibraryWidgetScript, null);\n  }\n\n  // Initialize state to the currently loaded Cloudinary client instance if it\n  // exists or undefined otherwise. The state will be updated by the effect\n  // below to indicate that the client has been loaded.\n  const [cloudinaryClient, setCloudinaryClient] = useState(\n    process.browser ? window.cloudinary : undefined,\n  );\n\n  // Wait for the Cloudinary client script to load and then issue a state\n  // update.\n  useEffect(() => {\n    if (!process.browser) return;\n\n    // tslint:disable-next-line:no-floating-promises\n    initializationStatus.then(({ success }) => {\n      if (!success) throw new Error(\"Failed to load Cloudinary client.\");\n      if (!cloudinaryClient) setCloudinaryClient(window.cloudinary);\n    });\n  }, []);\n\n  const {\n    data,\n    generateCloudinarySignature,\n    generateCloudinaryMediaLibraryAuthenticationToken,\n  } = props;\n\n  if (\n    !data ||\n    data.loading ||\n    data.error ||\n    !data.cloudinaryCloudName ||\n    !data.cloudinaryApiKey\n  ) {\n    return <LoadingSpinner />;\n  }\n  const { cloudinaryCloudName, cloudinaryApiKey } = data;\n\n  // Get the Cloudinary \"cloudName\" and render the provider.\n  if (cloudinaryClient) {\n    cloudinaryClient.setCloudName(cloudinaryCloudName);\n\n    if (!cloudinary) {\n      const generateSignature: NonNullable<\n        CloudinaryContextValue\n      >[\"generateSignature\"] = async (cb, paramsToSign) => {\n        const fetchResult = await generateCloudinarySignature({\n          variables: { paramsToSign },\n        });\n        if (!fetchResult || fetchResult.errors) return;\n        cb(fetchResult.data!.generateCloudinarySignature);\n      };\n\n      setCloudinary({\n        client: cloudinaryClient,\n        apiKey: cloudinaryApiKey,\n        cloudName: cloudinaryCloudName,\n        generateSignature,\n        getDefaultUploadWidgetOptions: () => ({\n          // Required:\n          cloudName: cloudinaryCloudName,\n\n          // Widget behavior:\n          sources: [\"local\", \"url\", \"camera\"],\n          multiple: false,\n          cropping: true,\n          croppingAspectRatio: 1, // square\n\n          // Upload parameters:\n          folder: \"Assets\",\n          resourceType: \"image\",\n          uploadSignature: generateSignature,\n          apiKey: cloudinaryApiKey,\n        }),\n\n        getDefaultMediaLibraryWidgetOptions: async () => {\n          const fetchResult = await generateCloudinaryMediaLibraryAuthenticationToken();\n\n          if (!fetchResult || fetchResult.errors || !fetchResult.data) {\n            throw new Error(\n              \"Failed to retrieve Cloudinary Media Widget authentication token.\",\n            );\n          }\n\n          const credentials = {\n            ...fetchResult.data\n              .generateCloudinaryMediaLibraryAuthenticationToken,\n          };\n\n          // Remove Apollo specific fields.\n          delete credentials.__typename;\n\n          return {\n            // Authentication:\n            ...credentials,\n\n            // Media library behavior:\n            max_files: 1,\n            multiple: false,\n          };\n        },\n      });\n    }\n  }\n\n  return (\n    <CloudinaryContext.Provider value={cloudinary}>\n      {props.children}\n    </CloudinaryContext.Provider>\n  );\n}\n\nexport type CloudinaryOpenUploadWidgetOptions = {\n  /**\n   * Your Cloudinary account cloud name. Can be set either globally using\n   * `setCloudName` or explicitly for each widget creation call.\n   *\n   * Example: `demo`\n   */\n  cloudName?: string;\n\n  apiKey: string;\n\n  // Widget behavior:\n\n  /**\n   * List of sources that should be added as tabs (web) or source options\n   * (mobile/responsive) in the widget. Possible values: `local`, `url`,\n   * `camera`, `dropbox`, `imageSearch`, `facebook`, `instagram`\n   *\n   * Notes:\n   * - `camera` is not relevant for mobile devices (the `local` option also\n   *   allows capturing from the camera on mobile devices) and is currently\n   *   supported in all modern browsers (not supported in Internet Explorer or\n   *   Desktop Safari).\n   * - The `camera` and `dropbox` source options will appear only if the upload\n   *   widget is embedded in an HTTPS page.\n   */\n  sources?: (\n    | \"local\"\n    | \"url\"\n    | \"camera\"\n    | \"dropbox\"\n    | \"imageSearch\"\n    | \"facebook\"\n    | \"instagram\")[];\n\n  /**\n   * The source that's selected when the widget is opened.\n   *\n   * @default \"local\"\n   */\n  defaultSource?: NonNullable<CloudinaryOpenUploadWidgetOptions[\"sources\"]>[0];\n\n  /**\n   * Whether selecting and uploading multiple images is allowed. Completion\n   * callback is called only when all images complete uploading. If set to true,\n   * multiple hidden fields of image identifiers are created. If set to false,\n   * only a single image is allowed in any source.\n   *\n   * @default true\n   */\n  multiple?: boolean;\n\n  /**\n   * The maximum number of files allowed in multiple upload mode. If a user selects or drags more than the allowed\n   * amount, only the first maxImages files will be uploaded.\n   *\n   * @example 10\n   * @default null\n   */\n  maxFiles?: number | null;\n\n  /**\n   * Set to `true` if you want to allow your users to interactively crop their\n   * images before uploading them to Cloudinary. Interactive cropping allows\n   * users to mark the interesting part of images, and the selected dimensions\n   * are sent as the `customCoordinates` or `faceCoordinates` upload parameter,\n   * depending on the value used for `croppingCoordinatesMode`.\n   *\n   * Setting `gravity` to `custom` or `faces` (as appropriate) when generating\n   * delivery URLs will deliver the image with the cropping that the user\n   * defined in the widget. Incoming cropping can be applied before saving the\n   * image by including the crop mode set to `custom` gravity in your upload\n   * preset.\n   *\n   * Cropping is supported only with single-file uploading so make sure to also\n   * set the `multiple` widget parameter to `false` in order to enable\n   * interactive cropping.\n   *\n   * @default false\n   */\n  cropping?: boolean;\n\n  /**\n   * If specified, enforce the given aspect ratio on the selected region when\n   * performing interactive cropping. Relevant only if `cropping` is enabled.\n   *\n   * The aspect ratio is defined as width/height. For example, 0.5 for portrait\n   * oriented rectangle or 1 for square.\n   *\n   * @example 0.5\n   * @default null\n   */\n  croppingAspectRatio?: number | null;\n\n  /**\n   * Initialize the size of the cropping selection box to a different value from\n   * the default.\n   *\n   * Relevant only if the `cropping` feature is enabled.\n   *\n   * The `croppingDefaultSelectionRatio` value is calculated as a proportion of\n   * the image's size.\n   *\n   * Range `0.1` to `1.0`.\n   *\n   * @example 0.75\n   * @default 1.0\n   */\n  croppingDefaultSelectionRatio?: number;\n\n  /**\n   * Whether to display the cropping dimensions in the top left corner of the\n   * cropping region.\n   *\n   * Relevant only if the `cropping` feature is enabled.\n   *\n   * @default false\n   */\n  croppingShowDimensions?: boolean;\n\n  /**\n   * Determines how to apply the selected region coordinates. Relevant only if\n   * the cropping feature is enabled.\n   *\n   * `custom`: the selected region is set as the `customCoordinates` upload\n   * parameter (default).\n   *\n   * `face`: the selected region is set as the `faceCoordinates` upload\n   * parameter.\n   *\n   * @default \"custom\"\n   */\n  croppingCoordinatesMode?: \"custom\" | \"face\";\n\n  /**\n   * Whether to show a **Back** button when in cropping mode.\n   *\n   * Relevant only if the `cropping` feature is enabled.\n   *\n   * @default true\n   */\n  croppingShowBackButton?: boolean;\n\n  // Dropbox:\n\n  /**\n   * Your DropBox App key.\n   *\n   * Required if adding the `dropbox` source.\n   */\n  dropboxAppKey?: string;\n\n  // Facebook:\n\n  /**\n   * The App ID of your own Facebook application.\n   *\n   * Defaults to using the Cloudinary Media Upload app to access their Facebook\n   * accounts if not provided.\n   */\n  facebookAppId?: string;\n\n  // Image search:\n\n  /**\n   * Your API key needed to access Google APIs.\n   *\n   * Required if adding the imageSearch source.\n   */\n  googleApiKey?: string;\n\n  /**\n   * The URLs of sites to allow for Image Search. If more than one site is\n   * given, the Search by Site dropdown is added. To allow searching the entire\n   * web, use the value \"all\".\n   *\n   * The default value may be incorrect here, the documentation was ambiguous.\n   *\n   * @default [\"all\"]\n   */\n  searchBySites?: string[];\n\n  // Instagram:\n\n  /**\n   * The App ID of your own Instagram application for accessing your users\n   * Instagram accounts. Defaults to using the Cloudinary Media Upload app to\n   * access their Instagram accounts if not provided.\n   */\n  instagramClientId?: string;\n\n  // Upload parameters:\n\n  /**\n   * Custom public ID to assign to a single uploaded image. If not specified,\n   * either a randomly generated string or the original file name is used as the\n   * public ID according to the unsigned upload preset. To ensure secure usage,\n   * overwriting previously uploaded images sharing the same public ID is not\n   * supported (unless you also include \"overwrite = true\" in the upload\n   * preset).\n   *\n   * @example \"profile_11002\"\n   * @default null\n   */\n  publicId?: string | null;\n\n  /**\n   * Folder name for all uploaded images. Acts as the prefix of assigned public\n   * IDs.\n   *\n   * @example \"user_photos\"\n   * @default null\n   */\n  folder?: string | null;\n\n  /**\n   * One or more tags to assign to the uploaded images.\n   *\n   * @example [\"users\", \"content\"]\n   * @default null\n   */\n  tags?: string[] | null;\n\n  /**\n   * Limits uploaded files to the specified type. By default, all resource types\n   * are allowed.\n   *\n   * Possible values: `auto`, `image`, `video`, `raw`.\n   *\n   * @default \"auto\".\n   */\n  resourceType?: \"auto\" | \"image\" | \"video\" | \"raw\";\n\n  /**\n   * Additional context metadata to attach to the uploaded resources.\n   *\n   * @example { alt: \"my_alt\", caption: \"my_caption\" }\n   */\n  context?: Record<string, string>;\n\n  /**\n   * Either a string representing the precalculated signature of all upload\n   * parameters used, or a function to generate the signature string\n   * dynamically. The function accepts 2 parameters, the first is a\n   * resultCallback (function) and the second is an object with the relevant\n   * upload parameters that are needed for generating the signature.\n   *\n   * @example \"c347053314777423cd4f\"\n   *\n   * For details, see Generating authentication signatures.\n   * @see https://cloudinary.com/documentation/upload_images#generating_authentication_signatures\n   */\n  uploadSignature:\n    | string\n    | ((cb: (signature: string) => any, paramsToSign: any) => any);\n\n  // Client-side actions:\n\n  /**\n   * Allows client-side validation of the uploaded files based on their file\n   * extensions. You can specify one or more file extensions.\n   *\n   * @example [\"png\", \"gif\", \"jpeg\"]\n   * @default null\n   */\n  clientAllowedFormats?: string[];\n\n  /**\n   * If specified, perform client-side validation to prevent uploading files\n   * larger than the given bytes size.\n   *\n   * @example 1500000 (1.5 MB)\n   * @default null (no client-side limit)\n   *\n   * Notes:\n   * - Upload size is limited on the server-side by the maximum file size set in\n   * your account's Usage Limits.\n   * - The preview, crop, and pixel-count options are not available for files\n   * larger than 40MB (the files can still be uploaded).\n   */\n  maxFileSize?: number;\n\n  /**\n   * If specified, client-side scale-down resizing takes place before uploading\n   * if the width of the selected file is larger than the specified value.\n   *\n   * Alternatively, can be used in conjunction with `validateMaxWidthHeight` to\n   * prevent uploading of images that exceed this value.\n   *\n   * @example 2000\n   * @default null (no resizing)\n   */\n  maxImageWidth?: number;\n\n  /**\n   * If specified, client-side scale-down resizing takes place before uploading\n   * if the height of the selected file is larger than the specified value.\n   *\n   * Alternatively, can be used in conjunction with `validateMaxWidthHeight` to\n   * prevent uploading of images that exceed this value.\n   *\n   * @example 2000\n   * @default null (no resizing)\n   */\n  maxImageHeight?: number;\n\n  /**\n   * If specified, client-side validation takes place before uploading. If the\n   * width and/or height of the image is larger than `maxImageWidth` and/or\n   * `maxImageHeight` respectively, the upload is cancelled and no client-side\n   * scale-down resizing takes place.\n   *\n   * @default false (no validation)\n   */\n  validateMaxWidthHeight?: boolean;\n\n  /**\n   * If specified, client-side validation takes place before uploading. If the\n   * width of the selected file is smaller than the specified value, the upload\n   * is cancelled.\n   *\n   * @example 200\n   * @default null (no validation)\n   */\n  minImageWidth?: number | null;\n\n  /**\n   * @example 200\n   * @default null (no validation)\n   */\n  minImageHeight?: number | null;\n\n  croppingValidateDimensions?: boolean;\n\n  maxChunkSize?: number;\n\n  // Containing page update:\n\n  form?: string | null;\n\n  fieldName?: string;\n\n  thumbnails?: string | null;\n\n  thumbnailTransformation?: any;\n};\n\nexport type CloudinaryOpenMediaLibraryOptions = {\n  // Authentication:\n  cloud_name: string;\n  api_key: string;\n  username: string;\n  timestamp: string;\n  signature: string;\n\n  // Client-side:\n  button_caption?: string;\n  button_class?: string;\n  inline_container?: string;\n  z_index?: string;\n\n  // Media library behavior (show method):\n  default_transformations?: any;\n  max_files?: number;\n  multiple?: boolean;\n};\n\nexport type CloudinaryMediaLibrarySelectedItem = {\n  bytes: number;\n  context: Record<string, string>[];\n  created_at: string;\n  derived: { url: string; secure_url: string }[];\n  format: string;\n  height: number;\n  public_id: string;\n  resource_type: string;\n  secure_url: string;\n  tags: string[];\n  type: \"upload\";\n  url: string;\n  version: number;\n  width: number;\n  duration?: number;\n};\n\ntype CloudinaryUploadWidgetEvent =\n  | {\n      event: \"success\";\n      info: {\n        secure_url: string;\n      };\n    }\n  | { event: \"abort\" }\n  | { event: \"close\" };\n\n/**\n * Cloudinary client library.\n */\nexport type Cloudinary = {\n  /**\n   * Globally sets the cloud name for all widget method calls.\n   */\n  setCloudName: (name: string) => void;\n\n  openUploadWidget: (\n    options: CloudinaryOpenUploadWidgetOptions,\n    result: (err: any, event: CloudinaryUploadWidgetEvent) => any,\n  ) => void;\n\n  openMediaLibrary: (\n    options: CloudinaryOpenMediaLibraryOptions,\n    cb: {\n      insertHandler: (\n        data: {\n          assets: CloudinaryMediaLibrarySelectedItem[];\n        },\n      ) => void;\n    },\n  ) => void;\n};\n\ndeclare global {\n  interface Window {\n    cloudinary: Cloudinary | undefined;\n  }\n}\n","export type CreateResponsiveImageUrlOptions = {\n  w?: string;\n  h?: string;\n  q?: string;\n  format?: \"jpg\" | \"png\";\n};\n\n/**\n * Adds the requested transformations to the provided Cloudinary image url.\n *\n * @see https://cloudinary.com/documentation/image_transformations#resizing_and_cropping_images\n */\nexport function createResponsiveImageUrl(\n  imageUrl: string,\n  options: CreateResponsiveImageUrlOptions,\n) {\n  let computedImageUrl = imageUrl;\n  const params = Object.keys(options)\n    .filter(key => key !== \"format\")\n    .map(key => `${key}_${options[key as keyof typeof options]}`);\n\n  // Insert the transformation fragment after the \"upload\" fragment.\n  if (params.length > 0) {\n    const computedParams = params.join(\",\");\n    const fragments = computedImageUrl.split(\"/\");\n    computedImageUrl = fragments.reduce((accumulator, fragment, index) => {\n      return `${accumulator}${fragment}${fragment === \"upload\" ? `/${computedParams}` : \"\"}${index === fragments.length - 1 ? \"\" : \"/\"}`; // prettier-ignore\n    }, \"\");\n  }\n\n  // Swap out the trailing file extension.\n  if (options.format) {\n    const fileExtension = computedImageUrl.split(\".\").pop()!;\n    computedImageUrl = computedImageUrl\n      .replace(new RegExp(`${fileExtension}$`), \"\")\n      .concat(options.format);\n  }\n\n  return computedImageUrl;\n}\n","export * from \"./Cloudinary\";\nexport * from \"./createResponsiveImageUrl\";\nexport * from \"./withQueryLoadingSpinner\";\n","import { LoadingSpinner } from \"@join-uniform/components\";\nimport React, {\n  Attributes,\n  ComponentType,\n  ReactElement,\n  ReactNode,\n} from \"react\";\nimport { OperationVariables, QueryProps, QueryResult } from \"react-apollo\";\n\nexport type LoadedQueryResult<\n  TData = any,\n  TVariables = OperationVariables\n> = Omit<QueryResult<TData, TVariables>, \"data\"> & {\n  data: NonNullable<QueryResult<TData, TVariables>[\"data\"]>;\n};\n\nexport type WithQueryLoadingSpinnerChildren<\n  TData = any,\n  TVariables = OperationVariables\n> = (result: LoadedQueryResult<TData, TVariables>) => ReactNode;\n\nexport type WithQueryLoadingSpinnerOptions<\n  TData = any,\n  TVariables = OperationVariables\n> = Omit<QueryProps<TData, TVariables>, \"children\" | \"query\"> & Attributes;\n\nexport function withQueryLoadingSpinner<\n  TData = any,\n  TVariables = OperationVariables\n>(\n  QueryComponent: ComponentType<Partial<QueryProps<TData, TVariables>>>,\n  children: WithQueryLoadingSpinnerChildren<TData, TVariables>,\n): ReactElement<any>;\n\nexport function withQueryLoadingSpinner<\n  TData = any,\n  TVariables = OperationVariables\n>(\n  QueryComponent: ComponentType<Partial<QueryProps<TData, TVariables>>>,\n  options: WithQueryLoadingSpinnerOptions<TData, TVariables>,\n  children: WithQueryLoadingSpinnerChildren<TData, TVariables>,\n): ReactElement<any>;\n\nexport function withQueryLoadingSpinner<\n  TData = any,\n  TVariables = OperationVariables\n>(\n  QueryComponent: ComponentType<Partial<QueryProps<TData, TVariables>>>,\n  optionsOrChildren:\n    | WithQueryLoadingSpinnerChildren<TData, TVariables>\n    | WithQueryLoadingSpinnerOptions<TData, TVariables>,\n  maybeChildren?: WithQueryLoadingSpinnerChildren<TData, TVariables>,\n) {\n  const children = (maybeChildren ||\n    optionsOrChildren) as WithQueryLoadingSpinnerChildren<TData, TVariables>;\n  const options: WithQueryLoadingSpinnerOptions<\n    TData,\n    TVariables\n  > = maybeChildren\n    ? (optionsOrChildren as WithQueryLoadingSpinnerOptions<TData, TVariables>)\n    : {};\n\n  return (\n    <QueryComponent {...options}>\n      {result => {\n        if (result.loading || result.error) return <LoadingSpinner />;\n\n        return children(result as LoadedQueryResult<TData, TVariables>);\n      }}\n    </QueryComponent>\n  );\n}\n","import { LoadingSpinnerProvider } from \"@join-uniform/components\";\nimport { LightTheme, ThemeBaseline } from \"@join-uniform/theme\";\nimport App, { Container } from \"next/app\";\nimport React, { cloneElement, ReactElement, ReactNode } from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport {\n  MaterialUIThemeProvider,\n  RenderingAppProps,\n  SubmissionProgressDialog,\n  withApolloApp,\n  withLoadingSpinnerApp,\n  withMaterialUIApp,\n} from \"../lib/rendering\";\nimport { CloudinaryProvider } from \"../lib/utils\";\n\nclass MyApp extends App<RenderingAppProps> {\n  render() {\n    const {\n      Component,\n      pageProps,\n      apolloClient,\n      muiCssContext,\n      loadingSpinnerConfig,\n      router,\n    } = this.props;\n\n    const composedProviders = composeProviders(\n      <Container />,\n      <ApolloProvider client={apolloClient!}><></></ApolloProvider>, // prettier-ignore\n      <MaterialUIThemeProvider muiCssContext={muiCssContext!} />,\n      <LightTheme />,\n      <ThemeBaseline />,\n      <LoadingSpinnerProvider {...loadingSpinnerConfig!} />,\n      /^\\/admin/.test(router.pathname) && <CloudinaryProvider />,\n      <SubmissionProgressDialog />,\n      <Component {...pageProps} muiCssContext={muiCssContext} />,\n    );\n\n    return composedProviders;\n  }\n}\n\nexport default withApolloApp(withMaterialUIApp(withLoadingSpinnerApp(MyApp)));\n\nfunction composeProviders(\n  ...providers: (ReactElement<{ children?: ReactNode }> | false)[]\n) {\n  const filteredProviders = providers.filter(\n    (p): p is Exclude<typeof providers[0], boolean> => typeof p !== \"boolean\",\n  );\n  return filteredProviders.reduceRight((children, parent) => {\n    return cloneElement(parent, {}, children);\n  }, filteredProviders[0]);\n}\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@material-ui/core/AppBar\");","module.exports = require(\"@material-ui/core/Avatar\");","module.exports = require(\"@material-ui/core/Button\");","module.exports = require(\"@material-ui/core/Card\");","module.exports = require(\"@material-ui/core/CardActions\");","module.exports = require(\"@material-ui/core/CardContent\");","module.exports = require(\"@material-ui/core/Checkbox\");","module.exports = require(\"@material-ui/core/CircularProgress\");","module.exports = require(\"@material-ui/core/CssBaseline\");","module.exports = require(\"@material-ui/core/Dialog\");","module.exports = require(\"@material-ui/core/DialogContent\");","module.exports = require(\"@material-ui/core/Divider\");","module.exports = require(\"@material-ui/core/Drawer\");","module.exports = require(\"@material-ui/core/Fade\");","module.exports = require(\"@material-ui/core/FormControl\");","module.exports = require(\"@material-ui/core/FormControlLabel\");","module.exports = require(\"@material-ui/core/FormLabel\");","module.exports = require(\"@material-ui/core/Grid\");","module.exports = require(\"@material-ui/core/Hidden\");","module.exports = require(\"@material-ui/core/Icon\");","module.exports = require(\"@material-ui/core/IconButton\");","module.exports = require(\"@material-ui/core/Input\");","module.exports = require(\"@material-ui/core/InputLabel\");","module.exports = require(\"@material-ui/core/List\");","module.exports = require(\"@material-ui/core/ListItem\");","module.exports = require(\"@material-ui/core/ListItemIcon\");","module.exports = require(\"@material-ui/core/ListItemText\");","module.exports = require(\"@material-ui/core/MenuItem\");","module.exports = require(\"@material-ui/core/Paper\");","module.exports = require(\"@material-ui/core/Popover\");","module.exports = require(\"@material-ui/core/Radio\");","module.exports = require(\"@material-ui/core/RadioGroup\");","module.exports = require(\"@material-ui/core/Select\");","module.exports = require(\"@material-ui/core/SvgIcon\");","module.exports = require(\"@material-ui/core/Switch\");","module.exports = require(\"@material-ui/core/Table\");","module.exports = require(\"@material-ui/core/TableBody\");","module.exports = require(\"@material-ui/core/TableCell\");","module.exports = require(\"@material-ui/core/TableFooter\");","module.exports = require(\"@material-ui/core/TableHead\");","module.exports = require(\"@material-ui/core/TablePagination\");","module.exports = require(\"@material-ui/core/TableRow\");","module.exports = require(\"@material-ui/core/TextField\");","module.exports = require(\"@material-ui/core/Toolbar\");","module.exports = require(\"@material-ui/core/Tooltip\");","module.exports = require(\"@material-ui/core/Typography\");","module.exports = require(\"@material-ui/core/styles\");","module.exports = require(\"@material-ui/core/styles/MuiThemeProvider\");","module.exports = require(\"@material-ui/core/styles/colorManipulator\");","module.exports = require(\"@material-ui/core/styles/createBreakpoints\");","module.exports = require(\"@material-ui/core/styles/createGenerateClassName\");","module.exports = require(\"@material-ui/core/styles/createMuiTheme\");","module.exports = require(\"@material-ui/icons/Add\");","module.exports = require(\"@material-ui/icons/CloudUpload\");","module.exports = require(\"@material-ui/icons/Collections\");","module.exports = require(\"@material-ui/icons/Dashboard\");","module.exports = require(\"@material-ui/icons/Delete\");","module.exports = require(\"@material-ui/icons/Done\");","module.exports = require(\"@material-ui/icons/DragHandle\");","module.exports = require(\"@material-ui/icons/Edit\");","module.exports = require(\"@material-ui/icons/Menu\");","module.exports = require(\"@material-ui/icons/PowerSettingsNew\");","module.exports = require(\"@material-ui/icons/Remove\");","module.exports = require(\"@material-ui/icons/Texture\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link\");","module.exports = require(\"apollo-link-error\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"jss\");","module.exports = require(\"next/app\");","module.exports = require(\"next/config\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-jss/lib/JssProvider\");","module.exports = require(\"react-localization\");","module.exports = require(\"react-sortable-hoc\");","module.exports = require(\"styled-components\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAEA;AAEA;AAIA;AAEA;AAEA;AAEA;AAIA;AAEA;AAIA;AAEA;AAEA;AAEA;AAIA;AAEA;AAEA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAEA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AC9JA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAA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":""}