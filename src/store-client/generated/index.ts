// Code generated by github.com/prisma/graphqlgen, DO NOT EDIT.

import { GraphQLResolveInfo } from "graphql";
import { Context } from "../Context";
import { Localization } from "../../models/Localization";

export namespace QueryResolvers {
  export const defaultResolvers = {};

  export type LocalizationResolver = (
    parent: {},
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo,
  ) => Localization | Promise<Localization>;

  export interface Type {
    localization: (
      parent: {},
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo,
    ) => Localization | Promise<Localization>;
  }
}

export namespace MutationResolvers {
  export const defaultResolvers = {};

  export interface ArgsSetlocalizationlanguage {
    language: string;
  }

  export type SetlocalizationlanguageResolver = (
    parent: {},
    args: ArgsSetlocalizationlanguage,
    ctx: Context,
    info: GraphQLResolveInfo,
  ) => string | Promise<string>;

  export interface Type {
    setLocalizationLanguage: (
      parent: {},
      args: ArgsSetlocalizationlanguage,
      ctx: Context,
      info: GraphQLResolveInfo,
    ) => string | Promise<string>;
  }
}

export namespace LocalizationResolvers {
  export const defaultResolvers = {
    localizationLanguage: (parent: Localization) => parent.localizationLanguage,
  };

  export type LocalizationlanguageResolver = (
    parent: Localization,
    args: {},
    ctx: Context,
    info: GraphQLResolveInfo,
  ) => string | null | Promise<string | null>;

  export interface Type {
    localizationLanguage: (
      parent: Localization,
      args: {},
      ctx: Context,
      info: GraphQLResolveInfo,
    ) => string | null | Promise<string | null>;
  }
}

export interface Resolvers {
  Query: QueryResolvers.Type;
  Mutation: MutationResolvers.Type;
  Localization: LocalizationResolvers.Type;
}
