# This is an automatically generated file.
# DO NOT MODIFY
# Use the command: "yarn graphql" to regenerate.

# Represents an Entry Category.
type Category {
  id: ID!
  name: String!
  education: String!
  pricePerPaperRs: Int!
  activated: Boolean!
}

# Authentication parameters for Cloudinary Media Library widget.
type CloudinaryMediaWidgetAuthenticationToken {
  cloud_name: String!
  api_key: String!
  username: String!
  timestamp: String!
  signature: String!
}

input CreateCategoryRequest {
  name: String!
  education: String!
  pricePerPaperRs: Int!
  entryId: ID!
}

input CreateEntryRequest {
  name: String!
  explanation: String!
  logoUrl: String!
}

# Represents a military service branch (Entry).
type Entry {
  id: ID!
  name: String!
  logoUrl: String!
  description: String!
  categories: [Category]!
}

# Configuration for the html document sent in response to all requests.
type HtmlConfig {
  # Google Analytics ID.
  googleAnalyticsId: String

  # Meta "keywords" tag.
  metaKeywords: String

  # Meta "description" tag.
  metaDescription: String

  # Meta "author" tag.
  metaAuthor: String

  # Meta "abstract" tag.
  metaAbstract: String

  # Meta "copyright" tag.
  metaCopyright: String
}

# One of the Index Cards on main landing page.
type IndexCard {
  # Same as the id for the Entry the IndexCard represents.
  id: ID!
  title: String!
  categories: [IndexCardCategory!]!
  entryLogoUrl: String!
  colorBlock: String!
  colorCategoryBackground: String!
  colorLogoBackground: String!
  colorTitle: String!
}

type IndexCardCategory {
  # Id of the category.
  id: ID!
  title: String!
  visible: Boolean!
}

# Image and supporting text in index about section.
type IndexPageAboutImage {
  id: ID!

  # Image URL.
  imageUrl: String!

  # Large text below image.
  title: LocalizedString!

  # Small text below image.
  text: LocalizedString!
}

# Configuration for the landing page / index page.
type IndexPageConfig {
  # Always "index-page-config".
  id: ID!

  # The url to the hero image.
  heroBackgroundImageUrl: String!

  # The transparency of the hero image.
  heroBackgroundAlpha: Float!

  # The primary hero text (large top text).
  heroPrimaryText: LocalizedString!

  # List of features below the primary hero text.
  heroFeatures: [LocalizedString!]!

  # Text in the green section below the hero section.
  heroFooterText: LocalizedString!

  # About section title.
  aboutTitle: LocalizedString!

  # Text below the about title.
  aboutText: LocalizedString!

  # Images in the about section.
  aboutImages: [IndexPageAboutImage!]!
}

type IndexYouTubeVideo {
  # Will contain the Entry ID that the video corresponds to assuming that the
  # Entry has not been removed.
  entryId: ID

  # Order of appearance.
  position: Int!
  youtubeUrl: String!
  title: LocalizedString!
}

scalar Json

# Represents a localized string.
# The Hindi field is optional.
#
# Fields:
# - en: String!
# - hi: String
scalar LocalizedString

# Logo image configuration.
type LogoConfig {
  id: ID!

  # Url of logo image.
  url: String!
}

type Mutation {
  _empty: Boolean
  createCategory(request: CreateCategoryRequest!): Category!
  createEntry(request: CreateEntryRequest!): Entry!

  # Deletes Categories. It removes both the Category database entry and the
  # Category's id from the corresponding Entry objects in the database. It
  # returns the list of remaining Categories.
  deleteCategories(categoryIds: [ID!]!): [Category!]!

  # Deletes the specified Entries. They most not have any Categories
  # associated with them.
  # Returns the remaining Entries.
  deleteEntries(entryIds: [ID!]!): [Entry!]!

  # Generates the authentication parameters required for creating a session for
  # use with the Cloudinary Media Library widget.
  generateCloudinaryMediaLibraryAuthenticationToken: CloudinaryMediaWidgetAuthenticationToken!

  # Signs the parameters passed by the Cloudinary Upload Widget.
  # See: https://cloudinary.com/documentation/upload_widget#signed_uploads
  generateCloudinarySignature(paramsToSign: Json!): String!

  # Sets the activation status for the specified categories. The number of ids
  # needs to match the number of booleans.
  # Returns the updated Categories.
  setCategoryActivationStatuses(categoryIds: [ID!]!, activatedStatuses: [Boolean!]!): [Category!]!
  updateCategory(categoryId: ID!, update: UpdateCategoryRequest!): Category!
  updateEntry(entryId: ID!, update: UpdateEntryRequest!): Entry!
  updateIndexCards(request: [UpdateIndexCardsRequest!]!): [IndexCard!]!

  # Updates the Index Page configuration. It returns the updated
  # configuration.
  updateIndexPage(request: UpdateIndexPageRequest!): IndexPageConfig!
  updateLogoUrl(logoUrl: String!): LogoConfig!
}

type Query {
  _empty: Boolean

  # Returns all Categories.
  categories: [Category!]!
  categoriesByEntryId(id: ID!): [Category!]!
  categoriesByIds(ids: [ID!]!): [Category!]!
  cloudinaryCloudName: String!
  cloudinaryApiKey: String!
  entries: [Entry!]!
  entriesByIds(ids: [ID!]!): [Entry!]!
  htmlConfig: HtmlConfig!
  indexCards: [IndexCard!]!

  # Return the Index Cards for the specified Entries.
  indexCardsByEntryIds(ids: [ID!]!): [IndexCard!]!
  indexPageConfig: IndexPageConfig!
  logoConfig: LogoConfig!
  youtubeVideos: [IndexYouTubeVideo!]!
}

input UpdateCategoryRequest {
  name: String!
  education: String!
  pricePerPaperRs: Int!
}

input UpdateEntryRequest {
  name: String!
  logoUrl: String!
  description: String!
}

input UpdateIndexCardsCategoriesRequest {
  # Id of the category.
  id: ID!
  visible: Boolean!
}

input UpdateIndexCardsRequest {
  # Same as the id for the Entry the IndexCard represents.
  id: ID!
  categories: [UpdateIndexCardsCategoriesRequest!]!
  colorBlock: String!
  colorCategoryBackground: String!
  colorLogoBackground: String!
  colorTitle: String!
}

input UpdateIndexPageAboutImageRequest {
  id: ID!
  imageUrl: String!
  title: LocalizedString!
  text: LocalizedString!
}

input UpdateIndexPageRequest {
  heroBackgroundImageUrl: String!
  heroBackgroundAlpha: Float!
  heroPrimaryTextEnglish: String!
  heroPrimaryTextHindi: String
  heroFeatures: [LocalizedString!]!
  heroFooterTextEnglish: String!
  heroFooterTextHindi: String
  aboutTitleEnglish: String!
  aboutTitleHindi: String
  aboutTextEnglish: String!
  aboutTextHindi: String
  aboutImages: [UpdateIndexPageAboutImageRequest!]!
}
